// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: image.proto

package com.islandturtlewatch.nest.data;

public final class ImageProto {
  private ImageProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ImageRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.ImageRef)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string owner_id = 1;</code>
     */
    boolean hasOwnerId();
    /**
     * <code>optional string owner_id = 1;</code>
     */
    java.lang.String getOwnerId();
    /**
     * <code>optional string owner_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getOwnerIdBytes();

    /**
     * <code>optional uint64 report_id = 2;</code>
     */
    boolean hasReportId();
    /**
     * <code>optional uint64 report_id = 2;</code>
     */
    long getReportId();

    /**
     * <code>optional string image_name = 3;</code>
     */
    boolean hasImageName();
    /**
     * <code>optional string image_name = 3;</code>
     */
    java.lang.String getImageName();
    /**
     * <code>optional string image_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getImageNameBytes();
  }
  /**
   * <pre>
   * Uniquely identify an image.
   * </pre>
   *
   * Protobuf type {@code com.islandturtlewatch.nest.data.ImageRef}
   */
  public  static final class ImageRef extends
      com.google.protobuf.GeneratedMessageLite<
          ImageRef, ImageRef.Builder> implements
      // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.ImageRef)
      ImageRefOrBuilder {
    private ImageRef() {
      ownerId_ = "";
      imageName_ = "";
    }
    private int bitField0_;
    public static final int OWNER_ID_FIELD_NUMBER = 1;
    private java.lang.String ownerId_;
    /**
     * <code>optional string owner_id = 1;</code>
     */
    @java.lang.Override
    public boolean hasOwnerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string owner_id = 1;</code>
     */
    @java.lang.Override
    public java.lang.String getOwnerId() {
      return ownerId_;
    }
    /**
     * <code>optional string owner_id = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOwnerIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ownerId_);
    }
    /**
     * <code>optional string owner_id = 1;</code>
     */
    private void setOwnerId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      ownerId_ = value;
    }
    /**
     * <code>optional string owner_id = 1;</code>
     */
    private void clearOwnerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      ownerId_ = getDefaultInstance().getOwnerId();
    }
    /**
     * <code>optional string owner_id = 1;</code>
     */
    private void setOwnerIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      ownerId_ = value.toStringUtf8();
    }

    public static final int REPORT_ID_FIELD_NUMBER = 2;
    private long reportId_;
    /**
     * <code>optional uint64 report_id = 2;</code>
     */
    @java.lang.Override
    public boolean hasReportId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 report_id = 2;</code>
     */
    @java.lang.Override
    public long getReportId() {
      return reportId_;
    }
    /**
     * <code>optional uint64 report_id = 2;</code>
     */
    private void setReportId(long value) {
      bitField0_ |= 0x00000002;
      reportId_ = value;
    }
    /**
     * <code>optional uint64 report_id = 2;</code>
     */
    private void clearReportId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      reportId_ = 0L;
    }

    public static final int IMAGE_NAME_FIELD_NUMBER = 3;
    private java.lang.String imageName_;
    /**
     * <code>optional string image_name = 3;</code>
     */
    @java.lang.Override
    public boolean hasImageName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string image_name = 3;</code>
     */
    @java.lang.Override
    public java.lang.String getImageName() {
      return imageName_;
    }
    /**
     * <code>optional string image_name = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getImageNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(imageName_);
    }
    /**
     * <code>optional string image_name = 3;</code>
     */
    private void setImageName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      imageName_ = value;
    }
    /**
     * <code>optional string image_name = 3;</code>
     */
    private void clearImageName() {
      bitField0_ = (bitField0_ & ~0x00000004);
      imageName_ = getDefaultInstance().getImageName();
    }
    /**
     * <code>optional string image_name = 3;</code>
     */
    private void setImageNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      imageName_ = value.toStringUtf8();
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getOwnerId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, reportId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getImageName());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getOwnerId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, reportId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getImageName());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.islandturtlewatch.nest.data.ImageProto.ImageRef parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageRef parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageRef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageRef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageRef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageRef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageRef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageRef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageRef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageRef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.islandturtlewatch.nest.data.ImageProto.ImageRef prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Uniquely identify an image.
     * </pre>
     *
     * Protobuf type {@code com.islandturtlewatch.nest.data.ImageRef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.islandturtlewatch.nest.data.ImageProto.ImageRef, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.ImageRef)
        com.islandturtlewatch.nest.data.ImageProto.ImageRefOrBuilder {
      // Construct using com.islandturtlewatch.nest.data.ImageProto.ImageRef.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string owner_id = 1;</code>
       */
      @java.lang.Override
      public boolean hasOwnerId() {
        return instance.hasOwnerId();
      }
      /**
       * <code>optional string owner_id = 1;</code>
       */
      @java.lang.Override
      public java.lang.String getOwnerId() {
        return instance.getOwnerId();
      }
      /**
       * <code>optional string owner_id = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getOwnerIdBytes() {
        return instance.getOwnerIdBytes();
      }
      /**
       * <code>optional string owner_id = 1;</code>
       */
      public Builder setOwnerId(
          java.lang.String value) {
        copyOnWrite();
        instance.setOwnerId(value);
        return this;
      }
      /**
       * <code>optional string owner_id = 1;</code>
       */
      public Builder clearOwnerId() {
        copyOnWrite();
        instance.clearOwnerId();
        return this;
      }
      /**
       * <code>optional string owner_id = 1;</code>
       */
      public Builder setOwnerIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setOwnerIdBytes(value);
        return this;
      }

      /**
       * <code>optional uint64 report_id = 2;</code>
       */
      @java.lang.Override
      public boolean hasReportId() {
        return instance.hasReportId();
      }
      /**
       * <code>optional uint64 report_id = 2;</code>
       */
      @java.lang.Override
      public long getReportId() {
        return instance.getReportId();
      }
      /**
       * <code>optional uint64 report_id = 2;</code>
       */
      public Builder setReportId(long value) {
        copyOnWrite();
        instance.setReportId(value);
        return this;
      }
      /**
       * <code>optional uint64 report_id = 2;</code>
       */
      public Builder clearReportId() {
        copyOnWrite();
        instance.clearReportId();
        return this;
      }

      /**
       * <code>optional string image_name = 3;</code>
       */
      @java.lang.Override
      public boolean hasImageName() {
        return instance.hasImageName();
      }
      /**
       * <code>optional string image_name = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getImageName() {
        return instance.getImageName();
      }
      /**
       * <code>optional string image_name = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getImageNameBytes() {
        return instance.getImageNameBytes();
      }
      /**
       * <code>optional string image_name = 3;</code>
       */
      public Builder setImageName(
          java.lang.String value) {
        copyOnWrite();
        instance.setImageName(value);
        return this;
      }
      /**
       * <code>optional string image_name = 3;</code>
       */
      public Builder clearImageName() {
        copyOnWrite();
        instance.clearImageName();
        return this;
      }
      /**
       * <code>optional string image_name = 3;</code>
       */
      public Builder setImageNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setImageNameBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.ImageRef)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.islandturtlewatch.nest.data.ImageProto.ImageRef();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.islandturtlewatch.nest.data.ImageProto.ImageRef other = (com.islandturtlewatch.nest.data.ImageProto.ImageRef) arg1;
          ownerId_ = visitor.visitString(
              hasOwnerId(), ownerId_,
              other.hasOwnerId(), other.ownerId_);
          reportId_ = visitor.visitLong(
              hasReportId(), reportId_,
              other.hasReportId(), other.reportId_);
          imageName_ = visitor.visitString(
              hasImageName(), imageName_,
              other.hasImageName(), other.imageName_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000001;
                  ownerId_ = s;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  reportId_ = input.readUInt64();
                  break;
                }
                case 26: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000004;
                  imageName_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ImageProto.ImageRef> parser = PARSER;
          if (parser == null) {
            synchronized (com.islandturtlewatch.nest.data.ImageProto.ImageRef.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.ImageRef)
    private static final com.islandturtlewatch.nest.data.ImageProto.ImageRef DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ImageRef();
    }

    public static com.islandturtlewatch.nest.data.ImageProto.ImageRef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ImageRef> PARSER;

    public static com.google.protobuf.Parser<ImageRef> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ImageUploadRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.ImageUploadRef)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    boolean hasImage();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    com.islandturtlewatch.nest.data.ImageProto.ImageRef getImage();

    /**
     * <code>optional string url = 2;</code>
     */
    boolean hasUrl();
    /**
     * <code>optional string url = 2;</code>
     */
    java.lang.String getUrl();
    /**
     * <code>optional string url = 2;</code>
     */
    com.google.protobuf.ByteString
        getUrlBytes();
  }
  /**
   * Protobuf type {@code com.islandturtlewatch.nest.data.ImageUploadRef}
   */
  public  static final class ImageUploadRef extends
      com.google.protobuf.GeneratedMessageLite<
          ImageUploadRef, ImageUploadRef.Builder> implements
      // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.ImageUploadRef)
      ImageUploadRefOrBuilder {
    private ImageUploadRef() {
      url_ = "";
    }
    private int bitField0_;
    public static final int IMAGE_FIELD_NUMBER = 1;
    private com.islandturtlewatch.nest.data.ImageProto.ImageRef image_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    @java.lang.Override
    public boolean hasImage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ImageProto.ImageRef getImage() {
      return image_ == null ? com.islandturtlewatch.nest.data.ImageProto.ImageRef.getDefaultInstance() : image_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    private void setImage(com.islandturtlewatch.nest.data.ImageProto.ImageRef value) {
      if (value == null) {
        throw new NullPointerException();
      }
      image_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    private void setImage(
        com.islandturtlewatch.nest.data.ImageProto.ImageRef.Builder builderForValue) {
      image_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeImage(com.islandturtlewatch.nest.data.ImageProto.ImageRef value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (image_ != null &&
          image_ != com.islandturtlewatch.nest.data.ImageProto.ImageRef.getDefaultInstance()) {
        image_ =
          com.islandturtlewatch.nest.data.ImageProto.ImageRef.newBuilder(image_).mergeFrom(value).buildPartial();
      } else {
        image_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    private void clearImage() {  image_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int URL_FIELD_NUMBER = 2;
    private java.lang.String url_;
    /**
     * <code>optional string url = 2;</code>
     */
    @java.lang.Override
    public boolean hasUrl() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string url = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getUrl() {
      return url_;
    }
    /**
     * <code>optional string url = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUrlBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(url_);
    }
    /**
     * <code>optional string url = 2;</code>
     */
    private void setUrl(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      url_ = value;
    }
    /**
     * <code>optional string url = 2;</code>
     */
    private void clearUrl() {
      bitField0_ = (bitField0_ & ~0x00000002);
      url_ = getDefaultInstance().getUrl();
    }
    /**
     * <code>optional string url = 2;</code>
     */
    private void setUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      url_ = value.toStringUtf8();
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getImage());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getUrl());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getImage());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getUrl());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.ImageUploadRef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.ImageUploadRef)
        com.islandturtlewatch.nest.data.ImageProto.ImageUploadRefOrBuilder {
      // Construct using com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
       */
      @java.lang.Override
      public boolean hasImage() {
        return instance.hasImage();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ImageProto.ImageRef getImage() {
        return instance.getImage();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
       */
      public Builder setImage(com.islandturtlewatch.nest.data.ImageProto.ImageRef value) {
        copyOnWrite();
        instance.setImage(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
       */
      public Builder setImage(
          com.islandturtlewatch.nest.data.ImageProto.ImageRef.Builder builderForValue) {
        copyOnWrite();
        instance.setImage(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
       */
      public Builder mergeImage(com.islandturtlewatch.nest.data.ImageProto.ImageRef value) {
        copyOnWrite();
        instance.mergeImage(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
       */
      public Builder clearImage() {  copyOnWrite();
        instance.clearImage();
        return this;
      }

      /**
       * <code>optional string url = 2;</code>
       */
      @java.lang.Override
      public boolean hasUrl() {
        return instance.hasUrl();
      }
      /**
       * <code>optional string url = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getUrl() {
        return instance.getUrl();
      }
      /**
       * <code>optional string url = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUrlBytes() {
        return instance.getUrlBytes();
      }
      /**
       * <code>optional string url = 2;</code>
       */
      public Builder setUrl(
          java.lang.String value) {
        copyOnWrite();
        instance.setUrl(value);
        return this;
      }
      /**
       * <code>optional string url = 2;</code>
       */
      public Builder clearUrl() {
        copyOnWrite();
        instance.clearUrl();
        return this;
      }
      /**
       * <code>optional string url = 2;</code>
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUrlBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.ImageUploadRef)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef other = (com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef) arg1;
          image_ = visitor.visitMessage(image_, other.image_);
          url_ = visitor.visitString(
              hasUrl(), url_,
              other.hasUrl(), other.url_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.islandturtlewatch.nest.data.ImageProto.ImageRef.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = image_.toBuilder();
                  }
                  image_ = input.readMessage(com.islandturtlewatch.nest.data.ImageProto.ImageRef.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(image_);
                    image_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000002;
                  url_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef> parser = PARSER;
          if (parser == null) {
            synchronized (com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.ImageUploadRef)
    private static final com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ImageUploadRef();
    }

    public static com.islandturtlewatch.nest.data.ImageProto.ImageUploadRef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ImageUploadRef> PARSER;

    public static com.google.protobuf.Parser<ImageUploadRef> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ImageDownloadRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.ImageDownloadRef)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    boolean hasImage();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    com.islandturtlewatch.nest.data.ImageProto.ImageRef getImage();

    /**
     * <code>optional string url = 2;</code>
     */
    boolean hasUrl();
    /**
     * <code>optional string url = 2;</code>
     */
    java.lang.String getUrl();
    /**
     * <code>optional string url = 2;</code>
     */
    com.google.protobuf.ByteString
        getUrlBytes();
  }
  /**
   * Protobuf type {@code com.islandturtlewatch.nest.data.ImageDownloadRef}
   */
  public  static final class ImageDownloadRef extends
      com.google.protobuf.GeneratedMessageLite<
          ImageDownloadRef, ImageDownloadRef.Builder> implements
      // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.ImageDownloadRef)
      ImageDownloadRefOrBuilder {
    private ImageDownloadRef() {
      url_ = "";
    }
    private int bitField0_;
    public static final int IMAGE_FIELD_NUMBER = 1;
    private com.islandturtlewatch.nest.data.ImageProto.ImageRef image_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    @java.lang.Override
    public boolean hasImage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ImageProto.ImageRef getImage() {
      return image_ == null ? com.islandturtlewatch.nest.data.ImageProto.ImageRef.getDefaultInstance() : image_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    private void setImage(com.islandturtlewatch.nest.data.ImageProto.ImageRef value) {
      if (value == null) {
        throw new NullPointerException();
      }
      image_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    private void setImage(
        com.islandturtlewatch.nest.data.ImageProto.ImageRef.Builder builderForValue) {
      image_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeImage(com.islandturtlewatch.nest.data.ImageProto.ImageRef value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (image_ != null &&
          image_ != com.islandturtlewatch.nest.data.ImageProto.ImageRef.getDefaultInstance()) {
        image_ =
          com.islandturtlewatch.nest.data.ImageProto.ImageRef.newBuilder(image_).mergeFrom(value).buildPartial();
      } else {
        image_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
     */
    private void clearImage() {  image_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int URL_FIELD_NUMBER = 2;
    private java.lang.String url_;
    /**
     * <code>optional string url = 2;</code>
     */
    @java.lang.Override
    public boolean hasUrl() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string url = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getUrl() {
      return url_;
    }
    /**
     * <code>optional string url = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUrlBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(url_);
    }
    /**
     * <code>optional string url = 2;</code>
     */
    private void setUrl(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      url_ = value;
    }
    /**
     * <code>optional string url = 2;</code>
     */
    private void clearUrl() {
      bitField0_ = (bitField0_ & ~0x00000002);
      url_ = getDefaultInstance().getUrl();
    }
    /**
     * <code>optional string url = 2;</code>
     */
    private void setUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      url_ = value.toStringUtf8();
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getImage());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getUrl());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getImage());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getUrl());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.ImageDownloadRef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.ImageDownloadRef)
        com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRefOrBuilder {
      // Construct using com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
       */
      @java.lang.Override
      public boolean hasImage() {
        return instance.hasImage();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ImageProto.ImageRef getImage() {
        return instance.getImage();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
       */
      public Builder setImage(com.islandturtlewatch.nest.data.ImageProto.ImageRef value) {
        copyOnWrite();
        instance.setImage(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
       */
      public Builder setImage(
          com.islandturtlewatch.nest.data.ImageProto.ImageRef.Builder builderForValue) {
        copyOnWrite();
        instance.setImage(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
       */
      public Builder mergeImage(com.islandturtlewatch.nest.data.ImageProto.ImageRef value) {
        copyOnWrite();
        instance.mergeImage(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ImageRef image = 1;</code>
       */
      public Builder clearImage() {  copyOnWrite();
        instance.clearImage();
        return this;
      }

      /**
       * <code>optional string url = 2;</code>
       */
      @java.lang.Override
      public boolean hasUrl() {
        return instance.hasUrl();
      }
      /**
       * <code>optional string url = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getUrl() {
        return instance.getUrl();
      }
      /**
       * <code>optional string url = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUrlBytes() {
        return instance.getUrlBytes();
      }
      /**
       * <code>optional string url = 2;</code>
       */
      public Builder setUrl(
          java.lang.String value) {
        copyOnWrite();
        instance.setUrl(value);
        return this;
      }
      /**
       * <code>optional string url = 2;</code>
       */
      public Builder clearUrl() {
        copyOnWrite();
        instance.clearUrl();
        return this;
      }
      /**
       * <code>optional string url = 2;</code>
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUrlBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.ImageDownloadRef)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef other = (com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef) arg1;
          image_ = visitor.visitMessage(image_, other.image_);
          url_ = visitor.visitString(
              hasUrl(), url_,
              other.hasUrl(), other.url_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.islandturtlewatch.nest.data.ImageProto.ImageRef.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = image_.toBuilder();
                  }
                  image_ = input.readMessage(com.islandturtlewatch.nest.data.ImageProto.ImageRef.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(image_);
                    image_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000002;
                  url_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef> parser = PARSER;
          if (parser == null) {
            synchronized (com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.ImageDownloadRef)
    private static final com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ImageDownloadRef();
    }

    public static com.islandturtlewatch.nest.data.ImageProto.ImageDownloadRef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ImageDownloadRef> PARSER;

    public static com.google.protobuf.Parser<ImageDownloadRef> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
