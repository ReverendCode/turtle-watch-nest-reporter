// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: report.proto

package com.islandturtlewatch.nest.data;

public final class ReportProto {
  private ReportProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ReportWrapperOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.ReportWrapper)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
     */
    boolean hasReport();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.Report getReport();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
     */
    boolean hasRef();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.ReportRef getRef();

    /**
     * <code>optional bool active = 3;</code>
     */
    boolean hasActive();
    /**
     * <code>optional bool active = 3;</code>
     */
    boolean getActive();
  }
  /**
   * <pre>
   * Represents a saved report with metadata.
   * </pre>
   *
   * Protobuf type {@code com.islandturtlewatch.nest.data.ReportWrapper}
   */
  public  static final class ReportWrapper extends
      com.google.protobuf.GeneratedMessageLite<
          ReportWrapper, ReportWrapper.Builder> implements
      // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.ReportWrapper)
      ReportWrapperOrBuilder {
    private ReportWrapper() {
    }
    private int bitField0_;
    public static final int REPORT_FIELD_NUMBER = 1;
    private com.islandturtlewatch.nest.data.ReportProto.Report report_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
     */
    @java.lang.Override
    public boolean hasReport() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.Report getReport() {
      return report_ == null ? com.islandturtlewatch.nest.data.ReportProto.Report.getDefaultInstance() : report_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
     */
    private void setReport(com.islandturtlewatch.nest.data.ReportProto.Report value) {
      if (value == null) {
        throw new NullPointerException();
      }
      report_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
     */
    private void setReport(
        com.islandturtlewatch.nest.data.ReportProto.Report.Builder builderForValue) {
      report_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeReport(com.islandturtlewatch.nest.data.ReportProto.Report value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (report_ != null &&
          report_ != com.islandturtlewatch.nest.data.ReportProto.Report.getDefaultInstance()) {
        report_ =
          com.islandturtlewatch.nest.data.ReportProto.Report.newBuilder(report_).mergeFrom(value).buildPartial();
      } else {
        report_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
     */
    private void clearReport() {  report_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int REF_FIELD_NUMBER = 2;
    private com.islandturtlewatch.nest.data.ReportProto.ReportRef ref_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
     */
    @java.lang.Override
    public boolean hasRef() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.ReportRef getRef() {
      return ref_ == null ? com.islandturtlewatch.nest.data.ReportProto.ReportRef.getDefaultInstance() : ref_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
     */
    private void setRef(com.islandturtlewatch.nest.data.ReportProto.ReportRef value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ref_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
     */
    private void setRef(
        com.islandturtlewatch.nest.data.ReportProto.ReportRef.Builder builderForValue) {
      ref_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeRef(com.islandturtlewatch.nest.data.ReportProto.ReportRef value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (ref_ != null &&
          ref_ != com.islandturtlewatch.nest.data.ReportProto.ReportRef.getDefaultInstance()) {
        ref_ =
          com.islandturtlewatch.nest.data.ReportProto.ReportRef.newBuilder(ref_).mergeFrom(value).buildPartial();
      } else {
        ref_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
     */
    private void clearRef() {  ref_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int ACTIVE_FIELD_NUMBER = 3;
    private boolean active_;
    /**
     * <code>optional bool active = 3;</code>
     */
    @java.lang.Override
    public boolean hasActive() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool active = 3;</code>
     */
    @java.lang.Override
    public boolean getActive() {
      return active_;
    }
    /**
     * <code>optional bool active = 3;</code>
     */
    private void setActive(boolean value) {
      bitField0_ |= 0x00000004;
      active_ = value;
    }
    /**
     * <code>optional bool active = 3;</code>
     */
    private void clearActive() {
      bitField0_ = (bitField0_ & ~0x00000004);
      active_ = false;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getReport());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getRef());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, active_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getReport());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRef());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, active_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.islandturtlewatch.nest.data.ReportProto.ReportWrapper parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportWrapper parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportWrapper parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportWrapper parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportWrapper parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportWrapper parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportWrapper parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportWrapper parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportWrapper parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportWrapper parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportWrapper parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportWrapper parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.ReportWrapper prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Represents a saved report with metadata.
     * </pre>
     *
     * Protobuf type {@code com.islandturtlewatch.nest.data.ReportWrapper}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.islandturtlewatch.nest.data.ReportProto.ReportWrapper, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.ReportWrapper)
        com.islandturtlewatch.nest.data.ReportProto.ReportWrapperOrBuilder {
      // Construct using com.islandturtlewatch.nest.data.ReportProto.ReportWrapper.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
       */
      @java.lang.Override
      public boolean hasReport() {
        return instance.hasReport();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.Report getReport() {
        return instance.getReport();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
       */
      public Builder setReport(com.islandturtlewatch.nest.data.ReportProto.Report value) {
        copyOnWrite();
        instance.setReport(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
       */
      public Builder setReport(
          com.islandturtlewatch.nest.data.ReportProto.Report.Builder builderForValue) {
        copyOnWrite();
        instance.setReport(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
       */
      public Builder mergeReport(com.islandturtlewatch.nest.data.ReportProto.Report value) {
        copyOnWrite();
        instance.mergeReport(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Report report = 1;</code>
       */
      public Builder clearReport() {  copyOnWrite();
        instance.clearReport();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
       */
      @java.lang.Override
      public boolean hasRef() {
        return instance.hasRef();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.ReportRef getRef() {
        return instance.getRef();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
       */
      public Builder setRef(com.islandturtlewatch.nest.data.ReportProto.ReportRef value) {
        copyOnWrite();
        instance.setRef(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
       */
      public Builder setRef(
          com.islandturtlewatch.nest.data.ReportProto.ReportRef.Builder builderForValue) {
        copyOnWrite();
        instance.setRef(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
       */
      public Builder mergeRef(com.islandturtlewatch.nest.data.ReportProto.ReportRef value) {
        copyOnWrite();
        instance.mergeRef(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ReportRef ref = 2;</code>
       */
      public Builder clearRef() {  copyOnWrite();
        instance.clearRef();
        return this;
      }

      /**
       * <code>optional bool active = 3;</code>
       */
      @java.lang.Override
      public boolean hasActive() {
        return instance.hasActive();
      }
      /**
       * <code>optional bool active = 3;</code>
       */
      @java.lang.Override
      public boolean getActive() {
        return instance.getActive();
      }
      /**
       * <code>optional bool active = 3;</code>
       */
      public Builder setActive(boolean value) {
        copyOnWrite();
        instance.setActive(value);
        return this;
      }
      /**
       * <code>optional bool active = 3;</code>
       */
      public Builder clearActive() {
        copyOnWrite();
        instance.clearActive();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.ReportWrapper)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.islandturtlewatch.nest.data.ReportProto.ReportWrapper();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.islandturtlewatch.nest.data.ReportProto.ReportWrapper other = (com.islandturtlewatch.nest.data.ReportProto.ReportWrapper) arg1;
          report_ = visitor.visitMessage(report_, other.report_);
          ref_ = visitor.visitMessage(ref_, other.ref_);
          active_ = visitor.visitBoolean(
              hasActive(), active_,
              other.hasActive(), other.active_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.islandturtlewatch.nest.data.ReportProto.Report.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = report_.toBuilder();
                  }
                  report_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.Report.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(report_);
                    report_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 18: {
                  com.islandturtlewatch.nest.data.ReportProto.ReportRef.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = ref_.toBuilder();
                  }
                  ref_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.ReportRef.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(ref_);
                    ref_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  active_ = input.readBool();
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.ReportWrapper> parser = PARSER;
          if (parser == null) {
            synchronized (com.islandturtlewatch.nest.data.ReportProto.ReportWrapper.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.ReportWrapper)
    private static final com.islandturtlewatch.nest.data.ReportProto.ReportWrapper DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ReportWrapper();
    }

    public static com.islandturtlewatch.nest.data.ReportProto.ReportWrapper getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ReportWrapper> PARSER;

    public static com.google.protobuf.Parser<ReportWrapper> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ReportRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.ReportRef)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string owner_id = 2;</code>
     */
    boolean hasOwnerId();
    /**
     * <code>optional string owner_id = 2;</code>
     */
    java.lang.String getOwnerId();
    /**
     * <code>optional string owner_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getOwnerIdBytes();

    /**
     * <code>optional uint64 report_id = 3;</code>
     */
    boolean hasReportId();
    /**
     * <code>optional uint64 report_id = 3;</code>
     */
    long getReportId();

    /**
     * <code>optional uint64 version = 4;</code>
     */
    boolean hasVersion();
    /**
     * <code>optional uint64 version = 4;</code>
     */
    long getVersion();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef.State state = 5 [default = ACTIVE];</code>
     */
    boolean hasState();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef.State state = 5 [default = ACTIVE];</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.ReportRef.State getState();
  }
  /**
   * <pre>
   * Uniquely identifies this version of the report.
   * </pre>
   *
   * Protobuf type {@code com.islandturtlewatch.nest.data.ReportRef}
   */
  public  static final class ReportRef extends
      com.google.protobuf.GeneratedMessageLite<
          ReportRef, ReportRef.Builder> implements
      // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.ReportRef)
      ReportRefOrBuilder {
    private ReportRef() {
      ownerId_ = "";
      state_ = 1;
    }
    /**
     * Protobuf enum {@code com.islandturtlewatch.nest.data.ReportRef.State}
     */
    public enum State
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ACTIVE = 1;</code>
       */
      ACTIVE(1),
      /**
       * <code>OLD = 2;</code>
       */
      OLD(2),
      /**
       * <code>DELETED = 3;</code>
       */
      DELETED(3),
      ;

      /**
       * <code>ACTIVE = 1;</code>
       */
      public static final int ACTIVE_VALUE = 1;
      /**
       * <code>OLD = 2;</code>
       */
      public static final int OLD_VALUE = 2;
      /**
       * <code>DELETED = 3;</code>
       */
      public static final int DELETED_VALUE = 3;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static State valueOf(int value) {
        return forNumber(value);
      }

      public static State forNumber(int value) {
        switch (value) {
          case 1: return ACTIVE;
          case 2: return OLD;
          case 3: return DELETED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<State>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          State> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<State>() {
              @java.lang.Override
              public State findValueByNumber(int number) {
                return State.forNumber(number);
              }
            };

      private final int value;

      private State(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.ReportRef.State)
    }

    private int bitField0_;
    public static final int OWNER_ID_FIELD_NUMBER = 2;
    private java.lang.String ownerId_;
    /**
     * <code>optional string owner_id = 2;</code>
     */
    @java.lang.Override
    public boolean hasOwnerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string owner_id = 2;</code>
     */
    @java.lang.Override
    public java.lang.String getOwnerId() {
      return ownerId_;
    }
    /**
     * <code>optional string owner_id = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOwnerIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ownerId_);
    }
    /**
     * <code>optional string owner_id = 2;</code>
     */
    private void setOwnerId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      ownerId_ = value;
    }
    /**
     * <code>optional string owner_id = 2;</code>
     */
    private void clearOwnerId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      ownerId_ = getDefaultInstance().getOwnerId();
    }
    /**
     * <code>optional string owner_id = 2;</code>
     */
    private void setOwnerIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      ownerId_ = value.toStringUtf8();
    }

    public static final int REPORT_ID_FIELD_NUMBER = 3;
    private long reportId_;
    /**
     * <code>optional uint64 report_id = 3;</code>
     */
    @java.lang.Override
    public boolean hasReportId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 report_id = 3;</code>
     */
    @java.lang.Override
    public long getReportId() {
      return reportId_;
    }
    /**
     * <code>optional uint64 report_id = 3;</code>
     */
    private void setReportId(long value) {
      bitField0_ |= 0x00000002;
      reportId_ = value;
    }
    /**
     * <code>optional uint64 report_id = 3;</code>
     */
    private void clearReportId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      reportId_ = 0L;
    }

    public static final int VERSION_FIELD_NUMBER = 4;
    private long version_;
    /**
     * <code>optional uint64 version = 4;</code>
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 version = 4;</code>
     */
    @java.lang.Override
    public long getVersion() {
      return version_;
    }
    /**
     * <code>optional uint64 version = 4;</code>
     */
    private void setVersion(long value) {
      bitField0_ |= 0x00000004;
      version_ = value;
    }
    /**
     * <code>optional uint64 version = 4;</code>
     */
    private void clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000004);
      version_ = 0L;
    }

    public static final int STATE_FIELD_NUMBER = 5;
    private int state_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef.State state = 5 [default = ACTIVE];</code>
     */
    @java.lang.Override
    public boolean hasState() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef.State state = 5 [default = ACTIVE];</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.ReportRef.State getState() {
      com.islandturtlewatch.nest.data.ReportProto.ReportRef.State result = com.islandturtlewatch.nest.data.ReportProto.ReportRef.State.forNumber(state_);
      return result == null ? com.islandturtlewatch.nest.data.ReportProto.ReportRef.State.ACTIVE : result;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef.State state = 5 [default = ACTIVE];</code>
     */
    private void setState(com.islandturtlewatch.nest.data.ReportProto.ReportRef.State value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      state_ = value.getNumber();
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.ReportRef.State state = 5 [default = ACTIVE];</code>
     */
    private void clearState() {
      bitField0_ = (bitField0_ & ~0x00000008);
      state_ = 1;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(2, getOwnerId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(3, reportId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(4, version_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(5, state_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getOwnerId());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, reportId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, version_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, state_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.islandturtlewatch.nest.data.ReportProto.ReportRef parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportRef parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportRef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportRef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportRef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportRef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportRef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportRef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportRef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.ReportRef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.ReportRef prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Uniquely identifies this version of the report.
     * </pre>
     *
     * Protobuf type {@code com.islandturtlewatch.nest.data.ReportRef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.islandturtlewatch.nest.data.ReportProto.ReportRef, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.ReportRef)
        com.islandturtlewatch.nest.data.ReportProto.ReportRefOrBuilder {
      // Construct using com.islandturtlewatch.nest.data.ReportProto.ReportRef.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string owner_id = 2;</code>
       */
      @java.lang.Override
      public boolean hasOwnerId() {
        return instance.hasOwnerId();
      }
      /**
       * <code>optional string owner_id = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getOwnerId() {
        return instance.getOwnerId();
      }
      /**
       * <code>optional string owner_id = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getOwnerIdBytes() {
        return instance.getOwnerIdBytes();
      }
      /**
       * <code>optional string owner_id = 2;</code>
       */
      public Builder setOwnerId(
          java.lang.String value) {
        copyOnWrite();
        instance.setOwnerId(value);
        return this;
      }
      /**
       * <code>optional string owner_id = 2;</code>
       */
      public Builder clearOwnerId() {
        copyOnWrite();
        instance.clearOwnerId();
        return this;
      }
      /**
       * <code>optional string owner_id = 2;</code>
       */
      public Builder setOwnerIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setOwnerIdBytes(value);
        return this;
      }

      /**
       * <code>optional uint64 report_id = 3;</code>
       */
      @java.lang.Override
      public boolean hasReportId() {
        return instance.hasReportId();
      }
      /**
       * <code>optional uint64 report_id = 3;</code>
       */
      @java.lang.Override
      public long getReportId() {
        return instance.getReportId();
      }
      /**
       * <code>optional uint64 report_id = 3;</code>
       */
      public Builder setReportId(long value) {
        copyOnWrite();
        instance.setReportId(value);
        return this;
      }
      /**
       * <code>optional uint64 report_id = 3;</code>
       */
      public Builder clearReportId() {
        copyOnWrite();
        instance.clearReportId();
        return this;
      }

      /**
       * <code>optional uint64 version = 4;</code>
       */
      @java.lang.Override
      public boolean hasVersion() {
        return instance.hasVersion();
      }
      /**
       * <code>optional uint64 version = 4;</code>
       */
      @java.lang.Override
      public long getVersion() {
        return instance.getVersion();
      }
      /**
       * <code>optional uint64 version = 4;</code>
       */
      public Builder setVersion(long value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <code>optional uint64 version = 4;</code>
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.ReportRef.State state = 5 [default = ACTIVE];</code>
       */
      @java.lang.Override
      public boolean hasState() {
        return instance.hasState();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ReportRef.State state = 5 [default = ACTIVE];</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.ReportRef.State getState() {
        return instance.getState();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ReportRef.State state = 5 [default = ACTIVE];</code>
       */
      public Builder setState(com.islandturtlewatch.nest.data.ReportProto.ReportRef.State value) {
        copyOnWrite();
        instance.setState(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.ReportRef.State state = 5 [default = ACTIVE];</code>
       */
      public Builder clearState() {
        copyOnWrite();
        instance.clearState();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.ReportRef)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.islandturtlewatch.nest.data.ReportProto.ReportRef();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.islandturtlewatch.nest.data.ReportProto.ReportRef other = (com.islandturtlewatch.nest.data.ReportProto.ReportRef) arg1;
          ownerId_ = visitor.visitString(
              hasOwnerId(), ownerId_,
              other.hasOwnerId(), other.ownerId_);
          reportId_ = visitor.visitLong(
              hasReportId(), reportId_,
              other.hasReportId(), other.reportId_);
          version_ = visitor.visitLong(
              hasVersion(), version_,
              other.hasVersion(), other.version_);
          state_ = visitor.visitInt(hasState(), state_,
              other.hasState(), other.state_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 18: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000001;
                  ownerId_ = s;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000002;
                  reportId_ = input.readUInt64();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000004;
                  version_ = input.readUInt64();
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();
                  com.islandturtlewatch.nest.data.ReportProto.ReportRef.State value = com.islandturtlewatch.nest.data.ReportProto.ReportRef.State.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(5, rawValue);
                  } else {
                    bitField0_ |= 0x00000008;
                    state_ = rawValue;
                  }
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.ReportRef> parser = PARSER;
          if (parser == null) {
            synchronized (com.islandturtlewatch.nest.data.ReportProto.ReportRef.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.ReportRef)
    private static final com.islandturtlewatch.nest.data.ReportProto.ReportRef DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new ReportRef();
    }

    public static com.islandturtlewatch.nest.data.ReportProto.ReportRef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ReportRef> PARSER;

    public static com.google.protobuf.Parser<ReportRef> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ReportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.Report)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Timestamp for start of day the crawl was found, in milli seconds.
     * </pre>
     *
     * <code>optional int64 timestamp_found_ms = 1;</code>
     */
    boolean hasTimestampFoundMs();
    /**
     * <pre>
     * Timestamp for start of day the crawl was found, in milli seconds.
     * </pre>
     *
     * <code>optional int64 timestamp_found_ms = 1;</code>
     */
    long getTimestampFoundMs();

    /**
     * <code>optional int32 nest_number = 2;</code>
     */
    boolean hasNestNumber();
    /**
     * <code>optional int32 nest_number = 2;</code>
     */
    int getNestNumber();

    /**
     * <code>optional int32 false_crawl_number = 3;</code>
     */
    boolean hasFalseCrawlNumber();
    /**
     * <code>optional int32 false_crawl_number = 3;</code>
     */
    int getFalseCrawlNumber();

    /**
     * <code>optional int32 possible_false_crawl_number = 17;</code>
     */
    boolean hasPossibleFalseCrawlNumber();
    /**
     * <code>optional int32 possible_false_crawl_number = 17;</code>
     */
    int getPossibleFalseCrawlNumber();

    /**
     * <pre>
     *Default is also set in MappedSpeciesColumn
     * </pre>
     *
     * <code>optional .com.islandturtlewatch.nest.data.Report.Species species = 4 [default = LOGGERHEAD];</code>
     */
    boolean hasSpecies();
    /**
     * <pre>
     *Default is also set in MappedSpeciesColumn
     * </pre>
     *
     * <code>optional .com.islandturtlewatch.nest.data.Report.Species species = 4 [default = LOGGERHEAD];</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.Report.Species getSpecies();

    /**
     * <code>optional string species_other = 5;</code>
     */
    boolean hasSpeciesOther();
    /**
     * <code>optional string species_other = 5;</code>
     */
    java.lang.String getSpeciesOther();
    /**
     * <code>optional string species_other = 5;</code>
     */
    com.google.protobuf.ByteString
        getSpeciesOtherBytes();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report.NestStatus status = 6;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report.NestStatus status = 6;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.Report.NestStatus getStatus();

    /**
     * <code>optional bool possible_false_crawl = 13;</code>
     */
    boolean hasPossibleFalseCrawl();
    /**
     * <code>optional bool possible_false_crawl = 13;</code>
     */
    boolean getPossibleFalseCrawl();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
     */
    boolean hasLocation();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestLocation getLocation();

    /**
     * <code>optional bool nest_seaward_of_armoring_structure = 14;</code>
     */
    boolean hasNestSeawardOfArmoringStructure();
    /**
     * <code>optional bool nest_seaward_of_armoring_structure = 14;</code>
     */
    boolean getNestSeawardOfArmoringStructure();

    /**
     * <code>optional bool within_3_feet_of_structure = 15;</code>
     */
    boolean hasWithin3FeetOfStructure();
    /**
     * <code>optional bool within_3_feet_of_structure = 15;</code>
     */
    boolean getWithin3FeetOfStructure();

    /**
     * <code>optional string type_of_structure = 16;</code>
     */
    boolean hasTypeOfStructure();
    /**
     * <code>optional string type_of_structure = 16;</code>
     */
    java.lang.String getTypeOfStructure();
    /**
     * <code>optional string type_of_structure = 16;</code>
     */
    com.google.protobuf.ByteString
        getTypeOfStructureBytes();

    /**
     * <code>optional string observers = 8;</code>
     */
    boolean hasObservers();
    /**
     * <code>optional string observers = 8;</code>
     */
    java.lang.String getObservers();
    /**
     * <code>optional string observers = 8;</code>
     */
    com.google.protobuf.ByteString
        getObserversBytes();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
     */
    boolean hasCondition();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestCondition getCondition();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
     */
    boolean hasIntervention();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.Intervention getIntervention();

    /**
     * <code>optional string additional_notes = 11;</code>
     */
    boolean hasAdditionalNotes();
    /**
     * <code>optional string additional_notes = 11;</code>
     */
    java.lang.String getAdditionalNotes();
    /**
     * <code>optional string additional_notes = 11;</code>
     */
    com.google.protobuf.ByteString
        getAdditionalNotesBytes();

    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    java.util.List<com.islandturtlewatch.nest.data.ReportProto.Image> 
        getImageList();
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.Image getImage(int index);
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    int getImageCount();
  }
  /**
   * Protobuf type {@code com.islandturtlewatch.nest.data.Report}
   */
  public  static final class Report extends
      com.google.protobuf.GeneratedMessageLite<
          Report, Report.Builder> implements
      // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.Report)
      ReportOrBuilder {
    private Report() {
      species_ = 1;
      speciesOther_ = "";
      status_ = 1;
      typeOfStructure_ = "";
      observers_ = "";
      additionalNotes_ = "";
      image_ = emptyProtobufList();
    }
    /**
     * Protobuf enum {@code com.islandturtlewatch.nest.data.Report.Species}
     */
    public enum Species
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>NOT_REPORTED = 4;</code>
       */
      NOT_REPORTED(4),
      /**
       * <code>LOGGERHEAD = 1;</code>
       */
      LOGGERHEAD(1),
      /**
       * <code>GREEN = 2;</code>
       */
      GREEN(2),
      /**
       * <code>OTHER = 3;</code>
       */
      OTHER(3),
      ;

      /**
       * <code>NOT_REPORTED = 4;</code>
       */
      public static final int NOT_REPORTED_VALUE = 4;
      /**
       * <code>LOGGERHEAD = 1;</code>
       */
      public static final int LOGGERHEAD_VALUE = 1;
      /**
       * <code>GREEN = 2;</code>
       */
      public static final int GREEN_VALUE = 2;
      /**
       * <code>OTHER = 3;</code>
       */
      public static final int OTHER_VALUE = 3;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Species valueOf(int value) {
        return forNumber(value);
      }

      public static Species forNumber(int value) {
        switch (value) {
          case 4: return NOT_REPORTED;
          case 1: return LOGGERHEAD;
          case 2: return GREEN;
          case 3: return OTHER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Species>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Species> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Species>() {
              @java.lang.Override
              public Species findValueByNumber(int number) {
                return Species.forNumber(number);
              }
            };

      private final int value;

      private Species(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.Report.Species)
    }

    /**
     * Protobuf enum {@code com.islandturtlewatch.nest.data.Report.NestStatus}
     */
    public enum NestStatus
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>UNKNOWN = 1;</code>
       */
      UNKNOWN(1),
      /**
       * <code>NEST_VERIFIED = 2;</code>
       */
      NEST_VERIFIED(2),
      /**
       * <code>NEST_NOT_VERIFIED = 3;</code>
       */
      NEST_NOT_VERIFIED(3),
      /**
       * <code>NEST_RELOCATED = 4;</code>
       */
      NEST_RELOCATED(4),
      /**
       * <code>FALSE_CRAWL = 5;</code>
       */
      FALSE_CRAWL(5),
      ;

      /**
       * <code>UNKNOWN = 1;</code>
       */
      public static final int UNKNOWN_VALUE = 1;
      /**
       * <code>NEST_VERIFIED = 2;</code>
       */
      public static final int NEST_VERIFIED_VALUE = 2;
      /**
       * <code>NEST_NOT_VERIFIED = 3;</code>
       */
      public static final int NEST_NOT_VERIFIED_VALUE = 3;
      /**
       * <code>NEST_RELOCATED = 4;</code>
       */
      public static final int NEST_RELOCATED_VALUE = 4;
      /**
       * <code>FALSE_CRAWL = 5;</code>
       */
      public static final int FALSE_CRAWL_VALUE = 5;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NestStatus valueOf(int value) {
        return forNumber(value);
      }

      public static NestStatus forNumber(int value) {
        switch (value) {
          case 1: return UNKNOWN;
          case 2: return NEST_VERIFIED;
          case 3: return NEST_NOT_VERIFIED;
          case 4: return NEST_RELOCATED;
          case 5: return FALSE_CRAWL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NestStatus>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          NestStatus> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NestStatus>() {
              @java.lang.Override
              public NestStatus findValueByNumber(int number) {
                return NestStatus.forNumber(number);
              }
            };

      private final int value;

      private NestStatus(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.Report.NestStatus)
    }

    private int bitField0_;
    public static final int TIMESTAMP_FOUND_MS_FIELD_NUMBER = 1;
    private long timestampFoundMs_;
    /**
     * <pre>
     * Timestamp for start of day the crawl was found, in milli seconds.
     * </pre>
     *
     * <code>optional int64 timestamp_found_ms = 1;</code>
     */
    @java.lang.Override
    public boolean hasTimestampFoundMs() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Timestamp for start of day the crawl was found, in milli seconds.
     * </pre>
     *
     * <code>optional int64 timestamp_found_ms = 1;</code>
     */
    @java.lang.Override
    public long getTimestampFoundMs() {
      return timestampFoundMs_;
    }
    /**
     * <pre>
     * Timestamp for start of day the crawl was found, in milli seconds.
     * </pre>
     *
     * <code>optional int64 timestamp_found_ms = 1;</code>
     */
    private void setTimestampFoundMs(long value) {
      bitField0_ |= 0x00000001;
      timestampFoundMs_ = value;
    }
    /**
     * <pre>
     * Timestamp for start of day the crawl was found, in milli seconds.
     * </pre>
     *
     * <code>optional int64 timestamp_found_ms = 1;</code>
     */
    private void clearTimestampFoundMs() {
      bitField0_ = (bitField0_ & ~0x00000001);
      timestampFoundMs_ = 0L;
    }

    public static final int NEST_NUMBER_FIELD_NUMBER = 2;
    private int nestNumber_;
    /**
     * <code>optional int32 nest_number = 2;</code>
     */
    @java.lang.Override
    public boolean hasNestNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 nest_number = 2;</code>
     */
    @java.lang.Override
    public int getNestNumber() {
      return nestNumber_;
    }
    /**
     * <code>optional int32 nest_number = 2;</code>
     */
    private void setNestNumber(int value) {
      bitField0_ |= 0x00000002;
      nestNumber_ = value;
    }
    /**
     * <code>optional int32 nest_number = 2;</code>
     */
    private void clearNestNumber() {
      bitField0_ = (bitField0_ & ~0x00000002);
      nestNumber_ = 0;
    }

    public static final int FALSE_CRAWL_NUMBER_FIELD_NUMBER = 3;
    private int falseCrawlNumber_;
    /**
     * <code>optional int32 false_crawl_number = 3;</code>
     */
    @java.lang.Override
    public boolean hasFalseCrawlNumber() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 false_crawl_number = 3;</code>
     */
    @java.lang.Override
    public int getFalseCrawlNumber() {
      return falseCrawlNumber_;
    }
    /**
     * <code>optional int32 false_crawl_number = 3;</code>
     */
    private void setFalseCrawlNumber(int value) {
      bitField0_ |= 0x00000004;
      falseCrawlNumber_ = value;
    }
    /**
     * <code>optional int32 false_crawl_number = 3;</code>
     */
    private void clearFalseCrawlNumber() {
      bitField0_ = (bitField0_ & ~0x00000004);
      falseCrawlNumber_ = 0;
    }

    public static final int POSSIBLE_FALSE_CRAWL_NUMBER_FIELD_NUMBER = 17;
    private int possibleFalseCrawlNumber_;
    /**
     * <code>optional int32 possible_false_crawl_number = 17;</code>
     */
    @java.lang.Override
    public boolean hasPossibleFalseCrawlNumber() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 possible_false_crawl_number = 17;</code>
     */
    @java.lang.Override
    public int getPossibleFalseCrawlNumber() {
      return possibleFalseCrawlNumber_;
    }
    /**
     * <code>optional int32 possible_false_crawl_number = 17;</code>
     */
    private void setPossibleFalseCrawlNumber(int value) {
      bitField0_ |= 0x00000008;
      possibleFalseCrawlNumber_ = value;
    }
    /**
     * <code>optional int32 possible_false_crawl_number = 17;</code>
     */
    private void clearPossibleFalseCrawlNumber() {
      bitField0_ = (bitField0_ & ~0x00000008);
      possibleFalseCrawlNumber_ = 0;
    }

    public static final int SPECIES_FIELD_NUMBER = 4;
    private int species_;
    /**
     * <pre>
     *Default is also set in MappedSpeciesColumn
     * </pre>
     *
     * <code>optional .com.islandturtlewatch.nest.data.Report.Species species = 4 [default = LOGGERHEAD];</code>
     */
    @java.lang.Override
    public boolean hasSpecies() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *Default is also set in MappedSpeciesColumn
     * </pre>
     *
     * <code>optional .com.islandturtlewatch.nest.data.Report.Species species = 4 [default = LOGGERHEAD];</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.Report.Species getSpecies() {
      com.islandturtlewatch.nest.data.ReportProto.Report.Species result = com.islandturtlewatch.nest.data.ReportProto.Report.Species.forNumber(species_);
      return result == null ? com.islandturtlewatch.nest.data.ReportProto.Report.Species.LOGGERHEAD : result;
    }
    /**
     * <pre>
     *Default is also set in MappedSpeciesColumn
     * </pre>
     *
     * <code>optional .com.islandturtlewatch.nest.data.Report.Species species = 4 [default = LOGGERHEAD];</code>
     */
    private void setSpecies(com.islandturtlewatch.nest.data.ReportProto.Report.Species value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      species_ = value.getNumber();
    }
    /**
     * <pre>
     *Default is also set in MappedSpeciesColumn
     * </pre>
     *
     * <code>optional .com.islandturtlewatch.nest.data.Report.Species species = 4 [default = LOGGERHEAD];</code>
     */
    private void clearSpecies() {
      bitField0_ = (bitField0_ & ~0x00000010);
      species_ = 1;
    }

    public static final int SPECIES_OTHER_FIELD_NUMBER = 5;
    private java.lang.String speciesOther_;
    /**
     * <code>optional string species_other = 5;</code>
     */
    @java.lang.Override
    public boolean hasSpeciesOther() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string species_other = 5;</code>
     */
    @java.lang.Override
    public java.lang.String getSpeciesOther() {
      return speciesOther_;
    }
    /**
     * <code>optional string species_other = 5;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSpeciesOtherBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(speciesOther_);
    }
    /**
     * <code>optional string species_other = 5;</code>
     */
    private void setSpeciesOther(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      speciesOther_ = value;
    }
    /**
     * <code>optional string species_other = 5;</code>
     */
    private void clearSpeciesOther() {
      bitField0_ = (bitField0_ & ~0x00000020);
      speciesOther_ = getDefaultInstance().getSpeciesOther();
    }
    /**
     * <code>optional string species_other = 5;</code>
     */
    private void setSpeciesOtherBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      speciesOther_ = value.toStringUtf8();
    }

    public static final int STATUS_FIELD_NUMBER = 6;
    private int status_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report.NestStatus status = 6;</code>
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report.NestStatus status = 6;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.Report.NestStatus getStatus() {
      com.islandturtlewatch.nest.data.ReportProto.Report.NestStatus result = com.islandturtlewatch.nest.data.ReportProto.Report.NestStatus.forNumber(status_);
      return result == null ? com.islandturtlewatch.nest.data.ReportProto.Report.NestStatus.UNKNOWN : result;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report.NestStatus status = 6;</code>
     */
    private void setStatus(com.islandturtlewatch.nest.data.ReportProto.Report.NestStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      status_ = value.getNumber();
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Report.NestStatus status = 6;</code>
     */
    private void clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000040);
      status_ = 1;
    }

    public static final int POSSIBLE_FALSE_CRAWL_FIELD_NUMBER = 13;
    private boolean possibleFalseCrawl_;
    /**
     * <code>optional bool possible_false_crawl = 13;</code>
     */
    @java.lang.Override
    public boolean hasPossibleFalseCrawl() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool possible_false_crawl = 13;</code>
     */
    @java.lang.Override
    public boolean getPossibleFalseCrawl() {
      return possibleFalseCrawl_;
    }
    /**
     * <code>optional bool possible_false_crawl = 13;</code>
     */
    private void setPossibleFalseCrawl(boolean value) {
      bitField0_ |= 0x00000080;
      possibleFalseCrawl_ = value;
    }
    /**
     * <code>optional bool possible_false_crawl = 13;</code>
     */
    private void clearPossibleFalseCrawl() {
      bitField0_ = (bitField0_ & ~0x00000080);
      possibleFalseCrawl_ = false;
    }

    public static final int LOCATION_FIELD_NUMBER = 7;
    private com.islandturtlewatch.nest.data.ReportProto.NestLocation location_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
     */
    @java.lang.Override
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestLocation getLocation() {
      return location_ == null ? com.islandturtlewatch.nest.data.ReportProto.NestLocation.getDefaultInstance() : location_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
     */
    private void setLocation(com.islandturtlewatch.nest.data.ReportProto.NestLocation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      location_ = value;
      bitField0_ |= 0x00000100;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
     */
    private void setLocation(
        com.islandturtlewatch.nest.data.ReportProto.NestLocation.Builder builderForValue) {
      location_ = builderForValue.build();
      bitField0_ |= 0x00000100;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLocation(com.islandturtlewatch.nest.data.ReportProto.NestLocation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (location_ != null &&
          location_ != com.islandturtlewatch.nest.data.ReportProto.NestLocation.getDefaultInstance()) {
        location_ =
          com.islandturtlewatch.nest.data.ReportProto.NestLocation.newBuilder(location_).mergeFrom(value).buildPartial();
      } else {
        location_ = value;
      }
      bitField0_ |= 0x00000100;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
     */
    private void clearLocation() {  location_ = null;
      bitField0_ = (bitField0_ & ~0x00000100);
    }

    public static final int NEST_SEAWARD_OF_ARMORING_STRUCTURE_FIELD_NUMBER = 14;
    private boolean nestSeawardOfArmoringStructure_;
    /**
     * <code>optional bool nest_seaward_of_armoring_structure = 14;</code>
     */
    @java.lang.Override
    public boolean hasNestSeawardOfArmoringStructure() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool nest_seaward_of_armoring_structure = 14;</code>
     */
    @java.lang.Override
    public boolean getNestSeawardOfArmoringStructure() {
      return nestSeawardOfArmoringStructure_;
    }
    /**
     * <code>optional bool nest_seaward_of_armoring_structure = 14;</code>
     */
    private void setNestSeawardOfArmoringStructure(boolean value) {
      bitField0_ |= 0x00000200;
      nestSeawardOfArmoringStructure_ = value;
    }
    /**
     * <code>optional bool nest_seaward_of_armoring_structure = 14;</code>
     */
    private void clearNestSeawardOfArmoringStructure() {
      bitField0_ = (bitField0_ & ~0x00000200);
      nestSeawardOfArmoringStructure_ = false;
    }

    public static final int WITHIN_3_FEET_OF_STRUCTURE_FIELD_NUMBER = 15;
    private boolean within3FeetOfStructure_;
    /**
     * <code>optional bool within_3_feet_of_structure = 15;</code>
     */
    @java.lang.Override
    public boolean hasWithin3FeetOfStructure() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool within_3_feet_of_structure = 15;</code>
     */
    @java.lang.Override
    public boolean getWithin3FeetOfStructure() {
      return within3FeetOfStructure_;
    }
    /**
     * <code>optional bool within_3_feet_of_structure = 15;</code>
     */
    private void setWithin3FeetOfStructure(boolean value) {
      bitField0_ |= 0x00000400;
      within3FeetOfStructure_ = value;
    }
    /**
     * <code>optional bool within_3_feet_of_structure = 15;</code>
     */
    private void clearWithin3FeetOfStructure() {
      bitField0_ = (bitField0_ & ~0x00000400);
      within3FeetOfStructure_ = false;
    }

    public static final int TYPE_OF_STRUCTURE_FIELD_NUMBER = 16;
    private java.lang.String typeOfStructure_;
    /**
     * <code>optional string type_of_structure = 16;</code>
     */
    @java.lang.Override
    public boolean hasTypeOfStructure() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string type_of_structure = 16;</code>
     */
    @java.lang.Override
    public java.lang.String getTypeOfStructure() {
      return typeOfStructure_;
    }
    /**
     * <code>optional string type_of_structure = 16;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeOfStructureBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(typeOfStructure_);
    }
    /**
     * <code>optional string type_of_structure = 16;</code>
     */
    private void setTypeOfStructure(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
      typeOfStructure_ = value;
    }
    /**
     * <code>optional string type_of_structure = 16;</code>
     */
    private void clearTypeOfStructure() {
      bitField0_ = (bitField0_ & ~0x00000800);
      typeOfStructure_ = getDefaultInstance().getTypeOfStructure();
    }
    /**
     * <code>optional string type_of_structure = 16;</code>
     */
    private void setTypeOfStructureBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
      typeOfStructure_ = value.toStringUtf8();
    }

    public static final int OBSERVERS_FIELD_NUMBER = 8;
    private java.lang.String observers_;
    /**
     * <code>optional string observers = 8;</code>
     */
    @java.lang.Override
    public boolean hasObservers() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string observers = 8;</code>
     */
    @java.lang.Override
    public java.lang.String getObservers() {
      return observers_;
    }
    /**
     * <code>optional string observers = 8;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getObserversBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(observers_);
    }
    /**
     * <code>optional string observers = 8;</code>
     */
    private void setObservers(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
      observers_ = value;
    }
    /**
     * <code>optional string observers = 8;</code>
     */
    private void clearObservers() {
      bitField0_ = (bitField0_ & ~0x00001000);
      observers_ = getDefaultInstance().getObservers();
    }
    /**
     * <code>optional string observers = 8;</code>
     */
    private void setObserversBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
      observers_ = value.toStringUtf8();
    }

    public static final int CONDITION_FIELD_NUMBER = 9;
    private com.islandturtlewatch.nest.data.ReportProto.NestCondition condition_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
     */
    @java.lang.Override
    public boolean hasCondition() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition getCondition() {
      return condition_ == null ? com.islandturtlewatch.nest.data.ReportProto.NestCondition.getDefaultInstance() : condition_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
     */
    private void setCondition(com.islandturtlewatch.nest.data.ReportProto.NestCondition value) {
      if (value == null) {
        throw new NullPointerException();
      }
      condition_ = value;
      bitField0_ |= 0x00002000;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
     */
    private void setCondition(
        com.islandturtlewatch.nest.data.ReportProto.NestCondition.Builder builderForValue) {
      condition_ = builderForValue.build();
      bitField0_ |= 0x00002000;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCondition(com.islandturtlewatch.nest.data.ReportProto.NestCondition value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (condition_ != null &&
          condition_ != com.islandturtlewatch.nest.data.ReportProto.NestCondition.getDefaultInstance()) {
        condition_ =
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.newBuilder(condition_).mergeFrom(value).buildPartial();
      } else {
        condition_ = value;
      }
      bitField0_ |= 0x00002000;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
     */
    private void clearCondition() {  condition_ = null;
      bitField0_ = (bitField0_ & ~0x00002000);
    }

    public static final int INTERVENTION_FIELD_NUMBER = 10;
    private com.islandturtlewatch.nest.data.ReportProto.Intervention intervention_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
     */
    @java.lang.Override
    public boolean hasIntervention() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.Intervention getIntervention() {
      return intervention_ == null ? com.islandturtlewatch.nest.data.ReportProto.Intervention.getDefaultInstance() : intervention_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
     */
    private void setIntervention(com.islandturtlewatch.nest.data.ReportProto.Intervention value) {
      if (value == null) {
        throw new NullPointerException();
      }
      intervention_ = value;
      bitField0_ |= 0x00004000;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
     */
    private void setIntervention(
        com.islandturtlewatch.nest.data.ReportProto.Intervention.Builder builderForValue) {
      intervention_ = builderForValue.build();
      bitField0_ |= 0x00004000;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeIntervention(com.islandturtlewatch.nest.data.ReportProto.Intervention value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (intervention_ != null &&
          intervention_ != com.islandturtlewatch.nest.data.ReportProto.Intervention.getDefaultInstance()) {
        intervention_ =
          com.islandturtlewatch.nest.data.ReportProto.Intervention.newBuilder(intervention_).mergeFrom(value).buildPartial();
      } else {
        intervention_ = value;
      }
      bitField0_ |= 0x00004000;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
     */
    private void clearIntervention() {  intervention_ = null;
      bitField0_ = (bitField0_ & ~0x00004000);
    }

    public static final int ADDITIONAL_NOTES_FIELD_NUMBER = 11;
    private java.lang.String additionalNotes_;
    /**
     * <code>optional string additional_notes = 11;</code>
     */
    @java.lang.Override
    public boolean hasAdditionalNotes() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string additional_notes = 11;</code>
     */
    @java.lang.Override
    public java.lang.String getAdditionalNotes() {
      return additionalNotes_;
    }
    /**
     * <code>optional string additional_notes = 11;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAdditionalNotesBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(additionalNotes_);
    }
    /**
     * <code>optional string additional_notes = 11;</code>
     */
    private void setAdditionalNotes(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
      additionalNotes_ = value;
    }
    /**
     * <code>optional string additional_notes = 11;</code>
     */
    private void clearAdditionalNotes() {
      bitField0_ = (bitField0_ & ~0x00008000);
      additionalNotes_ = getDefaultInstance().getAdditionalNotes();
    }
    /**
     * <code>optional string additional_notes = 11;</code>
     */
    private void setAdditionalNotesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
      additionalNotes_ = value.toStringUtf8();
    }

    public static final int IMAGE_FIELD_NUMBER = 12;
    private com.google.protobuf.Internal.ProtobufList<com.islandturtlewatch.nest.data.ReportProto.Image> image_;
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    @java.lang.Override
    public java.util.List<com.islandturtlewatch.nest.data.ReportProto.Image> getImageList() {
      return image_;
    }
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    public java.util.List<? extends com.islandturtlewatch.nest.data.ReportProto.ImageOrBuilder> 
        getImageOrBuilderList() {
      return image_;
    }
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    @java.lang.Override
    public int getImageCount() {
      return image_.size();
    }
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.Image getImage(int index) {
      return image_.get(index);
    }
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    public com.islandturtlewatch.nest.data.ReportProto.ImageOrBuilder getImageOrBuilder(
        int index) {
      return image_.get(index);
    }
    private void ensureImageIsMutable() {
      if (!image_.isModifiable()) {
        image_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(image_);
       }
    }

    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    private void setImage(
        int index, com.islandturtlewatch.nest.data.ReportProto.Image value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureImageIsMutable();
      image_.set(index, value);
    }
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    private void setImage(
        int index, com.islandturtlewatch.nest.data.ReportProto.Image.Builder builderForValue) {
      ensureImageIsMutable();
      image_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    private void addImage(com.islandturtlewatch.nest.data.ReportProto.Image value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureImageIsMutable();
      image_.add(value);
    }
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    private void addImage(
        int index, com.islandturtlewatch.nest.data.ReportProto.Image value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureImageIsMutable();
      image_.add(index, value);
    }
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    private void addImage(
        com.islandturtlewatch.nest.data.ReportProto.Image.Builder builderForValue) {
      ensureImageIsMutable();
      image_.add(builderForValue.build());
    }
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    private void addImage(
        int index, com.islandturtlewatch.nest.data.ReportProto.Image.Builder builderForValue) {
      ensureImageIsMutable();
      image_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    private void addAllImage(
        java.lang.Iterable<? extends com.islandturtlewatch.nest.data.ReportProto.Image> values) {
      ensureImageIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, image_);
    }
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    private void clearImage() {
      image_ = emptyProtobufList();
    }
    /**
     * <pre>
     *NEXT ID = 18
     * </pre>
     *
     * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
     */
    private void removeImage(int index) {
      ensureImageIsMutable();
      image_.remove(index);
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, timestampFoundMs_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, nestNumber_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, falseCrawlNumber_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(4, species_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeString(5, getSpeciesOther());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(6, status_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(7, getLocation());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeString(8, getObservers());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(9, getCondition());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(10, getIntervention());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeString(11, getAdditionalNotes());
      }
      for (int i = 0; i < image_.size(); i++) {
        output.writeMessage(12, image_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(13, possibleFalseCrawl_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(14, nestSeawardOfArmoringStructure_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(15, within3FeetOfStructure_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeString(16, getTypeOfStructure());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(17, possibleFalseCrawlNumber_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestampFoundMs_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nestNumber_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, falseCrawlNumber_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, species_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getSpeciesOther());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, status_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getLocation());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getObservers());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getCondition());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getIntervention());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(11, getAdditionalNotes());
      }
      for (int i = 0; i < image_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, image_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, possibleFalseCrawl_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, nestSeawardOfArmoringStructure_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, within3FeetOfStructure_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(16, getTypeOfStructure());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, possibleFalseCrawlNumber_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.islandturtlewatch.nest.data.ReportProto.Report parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Report parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Report parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Report parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Report parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Report parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Report parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Report parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Report parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Report parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Report parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Report parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.Report prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.Report}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.islandturtlewatch.nest.data.ReportProto.Report, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.Report)
        com.islandturtlewatch.nest.data.ReportProto.ReportOrBuilder {
      // Construct using com.islandturtlewatch.nest.data.ReportProto.Report.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Timestamp for start of day the crawl was found, in milli seconds.
       * </pre>
       *
       * <code>optional int64 timestamp_found_ms = 1;</code>
       */
      @java.lang.Override
      public boolean hasTimestampFoundMs() {
        return instance.hasTimestampFoundMs();
      }
      /**
       * <pre>
       * Timestamp for start of day the crawl was found, in milli seconds.
       * </pre>
       *
       * <code>optional int64 timestamp_found_ms = 1;</code>
       */
      @java.lang.Override
      public long getTimestampFoundMs() {
        return instance.getTimestampFoundMs();
      }
      /**
       * <pre>
       * Timestamp for start of day the crawl was found, in milli seconds.
       * </pre>
       *
       * <code>optional int64 timestamp_found_ms = 1;</code>
       */
      public Builder setTimestampFoundMs(long value) {
        copyOnWrite();
        instance.setTimestampFoundMs(value);
        return this;
      }
      /**
       * <pre>
       * Timestamp for start of day the crawl was found, in milli seconds.
       * </pre>
       *
       * <code>optional int64 timestamp_found_ms = 1;</code>
       */
      public Builder clearTimestampFoundMs() {
        copyOnWrite();
        instance.clearTimestampFoundMs();
        return this;
      }

      /**
       * <code>optional int32 nest_number = 2;</code>
       */
      @java.lang.Override
      public boolean hasNestNumber() {
        return instance.hasNestNumber();
      }
      /**
       * <code>optional int32 nest_number = 2;</code>
       */
      @java.lang.Override
      public int getNestNumber() {
        return instance.getNestNumber();
      }
      /**
       * <code>optional int32 nest_number = 2;</code>
       */
      public Builder setNestNumber(int value) {
        copyOnWrite();
        instance.setNestNumber(value);
        return this;
      }
      /**
       * <code>optional int32 nest_number = 2;</code>
       */
      public Builder clearNestNumber() {
        copyOnWrite();
        instance.clearNestNumber();
        return this;
      }

      /**
       * <code>optional int32 false_crawl_number = 3;</code>
       */
      @java.lang.Override
      public boolean hasFalseCrawlNumber() {
        return instance.hasFalseCrawlNumber();
      }
      /**
       * <code>optional int32 false_crawl_number = 3;</code>
       */
      @java.lang.Override
      public int getFalseCrawlNumber() {
        return instance.getFalseCrawlNumber();
      }
      /**
       * <code>optional int32 false_crawl_number = 3;</code>
       */
      public Builder setFalseCrawlNumber(int value) {
        copyOnWrite();
        instance.setFalseCrawlNumber(value);
        return this;
      }
      /**
       * <code>optional int32 false_crawl_number = 3;</code>
       */
      public Builder clearFalseCrawlNumber() {
        copyOnWrite();
        instance.clearFalseCrawlNumber();
        return this;
      }

      /**
       * <code>optional int32 possible_false_crawl_number = 17;</code>
       */
      @java.lang.Override
      public boolean hasPossibleFalseCrawlNumber() {
        return instance.hasPossibleFalseCrawlNumber();
      }
      /**
       * <code>optional int32 possible_false_crawl_number = 17;</code>
       */
      @java.lang.Override
      public int getPossibleFalseCrawlNumber() {
        return instance.getPossibleFalseCrawlNumber();
      }
      /**
       * <code>optional int32 possible_false_crawl_number = 17;</code>
       */
      public Builder setPossibleFalseCrawlNumber(int value) {
        copyOnWrite();
        instance.setPossibleFalseCrawlNumber(value);
        return this;
      }
      /**
       * <code>optional int32 possible_false_crawl_number = 17;</code>
       */
      public Builder clearPossibleFalseCrawlNumber() {
        copyOnWrite();
        instance.clearPossibleFalseCrawlNumber();
        return this;
      }

      /**
       * <pre>
       *Default is also set in MappedSpeciesColumn
       * </pre>
       *
       * <code>optional .com.islandturtlewatch.nest.data.Report.Species species = 4 [default = LOGGERHEAD];</code>
       */
      @java.lang.Override
      public boolean hasSpecies() {
        return instance.hasSpecies();
      }
      /**
       * <pre>
       *Default is also set in MappedSpeciesColumn
       * </pre>
       *
       * <code>optional .com.islandturtlewatch.nest.data.Report.Species species = 4 [default = LOGGERHEAD];</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.Report.Species getSpecies() {
        return instance.getSpecies();
      }
      /**
       * <pre>
       *Default is also set in MappedSpeciesColumn
       * </pre>
       *
       * <code>optional .com.islandturtlewatch.nest.data.Report.Species species = 4 [default = LOGGERHEAD];</code>
       */
      public Builder setSpecies(com.islandturtlewatch.nest.data.ReportProto.Report.Species value) {
        copyOnWrite();
        instance.setSpecies(value);
        return this;
      }
      /**
       * <pre>
       *Default is also set in MappedSpeciesColumn
       * </pre>
       *
       * <code>optional .com.islandturtlewatch.nest.data.Report.Species species = 4 [default = LOGGERHEAD];</code>
       */
      public Builder clearSpecies() {
        copyOnWrite();
        instance.clearSpecies();
        return this;
      }

      /**
       * <code>optional string species_other = 5;</code>
       */
      @java.lang.Override
      public boolean hasSpeciesOther() {
        return instance.hasSpeciesOther();
      }
      /**
       * <code>optional string species_other = 5;</code>
       */
      @java.lang.Override
      public java.lang.String getSpeciesOther() {
        return instance.getSpeciesOther();
      }
      /**
       * <code>optional string species_other = 5;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSpeciesOtherBytes() {
        return instance.getSpeciesOtherBytes();
      }
      /**
       * <code>optional string species_other = 5;</code>
       */
      public Builder setSpeciesOther(
          java.lang.String value) {
        copyOnWrite();
        instance.setSpeciesOther(value);
        return this;
      }
      /**
       * <code>optional string species_other = 5;</code>
       */
      public Builder clearSpeciesOther() {
        copyOnWrite();
        instance.clearSpeciesOther();
        return this;
      }
      /**
       * <code>optional string species_other = 5;</code>
       */
      public Builder setSpeciesOtherBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSpeciesOtherBytes(value);
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.Report.NestStatus status = 6;</code>
       */
      @java.lang.Override
      public boolean hasStatus() {
        return instance.hasStatus();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Report.NestStatus status = 6;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.Report.NestStatus getStatus() {
        return instance.getStatus();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Report.NestStatus status = 6;</code>
       */
      public Builder setStatus(com.islandturtlewatch.nest.data.ReportProto.Report.NestStatus value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Report.NestStatus status = 6;</code>
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      /**
       * <code>optional bool possible_false_crawl = 13;</code>
       */
      @java.lang.Override
      public boolean hasPossibleFalseCrawl() {
        return instance.hasPossibleFalseCrawl();
      }
      /**
       * <code>optional bool possible_false_crawl = 13;</code>
       */
      @java.lang.Override
      public boolean getPossibleFalseCrawl() {
        return instance.getPossibleFalseCrawl();
      }
      /**
       * <code>optional bool possible_false_crawl = 13;</code>
       */
      public Builder setPossibleFalseCrawl(boolean value) {
        copyOnWrite();
        instance.setPossibleFalseCrawl(value);
        return this;
      }
      /**
       * <code>optional bool possible_false_crawl = 13;</code>
       */
      public Builder clearPossibleFalseCrawl() {
        copyOnWrite();
        instance.clearPossibleFalseCrawl();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
       */
      @java.lang.Override
      public boolean hasLocation() {
        return instance.hasLocation();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestLocation getLocation() {
        return instance.getLocation();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
       */
      public Builder setLocation(com.islandturtlewatch.nest.data.ReportProto.NestLocation value) {
        copyOnWrite();
        instance.setLocation(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
       */
      public Builder setLocation(
          com.islandturtlewatch.nest.data.ReportProto.NestLocation.Builder builderForValue) {
        copyOnWrite();
        instance.setLocation(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
       */
      public Builder mergeLocation(com.islandturtlewatch.nest.data.ReportProto.NestLocation value) {
        copyOnWrite();
        instance.mergeLocation(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation location = 7;</code>
       */
      public Builder clearLocation() {  copyOnWrite();
        instance.clearLocation();
        return this;
      }

      /**
       * <code>optional bool nest_seaward_of_armoring_structure = 14;</code>
       */
      @java.lang.Override
      public boolean hasNestSeawardOfArmoringStructure() {
        return instance.hasNestSeawardOfArmoringStructure();
      }
      /**
       * <code>optional bool nest_seaward_of_armoring_structure = 14;</code>
       */
      @java.lang.Override
      public boolean getNestSeawardOfArmoringStructure() {
        return instance.getNestSeawardOfArmoringStructure();
      }
      /**
       * <code>optional bool nest_seaward_of_armoring_structure = 14;</code>
       */
      public Builder setNestSeawardOfArmoringStructure(boolean value) {
        copyOnWrite();
        instance.setNestSeawardOfArmoringStructure(value);
        return this;
      }
      /**
       * <code>optional bool nest_seaward_of_armoring_structure = 14;</code>
       */
      public Builder clearNestSeawardOfArmoringStructure() {
        copyOnWrite();
        instance.clearNestSeawardOfArmoringStructure();
        return this;
      }

      /**
       * <code>optional bool within_3_feet_of_structure = 15;</code>
       */
      @java.lang.Override
      public boolean hasWithin3FeetOfStructure() {
        return instance.hasWithin3FeetOfStructure();
      }
      /**
       * <code>optional bool within_3_feet_of_structure = 15;</code>
       */
      @java.lang.Override
      public boolean getWithin3FeetOfStructure() {
        return instance.getWithin3FeetOfStructure();
      }
      /**
       * <code>optional bool within_3_feet_of_structure = 15;</code>
       */
      public Builder setWithin3FeetOfStructure(boolean value) {
        copyOnWrite();
        instance.setWithin3FeetOfStructure(value);
        return this;
      }
      /**
       * <code>optional bool within_3_feet_of_structure = 15;</code>
       */
      public Builder clearWithin3FeetOfStructure() {
        copyOnWrite();
        instance.clearWithin3FeetOfStructure();
        return this;
      }

      /**
       * <code>optional string type_of_structure = 16;</code>
       */
      @java.lang.Override
      public boolean hasTypeOfStructure() {
        return instance.hasTypeOfStructure();
      }
      /**
       * <code>optional string type_of_structure = 16;</code>
       */
      @java.lang.Override
      public java.lang.String getTypeOfStructure() {
        return instance.getTypeOfStructure();
      }
      /**
       * <code>optional string type_of_structure = 16;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTypeOfStructureBytes() {
        return instance.getTypeOfStructureBytes();
      }
      /**
       * <code>optional string type_of_structure = 16;</code>
       */
      public Builder setTypeOfStructure(
          java.lang.String value) {
        copyOnWrite();
        instance.setTypeOfStructure(value);
        return this;
      }
      /**
       * <code>optional string type_of_structure = 16;</code>
       */
      public Builder clearTypeOfStructure() {
        copyOnWrite();
        instance.clearTypeOfStructure();
        return this;
      }
      /**
       * <code>optional string type_of_structure = 16;</code>
       */
      public Builder setTypeOfStructureBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTypeOfStructureBytes(value);
        return this;
      }

      /**
       * <code>optional string observers = 8;</code>
       */
      @java.lang.Override
      public boolean hasObservers() {
        return instance.hasObservers();
      }
      /**
       * <code>optional string observers = 8;</code>
       */
      @java.lang.Override
      public java.lang.String getObservers() {
        return instance.getObservers();
      }
      /**
       * <code>optional string observers = 8;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getObserversBytes() {
        return instance.getObserversBytes();
      }
      /**
       * <code>optional string observers = 8;</code>
       */
      public Builder setObservers(
          java.lang.String value) {
        copyOnWrite();
        instance.setObservers(value);
        return this;
      }
      /**
       * <code>optional string observers = 8;</code>
       */
      public Builder clearObservers() {
        copyOnWrite();
        instance.clearObservers();
        return this;
      }
      /**
       * <code>optional string observers = 8;</code>
       */
      public Builder setObserversBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setObserversBytes(value);
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
       */
      @java.lang.Override
      public boolean hasCondition() {
        return instance.hasCondition();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition getCondition() {
        return instance.getCondition();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
       */
      public Builder setCondition(com.islandturtlewatch.nest.data.ReportProto.NestCondition value) {
        copyOnWrite();
        instance.setCondition(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
       */
      public Builder setCondition(
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.Builder builderForValue) {
        copyOnWrite();
        instance.setCondition(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
       */
      public Builder mergeCondition(com.islandturtlewatch.nest.data.ReportProto.NestCondition value) {
        copyOnWrite();
        instance.mergeCondition(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition condition = 9;</code>
       */
      public Builder clearCondition() {  copyOnWrite();
        instance.clearCondition();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
       */
      @java.lang.Override
      public boolean hasIntervention() {
        return instance.hasIntervention();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.Intervention getIntervention() {
        return instance.getIntervention();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
       */
      public Builder setIntervention(com.islandturtlewatch.nest.data.ReportProto.Intervention value) {
        copyOnWrite();
        instance.setIntervention(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
       */
      public Builder setIntervention(
          com.islandturtlewatch.nest.data.ReportProto.Intervention.Builder builderForValue) {
        copyOnWrite();
        instance.setIntervention(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
       */
      public Builder mergeIntervention(com.islandturtlewatch.nest.data.ReportProto.Intervention value) {
        copyOnWrite();
        instance.mergeIntervention(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention intervention = 10;</code>
       */
      public Builder clearIntervention() {  copyOnWrite();
        instance.clearIntervention();
        return this;
      }

      /**
       * <code>optional string additional_notes = 11;</code>
       */
      @java.lang.Override
      public boolean hasAdditionalNotes() {
        return instance.hasAdditionalNotes();
      }
      /**
       * <code>optional string additional_notes = 11;</code>
       */
      @java.lang.Override
      public java.lang.String getAdditionalNotes() {
        return instance.getAdditionalNotes();
      }
      /**
       * <code>optional string additional_notes = 11;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAdditionalNotesBytes() {
        return instance.getAdditionalNotesBytes();
      }
      /**
       * <code>optional string additional_notes = 11;</code>
       */
      public Builder setAdditionalNotes(
          java.lang.String value) {
        copyOnWrite();
        instance.setAdditionalNotes(value);
        return this;
      }
      /**
       * <code>optional string additional_notes = 11;</code>
       */
      public Builder clearAdditionalNotes() {
        copyOnWrite();
        instance.clearAdditionalNotes();
        return this;
      }
      /**
       * <code>optional string additional_notes = 11;</code>
       */
      public Builder setAdditionalNotesBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAdditionalNotesBytes(value);
        return this;
      }

      /**
       * <pre>
       *NEXT ID = 18
       * </pre>
       *
       * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
       */
      @java.lang.Override
      public java.util.List<com.islandturtlewatch.nest.data.ReportProto.Image> getImageList() {
        return java.util.Collections.unmodifiableList(
            instance.getImageList());
      }
      /**
       * <pre>
       *NEXT ID = 18
       * </pre>
       *
       * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
       */
      @java.lang.Override
      public int getImageCount() {
        return instance.getImageCount();
      }/**
       * <pre>
       *NEXT ID = 18
       * </pre>
       *
       * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.Image getImage(int index) {
        return instance.getImage(index);
      }
      /**
       * <pre>
       *NEXT ID = 18
       * </pre>
       *
       * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
       */
      public Builder setImage(
          int index, com.islandturtlewatch.nest.data.ReportProto.Image value) {
        copyOnWrite();
        instance.setImage(index, value);
        return this;
      }
      /**
       * <pre>
       *NEXT ID = 18
       * </pre>
       *
       * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
       */
      public Builder setImage(
          int index, com.islandturtlewatch.nest.data.ReportProto.Image.Builder builderForValue) {
        copyOnWrite();
        instance.setImage(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *NEXT ID = 18
       * </pre>
       *
       * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
       */
      public Builder addImage(com.islandturtlewatch.nest.data.ReportProto.Image value) {
        copyOnWrite();
        instance.addImage(value);
        return this;
      }
      /**
       * <pre>
       *NEXT ID = 18
       * </pre>
       *
       * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
       */
      public Builder addImage(
          int index, com.islandturtlewatch.nest.data.ReportProto.Image value) {
        copyOnWrite();
        instance.addImage(index, value);
        return this;
      }
      /**
       * <pre>
       *NEXT ID = 18
       * </pre>
       *
       * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
       */
      public Builder addImage(
          com.islandturtlewatch.nest.data.ReportProto.Image.Builder builderForValue) {
        copyOnWrite();
        instance.addImage(builderForValue);
        return this;
      }
      /**
       * <pre>
       *NEXT ID = 18
       * </pre>
       *
       * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
       */
      public Builder addImage(
          int index, com.islandturtlewatch.nest.data.ReportProto.Image.Builder builderForValue) {
        copyOnWrite();
        instance.addImage(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *NEXT ID = 18
       * </pre>
       *
       * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
       */
      public Builder addAllImage(
          java.lang.Iterable<? extends com.islandturtlewatch.nest.data.ReportProto.Image> values) {
        copyOnWrite();
        instance.addAllImage(values);
        return this;
      }
      /**
       * <pre>
       *NEXT ID = 18
       * </pre>
       *
       * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
       */
      public Builder clearImage() {
        copyOnWrite();
        instance.clearImage();
        return this;
      }
      /**
       * <pre>
       *NEXT ID = 18
       * </pre>
       *
       * <code>repeated .com.islandturtlewatch.nest.data.Image image = 12;</code>
       */
      public Builder removeImage(int index) {
        copyOnWrite();
        instance.removeImage(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.Report)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.islandturtlewatch.nest.data.ReportProto.Report();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          image_.makeImmutable();
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.islandturtlewatch.nest.data.ReportProto.Report other = (com.islandturtlewatch.nest.data.ReportProto.Report) arg1;
          timestampFoundMs_ = visitor.visitLong(
              hasTimestampFoundMs(), timestampFoundMs_,
              other.hasTimestampFoundMs(), other.timestampFoundMs_);
          nestNumber_ = visitor.visitInt(
              hasNestNumber(), nestNumber_,
              other.hasNestNumber(), other.nestNumber_);
          falseCrawlNumber_ = visitor.visitInt(
              hasFalseCrawlNumber(), falseCrawlNumber_,
              other.hasFalseCrawlNumber(), other.falseCrawlNumber_);
          possibleFalseCrawlNumber_ = visitor.visitInt(
              hasPossibleFalseCrawlNumber(), possibleFalseCrawlNumber_,
              other.hasPossibleFalseCrawlNumber(), other.possibleFalseCrawlNumber_);
          species_ = visitor.visitInt(hasSpecies(), species_,
              other.hasSpecies(), other.species_);
          speciesOther_ = visitor.visitString(
              hasSpeciesOther(), speciesOther_,
              other.hasSpeciesOther(), other.speciesOther_);
          status_ = visitor.visitInt(hasStatus(), status_,
              other.hasStatus(), other.status_);
          possibleFalseCrawl_ = visitor.visitBoolean(
              hasPossibleFalseCrawl(), possibleFalseCrawl_,
              other.hasPossibleFalseCrawl(), other.possibleFalseCrawl_);
          location_ = visitor.visitMessage(location_, other.location_);
          nestSeawardOfArmoringStructure_ = visitor.visitBoolean(
              hasNestSeawardOfArmoringStructure(), nestSeawardOfArmoringStructure_,
              other.hasNestSeawardOfArmoringStructure(), other.nestSeawardOfArmoringStructure_);
          within3FeetOfStructure_ = visitor.visitBoolean(
              hasWithin3FeetOfStructure(), within3FeetOfStructure_,
              other.hasWithin3FeetOfStructure(), other.within3FeetOfStructure_);
          typeOfStructure_ = visitor.visitString(
              hasTypeOfStructure(), typeOfStructure_,
              other.hasTypeOfStructure(), other.typeOfStructure_);
          observers_ = visitor.visitString(
              hasObservers(), observers_,
              other.hasObservers(), other.observers_);
          condition_ = visitor.visitMessage(condition_, other.condition_);
          intervention_ = visitor.visitMessage(intervention_, other.intervention_);
          additionalNotes_ = visitor.visitString(
              hasAdditionalNotes(), additionalNotes_,
              other.hasAdditionalNotes(), other.additionalNotes_);
          image_= visitor.visitList(image_, other.image_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  timestampFoundMs_ = input.readInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  nestNumber_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  falseCrawlNumber_ = input.readInt32();
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();
                  com.islandturtlewatch.nest.data.ReportProto.Report.Species value = com.islandturtlewatch.nest.data.ReportProto.Report.Species.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(4, rawValue);
                  } else {
                    bitField0_ |= 0x00000010;
                    species_ = rawValue;
                  }
                  break;
                }
                case 42: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000020;
                  speciesOther_ = s;
                  break;
                }
                case 48: {
                  int rawValue = input.readEnum();
                  com.islandturtlewatch.nest.data.ReportProto.Report.NestStatus value = com.islandturtlewatch.nest.data.ReportProto.Report.NestStatus.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(6, rawValue);
                  } else {
                    bitField0_ |= 0x00000040;
                    status_ = rawValue;
                  }
                  break;
                }
                case 58: {
                  com.islandturtlewatch.nest.data.ReportProto.NestLocation.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000100) == 0x00000100)) {
                    subBuilder = location_.toBuilder();
                  }
                  location_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.NestLocation.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(location_);
                    location_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000100;
                  break;
                }
                case 66: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00001000;
                  observers_ = s;
                  break;
                }
                case 74: {
                  com.islandturtlewatch.nest.data.ReportProto.NestCondition.Builder subBuilder = null;
                  if (((bitField0_ & 0x00002000) == 0x00002000)) {
                    subBuilder = condition_.toBuilder();
                  }
                  condition_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.NestCondition.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(condition_);
                    condition_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00002000;
                  break;
                }
                case 82: {
                  com.islandturtlewatch.nest.data.ReportProto.Intervention.Builder subBuilder = null;
                  if (((bitField0_ & 0x00004000) == 0x00004000)) {
                    subBuilder = intervention_.toBuilder();
                  }
                  intervention_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.Intervention.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(intervention_);
                    intervention_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00004000;
                  break;
                }
                case 90: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00008000;
                  additionalNotes_ = s;
                  break;
                }
                case 98: {
                  if (!image_.isModifiable()) {
                    image_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(image_);
                  }
                  image_.add(
                      input.readMessage(com.islandturtlewatch.nest.data.ReportProto.Image.parser(), extensionRegistry));
                  break;
                }
                case 104: {
                  bitField0_ |= 0x00000080;
                  possibleFalseCrawl_ = input.readBool();
                  break;
                }
                case 112: {
                  bitField0_ |= 0x00000200;
                  nestSeawardOfArmoringStructure_ = input.readBool();
                  break;
                }
                case 120: {
                  bitField0_ |= 0x00000400;
                  within3FeetOfStructure_ = input.readBool();
                  break;
                }
                case 130: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000800;
                  typeOfStructure_ = s;
                  break;
                }
                case 136: {
                  bitField0_ |= 0x00000008;
                  possibleFalseCrawlNumber_ = input.readInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.Report> parser = PARSER;
          if (parser == null) {
            synchronized (com.islandturtlewatch.nest.data.ReportProto.Report.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.Report)
    private static final com.islandturtlewatch.nest.data.ReportProto.Report DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new Report();
    }

    public static com.islandturtlewatch.nest.data.ReportProto.Report getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Report> PARSER;

    public static com.google.protobuf.Parser<Report> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.Image)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string file_name = 1;</code>
     */
    boolean hasFileName();
    /**
     * <code>optional string file_name = 1;</code>
     */
    java.lang.String getFileName();
    /**
     * <code>optional string file_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <pre>
     * Usually only set for transport.
     * </pre>
     *
     * <code>optional bytes raw_data = 2;</code>
     */
    boolean hasRawData();
    /**
     * <pre>
     * Usually only set for transport.
     * </pre>
     *
     * <code>optional bytes raw_data = 2;</code>
     */
    com.google.protobuf.ByteString getRawData();
  }
  /**
   * Protobuf type {@code com.islandturtlewatch.nest.data.Image}
   */
  public  static final class Image extends
      com.google.protobuf.GeneratedMessageLite<
          Image, Image.Builder> implements
      // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.Image)
      ImageOrBuilder {
    private Image() {
      fileName_ = "";
      rawData_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int FILE_NAME_FIELD_NUMBER = 1;
    private java.lang.String fileName_;
    /**
     * <code>optional string file_name = 1;</code>
     */
    @java.lang.Override
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string file_name = 1;</code>
     */
    @java.lang.Override
    public java.lang.String getFileName() {
      return fileName_;
    }
    /**
     * <code>optional string file_name = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(fileName_);
    }
    /**
     * <code>optional string file_name = 1;</code>
     */
    private void setFileName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      fileName_ = value;
    }
    /**
     * <code>optional string file_name = 1;</code>
     */
    private void clearFileName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      fileName_ = getDefaultInstance().getFileName();
    }
    /**
     * <code>optional string file_name = 1;</code>
     */
    private void setFileNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      fileName_ = value.toStringUtf8();
    }

    public static final int RAW_DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString rawData_;
    /**
     * <pre>
     * Usually only set for transport.
     * </pre>
     *
     * <code>optional bytes raw_data = 2;</code>
     */
    @java.lang.Override
    public boolean hasRawData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Usually only set for transport.
     * </pre>
     *
     * <code>optional bytes raw_data = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRawData() {
      return rawData_;
    }
    /**
     * <pre>
     * Usually only set for transport.
     * </pre>
     *
     * <code>optional bytes raw_data = 2;</code>
     */
    private void setRawData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      rawData_ = value;
    }
    /**
     * <pre>
     * Usually only set for transport.
     * </pre>
     *
     * <code>optional bytes raw_data = 2;</code>
     */
    private void clearRawData() {
      bitField0_ = (bitField0_ & ~0x00000002);
      rawData_ = getDefaultInstance().getRawData();
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getFileName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, rawData_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getFileName());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, rawData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.islandturtlewatch.nest.data.ReportProto.Image parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Image parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Image parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Image parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Image parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Image parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Image parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Image parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Image parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Image parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Image parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Image parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.Image prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.Image}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.islandturtlewatch.nest.data.ReportProto.Image, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.Image)
        com.islandturtlewatch.nest.data.ReportProto.ImageOrBuilder {
      // Construct using com.islandturtlewatch.nest.data.ReportProto.Image.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string file_name = 1;</code>
       */
      @java.lang.Override
      public boolean hasFileName() {
        return instance.hasFileName();
      }
      /**
       * <code>optional string file_name = 1;</code>
       */
      @java.lang.Override
      public java.lang.String getFileName() {
        return instance.getFileName();
      }
      /**
       * <code>optional string file_name = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        return instance.getFileNameBytes();
      }
      /**
       * <code>optional string file_name = 1;</code>
       */
      public Builder setFileName(
          java.lang.String value) {
        copyOnWrite();
        instance.setFileName(value);
        return this;
      }
      /**
       * <code>optional string file_name = 1;</code>
       */
      public Builder clearFileName() {
        copyOnWrite();
        instance.clearFileName();
        return this;
      }
      /**
       * <code>optional string file_name = 1;</code>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFileNameBytes(value);
        return this;
      }

      /**
       * <pre>
       * Usually only set for transport.
       * </pre>
       *
       * <code>optional bytes raw_data = 2;</code>
       */
      @java.lang.Override
      public boolean hasRawData() {
        return instance.hasRawData();
      }
      /**
       * <pre>
       * Usually only set for transport.
       * </pre>
       *
       * <code>optional bytes raw_data = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRawData() {
        return instance.getRawData();
      }
      /**
       * <pre>
       * Usually only set for transport.
       * </pre>
       *
       * <code>optional bytes raw_data = 2;</code>
       */
      public Builder setRawData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRawData(value);
        return this;
      }
      /**
       * <pre>
       * Usually only set for transport.
       * </pre>
       *
       * <code>optional bytes raw_data = 2;</code>
       */
      public Builder clearRawData() {
        copyOnWrite();
        instance.clearRawData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.Image)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.islandturtlewatch.nest.data.ReportProto.Image();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.islandturtlewatch.nest.data.ReportProto.Image other = (com.islandturtlewatch.nest.data.ReportProto.Image) arg1;
          fileName_ = visitor.visitString(
              hasFileName(), fileName_,
              other.hasFileName(), other.fileName_);
          rawData_ = visitor.visitByteString(
              hasRawData(), rawData_,
              other.hasRawData(), other.rawData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000001;
                  fileName_ = s;
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  rawData_ = input.readBytes();
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.Image> parser = PARSER;
          if (parser == null) {
            synchronized (com.islandturtlewatch.nest.data.ReportProto.Image.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.Image)
    private static final com.islandturtlewatch.nest.data.ReportProto.Image DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new Image();
    }

    public static com.islandturtlewatch.nest.data.ReportProto.Image getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Image> PARSER;

    public static com.google.protobuf.Parser<Image> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface NestConditionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.NestCondition)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional bool ghost_damage_10_or_less = 31 [default = true];</code>
     */
    boolean hasGhostDamage10OrLess();
    /**
     * <code>optional bool ghost_damage_10_or_less = 31 [default = true];</code>
     */
    boolean getGhostDamage10OrLess();

    /**
     * <code>optional bool vandalized = 1;</code>
     */
    boolean hasVandalized();
    /**
     * <code>optional bool vandalized = 1;</code>
     */
    boolean getVandalized();

    /**
     * <code>optional string describe_control_methods = 28;</code>
     */
    boolean hasDescribeControlMethods();
    /**
     * <code>optional string describe_control_methods = 28;</code>
     */
    java.lang.String getDescribeControlMethods();
    /**
     * <code>optional string describe_control_methods = 28;</code>
     */
    com.google.protobuf.ByteString
        getDescribeControlMethodsBytes();

    /**
     * <code>optional int64 vandalized_timestamp_ms = 2;</code>
     */
    boolean hasVandalizedTimestampMs();
    /**
     * <code>optional int64 vandalized_timestamp_ms = 2;</code>
     */
    long getVandalizedTimestampMs();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.VandalismType vandalism_type = 15;</code>
     */
    boolean hasVandalismType();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.VandalismType vandalism_type = 15;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestCondition.VandalismType getVandalismType();

    /**
     * <code>optional bool nest_dug_into = 26;</code>
     */
    boolean hasNestDugInto();
    /**
     * <code>optional bool nest_dug_into = 26;</code>
     */
    boolean getNestDugInto();

    /**
     * <pre>
     * post_hatch_washout is deprecated, we are now using complete_washout_timing instead
     * </pre>
     *
     * <code>optional bool post_hatch_washout = 20;</code>
     */
    boolean hasPostHatchWashout();
    /**
     * <pre>
     * post_hatch_washout is deprecated, we are now using complete_washout_timing instead
     * </pre>
     *
     * <code>optional bool post_hatch_washout = 20;</code>
     */
    boolean getPostHatchWashout();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption complete_washout_timing = 34;</code>
     */
    boolean hasCompleteWashoutTiming();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption complete_washout_timing = 34;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption getCompleteWashoutTiming();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption partial_washout_timing = 35;</code>
     */
    boolean hasPartialWashoutTiming();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption partial_washout_timing = 35;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption getPartialWashoutTiming();

    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> 
        getAccretionList();
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getAccretion(int index);
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    int getAccretionCount();

    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> 
        getErosionList();
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getErosion(int index);
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    int getErosionCount();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
     */
    boolean hasStormImpact();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact getStormImpact();

    /**
     * <code>optional bool poached = 3;</code>
     */
    boolean hasPoached();
    /**
     * <code>optional bool poached = 3;</code>
     */
    boolean getPoached();

    /**
     * <code>optional int64 poached_timestamp_ms = 4;</code>
     */
    boolean hasPoachedTimestampMs();
    /**
     * <code>optional int64 poached_timestamp_ms = 4;</code>
     */
    long getPoachedTimestampMs();

    /**
     * <code>optional bool poached_eggs_removed = 17;</code>
     */
    boolean hasPoachedEggsRemoved();
    /**
     * <code>optional bool poached_eggs_removed = 17;</code>
     */
    boolean getPoachedEggsRemoved();

    /**
     * <code>optional bool roots_invaded_eggshells = 5;</code>
     */
    boolean hasRootsInvadedEggshells();
    /**
     * <code>optional bool roots_invaded_eggshells = 5;</code>
     */
    boolean getRootsInvadedEggshells();

    /**
     * <code>optional bool eggs_scattered_by_another = 6;</code>
     */
    boolean hasEggsScatteredByAnother();
    /**
     * <code>optional bool eggs_scattered_by_another = 6;</code>
     */
    boolean getEggsScatteredByAnother();

    /**
     * <code>optional int64 eggs_scattered_by_another_timestamp_ms = 16;</code>
     */
    boolean hasEggsScatteredByAnotherTimestampMs();
    /**
     * <code>optional int64 eggs_scattered_by_another_timestamp_ms = 16;</code>
     */
    long getEggsScatteredByAnotherTimestampMs();

    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> 
        getWashOverList();
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getWashOver(int index);
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    int getWashOverCount();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
     */
    boolean hasWashOut();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getWashOut();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
     */
    boolean hasPartialWashout();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getPartialWashout();

    /**
     * <pre>
     *nest_inundated is deprecated, use new inundated_event instead
     * </pre>
     *
     * <code>optional bool nest_inundated = 21;</code>
     */
    boolean hasNestInundated();
    /**
     * <pre>
     *nest_inundated is deprecated, use new inundated_event instead
     * </pre>
     *
     * <code>optional bool nest_inundated = 21;</code>
     */
    boolean getNestInundated();

    /**
     * <code>optional int64 nest_inundated_timestamp_ms = 22;</code>
     */
    boolean hasNestInundatedTimestampMs();
    /**
     * <code>optional int64 nest_inundated_timestamp_ms = 22;</code>
     */
    long getNestInundatedTimestampMs();

    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> 
        getInundatedEventList();
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getInundatedEvent(int index);
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    int getInundatedEventCount();

    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent> 
        getPreditationList();
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent getPreditation(int index);
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    int getPreditationCount();

    /**
     * <code>optional bool actively_record_events = 27 [default = true];</code>
     */
    boolean hasActivelyRecordEvents();
    /**
     * <code>optional bool actively_record_events = 27 [default = true];</code>
     */
    boolean getActivelyRecordEvents();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.ProportionEventsRecorded prop_events_recorded = 29;</code>
     */
    boolean hasPropEventsRecorded();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.ProportionEventsRecorded prop_events_recorded = 29;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestCondition.ProportionEventsRecorded getPropEventsRecorded();

    /**
     * <code>optional int64 hatch_timestamp_ms = 10;</code>
     */
    boolean hasHatchTimestampMs();
    /**
     * <code>optional int64 hatch_timestamp_ms = 10;</code>
     */
    long getHatchTimestampMs();

    /**
     * <code>optional int64 additional_hatch_timestamp_ms = 11;</code>
     */
    boolean hasAdditionalHatchTimestampMs();
    /**
     * <code>optional int64 additional_hatch_timestamp_ms = 11;</code>
     */
    long getAdditionalHatchTimestampMs();

    /**
     * <code>optional bool disorientation = 12;</code>
     */
    boolean hasDisorientation();
    /**
     * <code>optional bool disorientation = 12;</code>
     */
    boolean getDisorientation();

    /**
     * <code>optional bool abandoned_body_pits = 13;</code>
     */
    boolean hasAbandonedBodyPits();
    /**
     * <code>optional bool abandoned_body_pits = 13;</code>
     */
    boolean getAbandonedBodyPits();

    /**
     * <code>optional bool abandoned_egg_cavities = 14;</code>
     */
    boolean hasAbandonedEggCavities();
    /**
     * <code>optional bool abandoned_egg_cavities = 14;</code>
     */
    boolean getAbandonedEggCavities();

    /**
     * <code>optional bool no_digging = 18;</code>
     */
    boolean hasNoDigging();
    /**
     * <code>optional bool no_digging = 18;</code>
     */
    boolean getNoDigging();

    /**
     * <code>optional bool nest_depredated = 23;</code>
     */
    boolean hasNestDepredated();
    /**
     * <code>optional bool nest_depredated = 23;</code>
     */
    boolean getNestDepredated();

    /**
     * <pre>
     * Next ID=35
     * </pre>
     *
     * <code>optional bool eggs_damaged_by_another_turtle = 24;</code>
     */
    boolean hasEggsDamagedByAnotherTurtle();
    /**
     * <pre>
     * Next ID=35
     * </pre>
     *
     * <code>optional bool eggs_damaged_by_another_turtle = 24;</code>
     */
    boolean getEggsDamagedByAnotherTurtle();
  }
  /**
   * Protobuf type {@code com.islandturtlewatch.nest.data.NestCondition}
   */
  public  static final class NestCondition extends
      com.google.protobuf.GeneratedMessageLite<
          NestCondition, NestCondition.Builder> implements
      // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.NestCondition)
      NestConditionOrBuilder {
    private NestCondition() {
      ghostDamage10OrLess_ = true;
      describeControlMethods_ = "";
      vandalismType_ = 1;
      completeWashoutTiming_ = 1;
      partialWashoutTiming_ = 1;
      accretion_ = emptyProtobufList();
      erosion_ = emptyProtobufList();
      washOver_ = emptyProtobufList();
      inundatedEvent_ = emptyProtobufList();
      preditation_ = emptyProtobufList();
      activelyRecordEvents_ = true;
      propEventsRecorded_ = 1;
    }
    /**
     * Protobuf enum {@code com.islandturtlewatch.nest.data.NestCondition.VandalismType}
     */
    public enum VandalismType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>UNKOWN = 1;</code>
       */
      UNKOWN(1),
      /**
       * <code>STAKES_REMOVED = 2;</code>
       */
      STAKES_REMOVED(2),
      /**
       * <code>NEST_DUG_INTO = 3;</code>
       */
      NEST_DUG_INTO(3),
      /**
       * <code>EGGS_AFFECTED = 4;</code>
       */
      EGGS_AFFECTED(4),
      ;

      /**
       * <code>UNKOWN = 1;</code>
       */
      public static final int UNKOWN_VALUE = 1;
      /**
       * <code>STAKES_REMOVED = 2;</code>
       */
      public static final int STAKES_REMOVED_VALUE = 2;
      /**
       * <code>NEST_DUG_INTO = 3;</code>
       */
      public static final int NEST_DUG_INTO_VALUE = 3;
      /**
       * <code>EGGS_AFFECTED = 4;</code>
       */
      public static final int EGGS_AFFECTED_VALUE = 4;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static VandalismType valueOf(int value) {
        return forNumber(value);
      }

      public static VandalismType forNumber(int value) {
        switch (value) {
          case 1: return UNKOWN;
          case 2: return STAKES_REMOVED;
          case 3: return NEST_DUG_INTO;
          case 4: return EGGS_AFFECTED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<VandalismType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          VandalismType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<VandalismType>() {
              @java.lang.Override
              public VandalismType findValueByNumber(int number) {
                return VandalismType.forNumber(number);
              }
            };

      private final int value;

      private VandalismType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.NestCondition.VandalismType)
    }

    /**
     * Protobuf enum {@code com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption}
     */
    public enum WashoutTimeOption
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>PRE_HATCH = 1;</code>
       */
      PRE_HATCH(1),
      /**
       * <code>POST_HATCH = 2;</code>
       */
      POST_HATCH(2),
      /**
       * <code>NONE = 3;</code>
       */
      NONE(3),
      ;

      /**
       * <code>PRE_HATCH = 1;</code>
       */
      public static final int PRE_HATCH_VALUE = 1;
      /**
       * <code>POST_HATCH = 2;</code>
       */
      public static final int POST_HATCH_VALUE = 2;
      /**
       * <code>NONE = 3;</code>
       */
      public static final int NONE_VALUE = 3;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static WashoutTimeOption valueOf(int value) {
        return forNumber(value);
      }

      public static WashoutTimeOption forNumber(int value) {
        switch (value) {
          case 1: return PRE_HATCH;
          case 2: return POST_HATCH;
          case 3: return NONE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<WashoutTimeOption>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          WashoutTimeOption> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<WashoutTimeOption>() {
              @java.lang.Override
              public WashoutTimeOption findValueByNumber(int number) {
                return WashoutTimeOption.forNumber(number);
              }
            };

      private final int value;

      private WashoutTimeOption(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption)
    }

    /**
     * Protobuf enum {@code com.islandturtlewatch.nest.data.NestCondition.ProportionEventsRecorded}
     */
    public enum ProportionEventsRecorded
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ALL = 1;</code>
       */
      ALL(1),
      /**
       * <code>MOST = 2;</code>
       */
      MOST(2),
      /**
       * <code>SOME = 3;</code>
       */
      SOME(3),
      /**
       * <code>FEW = 4;</code>
       */
      FEW(4),
      ;

      /**
       * <code>ALL = 1;</code>
       */
      public static final int ALL_VALUE = 1;
      /**
       * <code>MOST = 2;</code>
       */
      public static final int MOST_VALUE = 2;
      /**
       * <code>SOME = 3;</code>
       */
      public static final int SOME_VALUE = 3;
      /**
       * <code>FEW = 4;</code>
       */
      public static final int FEW_VALUE = 4;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ProportionEventsRecorded valueOf(int value) {
        return forNumber(value);
      }

      public static ProportionEventsRecorded forNumber(int value) {
        switch (value) {
          case 1: return ALL;
          case 2: return MOST;
          case 3: return SOME;
          case 4: return FEW;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ProportionEventsRecorded>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ProportionEventsRecorded> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ProportionEventsRecorded>() {
              @java.lang.Override
              public ProportionEventsRecorded findValueByNumber(int number) {
                return ProportionEventsRecorded.forNumber(number);
              }
            };

      private final int value;

      private ProportionEventsRecorded(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.NestCondition.ProportionEventsRecorded)
    }

    public interface StormImpactOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.NestCondition.StormImpact)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      boolean hasTimestampMs();
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      long getTimestampMs();

      /**
       * <code>optional string storm_name = 2;</code>
       */
      boolean hasStormName();
      /**
       * <code>optional string storm_name = 2;</code>
       */
      java.lang.String getStormName();
      /**
       * <code>optional string storm_name = 2;</code>
       */
      com.google.protobuf.ByteString
          getStormNameBytes();

      /**
       * <code>optional string other_impact = 3;</code>
       */
      boolean hasOtherImpact();
      /**
       * <code>optional string other_impact = 3;</code>
       */
      java.lang.String getOtherImpact();
      /**
       * <code>optional string other_impact = 3;</code>
       */
      com.google.protobuf.ByteString
          getOtherImpactBytes();

      /**
       * <code>optional bool event_prior_to_hatching = 4;</code>
       */
      boolean hasEventPriorToHatching();
      /**
       * <code>optional bool event_prior_to_hatching = 4;</code>
       */
      boolean getEventPriorToHatching();
    }
    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.NestCondition.StormImpact}
     */
    public  static final class StormImpact extends
        com.google.protobuf.GeneratedMessageLite<
            StormImpact, StormImpact.Builder> implements
        // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.NestCondition.StormImpact)
        StormImpactOrBuilder {
      private StormImpact() {
        stormName_ = "";
        otherImpact_ = "";
      }
      private int bitField0_;
      public static final int TIMESTAMP_MS_FIELD_NUMBER = 1;
      private long timestampMs_;
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      @java.lang.Override
      public boolean hasTimestampMs() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      @java.lang.Override
      public long getTimestampMs() {
        return timestampMs_;
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      private void setTimestampMs(long value) {
        bitField0_ |= 0x00000001;
        timestampMs_ = value;
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      private void clearTimestampMs() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestampMs_ = 0L;
      }

      public static final int STORM_NAME_FIELD_NUMBER = 2;
      private java.lang.String stormName_;
      /**
       * <code>optional string storm_name = 2;</code>
       */
      @java.lang.Override
      public boolean hasStormName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string storm_name = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getStormName() {
        return stormName_;
      }
      /**
       * <code>optional string storm_name = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStormNameBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(stormName_);
      }
      /**
       * <code>optional string storm_name = 2;</code>
       */
      private void setStormName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        stormName_ = value;
      }
      /**
       * <code>optional string storm_name = 2;</code>
       */
      private void clearStormName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stormName_ = getDefaultInstance().getStormName();
      }
      /**
       * <code>optional string storm_name = 2;</code>
       */
      private void setStormNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        stormName_ = value.toStringUtf8();
      }

      public static final int OTHER_IMPACT_FIELD_NUMBER = 3;
      private java.lang.String otherImpact_;
      /**
       * <code>optional string other_impact = 3;</code>
       */
      @java.lang.Override
      public boolean hasOtherImpact() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string other_impact = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getOtherImpact() {
        return otherImpact_;
      }
      /**
       * <code>optional string other_impact = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getOtherImpactBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(otherImpact_);
      }
      /**
       * <code>optional string other_impact = 3;</code>
       */
      private void setOtherImpact(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        otherImpact_ = value;
      }
      /**
       * <code>optional string other_impact = 3;</code>
       */
      private void clearOtherImpact() {
        bitField0_ = (bitField0_ & ~0x00000004);
        otherImpact_ = getDefaultInstance().getOtherImpact();
      }
      /**
       * <code>optional string other_impact = 3;</code>
       */
      private void setOtherImpactBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        otherImpact_ = value.toStringUtf8();
      }

      public static final int EVENT_PRIOR_TO_HATCHING_FIELD_NUMBER = 4;
      private boolean eventPriorToHatching_;
      /**
       * <code>optional bool event_prior_to_hatching = 4;</code>
       */
      @java.lang.Override
      public boolean hasEventPriorToHatching() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool event_prior_to_hatching = 4;</code>
       */
      @java.lang.Override
      public boolean getEventPriorToHatching() {
        return eventPriorToHatching_;
      }
      /**
       * <code>optional bool event_prior_to_hatching = 4;</code>
       */
      private void setEventPriorToHatching(boolean value) {
        bitField0_ |= 0x00000008;
        eventPriorToHatching_ = value;
      }
      /**
       * <code>optional bool event_prior_to_hatching = 4;</code>
       */
      private void clearEventPriorToHatching() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eventPriorToHatching_ = false;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, timestampMs_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeString(2, getStormName());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeString(3, getOtherImpact());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(4, eventPriorToHatching_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, timestampMs_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getStormName());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(3, getOtherImpact());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, eventPriorToHatching_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code com.islandturtlewatch.nest.data.NestCondition.StormImpact}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact, Builder> implements
          // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.NestCondition.StormImpact)
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpactOrBuilder {
        // Construct using com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        @java.lang.Override
        public boolean hasTimestampMs() {
          return instance.hasTimestampMs();
        }
        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        @java.lang.Override
        public long getTimestampMs() {
          return instance.getTimestampMs();
        }
        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        public Builder setTimestampMs(long value) {
          copyOnWrite();
          instance.setTimestampMs(value);
          return this;
        }
        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        public Builder clearTimestampMs() {
          copyOnWrite();
          instance.clearTimestampMs();
          return this;
        }

        /**
         * <code>optional string storm_name = 2;</code>
         */
        @java.lang.Override
        public boolean hasStormName() {
          return instance.hasStormName();
        }
        /**
         * <code>optional string storm_name = 2;</code>
         */
        @java.lang.Override
        public java.lang.String getStormName() {
          return instance.getStormName();
        }
        /**
         * <code>optional string storm_name = 2;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getStormNameBytes() {
          return instance.getStormNameBytes();
        }
        /**
         * <code>optional string storm_name = 2;</code>
         */
        public Builder setStormName(
            java.lang.String value) {
          copyOnWrite();
          instance.setStormName(value);
          return this;
        }
        /**
         * <code>optional string storm_name = 2;</code>
         */
        public Builder clearStormName() {
          copyOnWrite();
          instance.clearStormName();
          return this;
        }
        /**
         * <code>optional string storm_name = 2;</code>
         */
        public Builder setStormNameBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setStormNameBytes(value);
          return this;
        }

        /**
         * <code>optional string other_impact = 3;</code>
         */
        @java.lang.Override
        public boolean hasOtherImpact() {
          return instance.hasOtherImpact();
        }
        /**
         * <code>optional string other_impact = 3;</code>
         */
        @java.lang.Override
        public java.lang.String getOtherImpact() {
          return instance.getOtherImpact();
        }
        /**
         * <code>optional string other_impact = 3;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getOtherImpactBytes() {
          return instance.getOtherImpactBytes();
        }
        /**
         * <code>optional string other_impact = 3;</code>
         */
        public Builder setOtherImpact(
            java.lang.String value) {
          copyOnWrite();
          instance.setOtherImpact(value);
          return this;
        }
        /**
         * <code>optional string other_impact = 3;</code>
         */
        public Builder clearOtherImpact() {
          copyOnWrite();
          instance.clearOtherImpact();
          return this;
        }
        /**
         * <code>optional string other_impact = 3;</code>
         */
        public Builder setOtherImpactBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setOtherImpactBytes(value);
          return this;
        }

        /**
         * <code>optional bool event_prior_to_hatching = 4;</code>
         */
        @java.lang.Override
        public boolean hasEventPriorToHatching() {
          return instance.hasEventPriorToHatching();
        }
        /**
         * <code>optional bool event_prior_to_hatching = 4;</code>
         */
        @java.lang.Override
        public boolean getEventPriorToHatching() {
          return instance.getEventPriorToHatching();
        }
        /**
         * <code>optional bool event_prior_to_hatching = 4;</code>
         */
        public Builder setEventPriorToHatching(boolean value) {
          copyOnWrite();
          instance.setEventPriorToHatching(value);
          return this;
        }
        /**
         * <code>optional bool event_prior_to_hatching = 4;</code>
         */
        public Builder clearEventPriorToHatching() {
          copyOnWrite();
          instance.clearEventPriorToHatching();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.NestCondition.StormImpact)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact other = (com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact) arg1;
            timestampMs_ = visitor.visitLong(
                hasTimestampMs(), timestampMs_,
                other.hasTimestampMs(), other.timestampMs_);
            stormName_ = visitor.visitString(
                hasStormName(), stormName_,
                other.hasStormName(), other.stormName_);
            otherImpact_ = visitor.visitString(
                hasOtherImpact(), otherImpact_,
                other.hasOtherImpact(), other.otherImpact_);
            eventPriorToHatching_ = visitor.visitBoolean(
                hasEventPriorToHatching(), eventPriorToHatching_,
                other.hasEventPriorToHatching(), other.eventPriorToHatching_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    bitField0_ |= 0x00000001;
                    timestampMs_ = input.readInt64();
                    break;
                  }
                  case 18: {
                    java.lang.String s = input.readString();
                    bitField0_ |= 0x00000002;
                    stormName_ = s;
                    break;
                  }
                  case 26: {
                    java.lang.String s = input.readString();
                    bitField0_ |= 0x00000004;
                    otherImpact_ = s;
                    break;
                  }
                  case 32: {
                    bitField0_ |= 0x00000008;
                    eventPriorToHatching_ = input.readBool();
                    break;
                  }
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact> parser = PARSER;
            if (parser == null) {
              synchronized (com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.NestCondition.StormImpact)
      private static final com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new StormImpact();
      }

      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<StormImpact> PARSER;

      public static com.google.protobuf.Parser<StormImpact> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface WashEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.NestCondition.WashEvent)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      boolean hasTimestampMs();
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      long getTimestampMs();

      /**
       * <code>optional string storm_name = 2;</code>
       */
      boolean hasStormName();
      /**
       * <code>optional string storm_name = 2;</code>
       */
      java.lang.String getStormName();
      /**
       * <code>optional string storm_name = 2;</code>
       */
      com.google.protobuf.ByteString
          getStormNameBytes();

      /**
       * <code>optional bool event_prior_to_hatching = 3;</code>
       */
      boolean hasEventPriorToHatching();
      /**
       * <code>optional bool event_prior_to_hatching = 3;</code>
       */
      boolean getEventPriorToHatching();
    }
    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.NestCondition.WashEvent}
     */
    public  static final class WashEvent extends
        com.google.protobuf.GeneratedMessageLite<
            WashEvent, WashEvent.Builder> implements
        // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.NestCondition.WashEvent)
        WashEventOrBuilder {
      private WashEvent() {
        stormName_ = "";
      }
      private int bitField0_;
      public static final int TIMESTAMP_MS_FIELD_NUMBER = 1;
      private long timestampMs_;
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      @java.lang.Override
      public boolean hasTimestampMs() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      @java.lang.Override
      public long getTimestampMs() {
        return timestampMs_;
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      private void setTimestampMs(long value) {
        bitField0_ |= 0x00000001;
        timestampMs_ = value;
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      private void clearTimestampMs() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestampMs_ = 0L;
      }

      public static final int STORM_NAME_FIELD_NUMBER = 2;
      private java.lang.String stormName_;
      /**
       * <code>optional string storm_name = 2;</code>
       */
      @java.lang.Override
      public boolean hasStormName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string storm_name = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getStormName() {
        return stormName_;
      }
      /**
       * <code>optional string storm_name = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStormNameBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(stormName_);
      }
      /**
       * <code>optional string storm_name = 2;</code>
       */
      private void setStormName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        stormName_ = value;
      }
      /**
       * <code>optional string storm_name = 2;</code>
       */
      private void clearStormName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stormName_ = getDefaultInstance().getStormName();
      }
      /**
       * <code>optional string storm_name = 2;</code>
       */
      private void setStormNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        stormName_ = value.toStringUtf8();
      }

      public static final int EVENT_PRIOR_TO_HATCHING_FIELD_NUMBER = 3;
      private boolean eventPriorToHatching_;
      /**
       * <code>optional bool event_prior_to_hatching = 3;</code>
       */
      @java.lang.Override
      public boolean hasEventPriorToHatching() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool event_prior_to_hatching = 3;</code>
       */
      @java.lang.Override
      public boolean getEventPriorToHatching() {
        return eventPriorToHatching_;
      }
      /**
       * <code>optional bool event_prior_to_hatching = 3;</code>
       */
      private void setEventPriorToHatching(boolean value) {
        bitField0_ |= 0x00000004;
        eventPriorToHatching_ = value;
      }
      /**
       * <code>optional bool event_prior_to_hatching = 3;</code>
       */
      private void clearEventPriorToHatching() {
        bitField0_ = (bitField0_ & ~0x00000004);
        eventPriorToHatching_ = false;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, timestampMs_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeString(2, getStormName());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, eventPriorToHatching_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, timestampMs_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getStormName());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, eventPriorToHatching_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code com.islandturtlewatch.nest.data.NestCondition.WashEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent, Builder> implements
          // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.NestCondition.WashEvent)
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEventOrBuilder {
        // Construct using com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        @java.lang.Override
        public boolean hasTimestampMs() {
          return instance.hasTimestampMs();
        }
        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        @java.lang.Override
        public long getTimestampMs() {
          return instance.getTimestampMs();
        }
        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        public Builder setTimestampMs(long value) {
          copyOnWrite();
          instance.setTimestampMs(value);
          return this;
        }
        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        public Builder clearTimestampMs() {
          copyOnWrite();
          instance.clearTimestampMs();
          return this;
        }

        /**
         * <code>optional string storm_name = 2;</code>
         */
        @java.lang.Override
        public boolean hasStormName() {
          return instance.hasStormName();
        }
        /**
         * <code>optional string storm_name = 2;</code>
         */
        @java.lang.Override
        public java.lang.String getStormName() {
          return instance.getStormName();
        }
        /**
         * <code>optional string storm_name = 2;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getStormNameBytes() {
          return instance.getStormNameBytes();
        }
        /**
         * <code>optional string storm_name = 2;</code>
         */
        public Builder setStormName(
            java.lang.String value) {
          copyOnWrite();
          instance.setStormName(value);
          return this;
        }
        /**
         * <code>optional string storm_name = 2;</code>
         */
        public Builder clearStormName() {
          copyOnWrite();
          instance.clearStormName();
          return this;
        }
        /**
         * <code>optional string storm_name = 2;</code>
         */
        public Builder setStormNameBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setStormNameBytes(value);
          return this;
        }

        /**
         * <code>optional bool event_prior_to_hatching = 3;</code>
         */
        @java.lang.Override
        public boolean hasEventPriorToHatching() {
          return instance.hasEventPriorToHatching();
        }
        /**
         * <code>optional bool event_prior_to_hatching = 3;</code>
         */
        @java.lang.Override
        public boolean getEventPriorToHatching() {
          return instance.getEventPriorToHatching();
        }
        /**
         * <code>optional bool event_prior_to_hatching = 3;</code>
         */
        public Builder setEventPriorToHatching(boolean value) {
          copyOnWrite();
          instance.setEventPriorToHatching(value);
          return this;
        }
        /**
         * <code>optional bool event_prior_to_hatching = 3;</code>
         */
        public Builder clearEventPriorToHatching() {
          copyOnWrite();
          instance.clearEventPriorToHatching();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.NestCondition.WashEvent)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent other = (com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent) arg1;
            timestampMs_ = visitor.visitLong(
                hasTimestampMs(), timestampMs_,
                other.hasTimestampMs(), other.timestampMs_);
            stormName_ = visitor.visitString(
                hasStormName(), stormName_,
                other.hasStormName(), other.stormName_);
            eventPriorToHatching_ = visitor.visitBoolean(
                hasEventPriorToHatching(), eventPriorToHatching_,
                other.hasEventPriorToHatching(), other.eventPriorToHatching_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    bitField0_ |= 0x00000001;
                    timestampMs_ = input.readInt64();
                    break;
                  }
                  case 18: {
                    java.lang.String s = input.readString();
                    bitField0_ |= 0x00000002;
                    stormName_ = s;
                    break;
                  }
                  case 24: {
                    bitField0_ |= 0x00000004;
                    eventPriorToHatching_ = input.readBool();
                    break;
                  }
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> parser = PARSER;
            if (parser == null) {
              synchronized (com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.NestCondition.WashEvent)
      private static final com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new WashEvent();
      }

      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<WashEvent> PARSER;

      public static com.google.protobuf.Parser<WashEvent> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface PreditationEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.NestCondition.PreditationEvent)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      boolean hasTimestampMs();
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      long getTimestampMs();

      /**
       * <code>optional string predator = 2;</code>
       */
      boolean hasPredator();
      /**
       * <code>optional string predator = 2;</code>
       */
      java.lang.String getPredator();
      /**
       * <code>optional string predator = 2;</code>
       */
      com.google.protobuf.ByteString
          getPredatorBytes();

      /**
       * <code>optional int32 number_of_eggs = 3;</code>
       */
      boolean hasNumberOfEggs();
      /**
       * <code>optional int32 number_of_eggs = 3;</code>
       */
      int getNumberOfEggs();

      /**
       * <code>optional string predator_spinner_text = 4;</code>
       */
      boolean hasPredatorSpinnerText();
      /**
       * <code>optional string predator_spinner_text = 4;</code>
       */
      java.lang.String getPredatorSpinnerText();
      /**
       * <code>optional string predator_spinner_text = 4;</code>
       */
      com.google.protobuf.ByteString
          getPredatorSpinnerTextBytes();

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredationTimeOption predated_prior = 5;</code>
       */
      boolean hasPredatedPrior();
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredationTimeOption predated_prior = 5;</code>
       */
      com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.PredationTimeOption getPredatedPrior();
    }
    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.NestCondition.PreditationEvent}
     */
    public  static final class PreditationEvent extends
        com.google.protobuf.GeneratedMessageLite<
            PreditationEvent, PreditationEvent.Builder> implements
        // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.NestCondition.PreditationEvent)
        PreditationEventOrBuilder {
      private PreditationEvent() {
        predator_ = "";
        predatorSpinnerText_ = "";
        predatedPrior_ = 1;
      }
      /**
       * <pre>
       *NOTE: this is currently unused. (26JUN16)
       * </pre>
       *
       * Protobuf enum {@code com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredatorType}
       */
      public enum PredatorType
          implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>ONLY_RACCOON = 1;</code>
         */
        ONLY_RACCOON(1),
        /**
         * <code>ONLY_FOX = 2;</code>
         */
        ONLY_FOX(2),
        /**
         * <code>ONLY_COYOTE = 3;</code>
         */
        ONLY_COYOTE(3),
        /**
         * <code>ONLY_DOG = 4;</code>
         */
        ONLY_DOG(4),
        /**
         * <code>CANINE_UNK = 5;</code>
         */
        CANINE_UNK(5),
        /**
         * <code>ONLY_HOG = 6;</code>
         */
        ONLY_HOG(6),
        /**
         * <code>ONLY_ARMADILLO = 7;</code>
         */
        ONLY_ARMADILLO(7),
        /**
         * <code>MAMMAL_UNK = 8;</code>
         */
        MAMMAL_UNK(8),
        /**
         * <code>ONLY_GHOST_CRAB = 9;</code>
         */
        ONLY_GHOST_CRAB(9),
        /**
         * <code>ONLY_ANTS = 10;</code>
         */
        ONLY_ANTS(10),
        /**
         * <code>RACCOON_GHOST = 11;</code>
         */
        RACCOON_GHOST(11),
        /**
         * <code>COYOTE_GHOST = 12;</code>
         */
        COYOTE_GHOST(12),
        /**
         * <code>OTHER = 13;</code>
         */
        OTHER(13),
        ;

        /**
         * <code>ONLY_RACCOON = 1;</code>
         */
        public static final int ONLY_RACCOON_VALUE = 1;
        /**
         * <code>ONLY_FOX = 2;</code>
         */
        public static final int ONLY_FOX_VALUE = 2;
        /**
         * <code>ONLY_COYOTE = 3;</code>
         */
        public static final int ONLY_COYOTE_VALUE = 3;
        /**
         * <code>ONLY_DOG = 4;</code>
         */
        public static final int ONLY_DOG_VALUE = 4;
        /**
         * <code>CANINE_UNK = 5;</code>
         */
        public static final int CANINE_UNK_VALUE = 5;
        /**
         * <code>ONLY_HOG = 6;</code>
         */
        public static final int ONLY_HOG_VALUE = 6;
        /**
         * <code>ONLY_ARMADILLO = 7;</code>
         */
        public static final int ONLY_ARMADILLO_VALUE = 7;
        /**
         * <code>MAMMAL_UNK = 8;</code>
         */
        public static final int MAMMAL_UNK_VALUE = 8;
        /**
         * <code>ONLY_GHOST_CRAB = 9;</code>
         */
        public static final int ONLY_GHOST_CRAB_VALUE = 9;
        /**
         * <code>ONLY_ANTS = 10;</code>
         */
        public static final int ONLY_ANTS_VALUE = 10;
        /**
         * <code>RACCOON_GHOST = 11;</code>
         */
        public static final int RACCOON_GHOST_VALUE = 11;
        /**
         * <code>COYOTE_GHOST = 12;</code>
         */
        public static final int COYOTE_GHOST_VALUE = 12;
        /**
         * <code>OTHER = 13;</code>
         */
        public static final int OTHER_VALUE = 13;


        @java.lang.Override
        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static PredatorType valueOf(int value) {
          return forNumber(value);
        }

        public static PredatorType forNumber(int value) {
          switch (value) {
            case 1: return ONLY_RACCOON;
            case 2: return ONLY_FOX;
            case 3: return ONLY_COYOTE;
            case 4: return ONLY_DOG;
            case 5: return CANINE_UNK;
            case 6: return ONLY_HOG;
            case 7: return ONLY_ARMADILLO;
            case 8: return MAMMAL_UNK;
            case 9: return ONLY_GHOST_CRAB;
            case 10: return ONLY_ANTS;
            case 11: return RACCOON_GHOST;
            case 12: return COYOTE_GHOST;
            case 13: return OTHER;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<PredatorType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            PredatorType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<PredatorType>() {
                @java.lang.Override
                public PredatorType findValueByNumber(int number) {
                  return PredatorType.forNumber(number);
                }
              };

        private final int value;

        private PredatorType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredatorType)
      }

      /**
       * Protobuf enum {@code com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredationTimeOption}
       */
      public enum PredationTimeOption
          implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>PRIOR_TO_HATCH = 1;</code>
         */
        PRIOR_TO_HATCH(1),
        /**
         * <code>PRIOR_TO_INV = 2;</code>
         */
        PRIOR_TO_INV(2),
        /**
         * <code>NONE = 3;</code>
         */
        NONE(3),
        ;

        /**
         * <code>PRIOR_TO_HATCH = 1;</code>
         */
        public static final int PRIOR_TO_HATCH_VALUE = 1;
        /**
         * <code>PRIOR_TO_INV = 2;</code>
         */
        public static final int PRIOR_TO_INV_VALUE = 2;
        /**
         * <code>NONE = 3;</code>
         */
        public static final int NONE_VALUE = 3;


        @java.lang.Override
        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static PredationTimeOption valueOf(int value) {
          return forNumber(value);
        }

        public static PredationTimeOption forNumber(int value) {
          switch (value) {
            case 1: return PRIOR_TO_HATCH;
            case 2: return PRIOR_TO_INV;
            case 3: return NONE;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<PredationTimeOption>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            PredationTimeOption> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<PredationTimeOption>() {
                @java.lang.Override
                public PredationTimeOption findValueByNumber(int number) {
                  return PredationTimeOption.forNumber(number);
                }
              };

        private final int value;

        private PredationTimeOption(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredationTimeOption)
      }

      private int bitField0_;
      public static final int TIMESTAMP_MS_FIELD_NUMBER = 1;
      private long timestampMs_;
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      @java.lang.Override
      public boolean hasTimestampMs() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      @java.lang.Override
      public long getTimestampMs() {
        return timestampMs_;
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      private void setTimestampMs(long value) {
        bitField0_ |= 0x00000001;
        timestampMs_ = value;
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      private void clearTimestampMs() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestampMs_ = 0L;
      }

      public static final int PREDATOR_FIELD_NUMBER = 2;
      private java.lang.String predator_;
      /**
       * <code>optional string predator = 2;</code>
       */
      @java.lang.Override
      public boolean hasPredator() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string predator = 2;</code>
       */
      @java.lang.Override
      public java.lang.String getPredator() {
        return predator_;
      }
      /**
       * <code>optional string predator = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPredatorBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(predator_);
      }
      /**
       * <code>optional string predator = 2;</code>
       */
      private void setPredator(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        predator_ = value;
      }
      /**
       * <code>optional string predator = 2;</code>
       */
      private void clearPredator() {
        bitField0_ = (bitField0_ & ~0x00000002);
        predator_ = getDefaultInstance().getPredator();
      }
      /**
       * <code>optional string predator = 2;</code>
       */
      private void setPredatorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        predator_ = value.toStringUtf8();
      }

      public static final int NUMBER_OF_EGGS_FIELD_NUMBER = 3;
      private int numberOfEggs_;
      /**
       * <code>optional int32 number_of_eggs = 3;</code>
       */
      @java.lang.Override
      public boolean hasNumberOfEggs() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 number_of_eggs = 3;</code>
       */
      @java.lang.Override
      public int getNumberOfEggs() {
        return numberOfEggs_;
      }
      /**
       * <code>optional int32 number_of_eggs = 3;</code>
       */
      private void setNumberOfEggs(int value) {
        bitField0_ |= 0x00000004;
        numberOfEggs_ = value;
      }
      /**
       * <code>optional int32 number_of_eggs = 3;</code>
       */
      private void clearNumberOfEggs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        numberOfEggs_ = 0;
      }

      public static final int PREDATOR_SPINNER_TEXT_FIELD_NUMBER = 4;
      private java.lang.String predatorSpinnerText_;
      /**
       * <code>optional string predator_spinner_text = 4;</code>
       */
      @java.lang.Override
      public boolean hasPredatorSpinnerText() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string predator_spinner_text = 4;</code>
       */
      @java.lang.Override
      public java.lang.String getPredatorSpinnerText() {
        return predatorSpinnerText_;
      }
      /**
       * <code>optional string predator_spinner_text = 4;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPredatorSpinnerTextBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(predatorSpinnerText_);
      }
      /**
       * <code>optional string predator_spinner_text = 4;</code>
       */
      private void setPredatorSpinnerText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        predatorSpinnerText_ = value;
      }
      /**
       * <code>optional string predator_spinner_text = 4;</code>
       */
      private void clearPredatorSpinnerText() {
        bitField0_ = (bitField0_ & ~0x00000008);
        predatorSpinnerText_ = getDefaultInstance().getPredatorSpinnerText();
      }
      /**
       * <code>optional string predator_spinner_text = 4;</code>
       */
      private void setPredatorSpinnerTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        predatorSpinnerText_ = value.toStringUtf8();
      }

      public static final int PREDATED_PRIOR_FIELD_NUMBER = 5;
      private int predatedPrior_;
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredationTimeOption predated_prior = 5;</code>
       */
      @java.lang.Override
      public boolean hasPredatedPrior() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredationTimeOption predated_prior = 5;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.PredationTimeOption getPredatedPrior() {
        com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.PredationTimeOption result = com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.PredationTimeOption.forNumber(predatedPrior_);
        return result == null ? com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.PredationTimeOption.PRIOR_TO_HATCH : result;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredationTimeOption predated_prior = 5;</code>
       */
      private void setPredatedPrior(com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.PredationTimeOption value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        predatedPrior_ = value.getNumber();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredationTimeOption predated_prior = 5;</code>
       */
      private void clearPredatedPrior() {
        bitField0_ = (bitField0_ & ~0x00000010);
        predatedPrior_ = 1;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, timestampMs_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeString(2, getPredator());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, numberOfEggs_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeString(4, getPredatorSpinnerText());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeEnum(5, predatedPrior_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, timestampMs_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getPredator());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, numberOfEggs_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(4, getPredatorSpinnerText());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, predatedPrior_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code com.islandturtlewatch.nest.data.NestCondition.PreditationEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent, Builder> implements
          // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.NestCondition.PreditationEvent)
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEventOrBuilder {
        // Construct using com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        @java.lang.Override
        public boolean hasTimestampMs() {
          return instance.hasTimestampMs();
        }
        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        @java.lang.Override
        public long getTimestampMs() {
          return instance.getTimestampMs();
        }
        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        public Builder setTimestampMs(long value) {
          copyOnWrite();
          instance.setTimestampMs(value);
          return this;
        }
        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        public Builder clearTimestampMs() {
          copyOnWrite();
          instance.clearTimestampMs();
          return this;
        }

        /**
         * <code>optional string predator = 2;</code>
         */
        @java.lang.Override
        public boolean hasPredator() {
          return instance.hasPredator();
        }
        /**
         * <code>optional string predator = 2;</code>
         */
        @java.lang.Override
        public java.lang.String getPredator() {
          return instance.getPredator();
        }
        /**
         * <code>optional string predator = 2;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getPredatorBytes() {
          return instance.getPredatorBytes();
        }
        /**
         * <code>optional string predator = 2;</code>
         */
        public Builder setPredator(
            java.lang.String value) {
          copyOnWrite();
          instance.setPredator(value);
          return this;
        }
        /**
         * <code>optional string predator = 2;</code>
         */
        public Builder clearPredator() {
          copyOnWrite();
          instance.clearPredator();
          return this;
        }
        /**
         * <code>optional string predator = 2;</code>
         */
        public Builder setPredatorBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setPredatorBytes(value);
          return this;
        }

        /**
         * <code>optional int32 number_of_eggs = 3;</code>
         */
        @java.lang.Override
        public boolean hasNumberOfEggs() {
          return instance.hasNumberOfEggs();
        }
        /**
         * <code>optional int32 number_of_eggs = 3;</code>
         */
        @java.lang.Override
        public int getNumberOfEggs() {
          return instance.getNumberOfEggs();
        }
        /**
         * <code>optional int32 number_of_eggs = 3;</code>
         */
        public Builder setNumberOfEggs(int value) {
          copyOnWrite();
          instance.setNumberOfEggs(value);
          return this;
        }
        /**
         * <code>optional int32 number_of_eggs = 3;</code>
         */
        public Builder clearNumberOfEggs() {
          copyOnWrite();
          instance.clearNumberOfEggs();
          return this;
        }

        /**
         * <code>optional string predator_spinner_text = 4;</code>
         */
        @java.lang.Override
        public boolean hasPredatorSpinnerText() {
          return instance.hasPredatorSpinnerText();
        }
        /**
         * <code>optional string predator_spinner_text = 4;</code>
         */
        @java.lang.Override
        public java.lang.String getPredatorSpinnerText() {
          return instance.getPredatorSpinnerText();
        }
        /**
         * <code>optional string predator_spinner_text = 4;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getPredatorSpinnerTextBytes() {
          return instance.getPredatorSpinnerTextBytes();
        }
        /**
         * <code>optional string predator_spinner_text = 4;</code>
         */
        public Builder setPredatorSpinnerText(
            java.lang.String value) {
          copyOnWrite();
          instance.setPredatorSpinnerText(value);
          return this;
        }
        /**
         * <code>optional string predator_spinner_text = 4;</code>
         */
        public Builder clearPredatorSpinnerText() {
          copyOnWrite();
          instance.clearPredatorSpinnerText();
          return this;
        }
        /**
         * <code>optional string predator_spinner_text = 4;</code>
         */
        public Builder setPredatorSpinnerTextBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setPredatorSpinnerTextBytes(value);
          return this;
        }

        /**
         * <code>optional .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredationTimeOption predated_prior = 5;</code>
         */
        @java.lang.Override
        public boolean hasPredatedPrior() {
          return instance.hasPredatedPrior();
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredationTimeOption predated_prior = 5;</code>
         */
        @java.lang.Override
        public com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.PredationTimeOption getPredatedPrior() {
          return instance.getPredatedPrior();
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredationTimeOption predated_prior = 5;</code>
         */
        public Builder setPredatedPrior(com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.PredationTimeOption value) {
          copyOnWrite();
          instance.setPredatedPrior(value);
          return this;
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent.PredationTimeOption predated_prior = 5;</code>
         */
        public Builder clearPredatedPrior() {
          copyOnWrite();
          instance.clearPredatedPrior();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.NestCondition.PreditationEvent)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent other = (com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent) arg1;
            timestampMs_ = visitor.visitLong(
                hasTimestampMs(), timestampMs_,
                other.hasTimestampMs(), other.timestampMs_);
            predator_ = visitor.visitString(
                hasPredator(), predator_,
                other.hasPredator(), other.predator_);
            numberOfEggs_ = visitor.visitInt(
                hasNumberOfEggs(), numberOfEggs_,
                other.hasNumberOfEggs(), other.numberOfEggs_);
            predatorSpinnerText_ = visitor.visitString(
                hasPredatorSpinnerText(), predatorSpinnerText_,
                other.hasPredatorSpinnerText(), other.predatorSpinnerText_);
            predatedPrior_ = visitor.visitInt(hasPredatedPrior(), predatedPrior_,
                other.hasPredatedPrior(), other.predatedPrior_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    bitField0_ |= 0x00000001;
                    timestampMs_ = input.readInt64();
                    break;
                  }
                  case 18: {
                    java.lang.String s = input.readString();
                    bitField0_ |= 0x00000002;
                    predator_ = s;
                    break;
                  }
                  case 24: {
                    bitField0_ |= 0x00000004;
                    numberOfEggs_ = input.readInt32();
                    break;
                  }
                  case 34: {
                    java.lang.String s = input.readString();
                    bitField0_ |= 0x00000008;
                    predatorSpinnerText_ = s;
                    break;
                  }
                  case 40: {
                    int rawValue = input.readEnum();
                    com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.PredationTimeOption value = com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.PredationTimeOption.forNumber(rawValue);
                    if (value == null) {
                      super.mergeVarintField(5, rawValue);
                    } else {
                      bitField0_ |= 0x00000010;
                      predatedPrior_ = rawValue;
                    }
                    break;
                  }
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent> parser = PARSER;
            if (parser == null) {
              synchronized (com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.NestCondition.PreditationEvent)
      private static final com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new PreditationEvent();
      }

      public static com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<PreditationEvent> PARSER;

      public static com.google.protobuf.Parser<PreditationEvent> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int GHOST_DAMAGE_10_OR_LESS_FIELD_NUMBER = 31;
    private boolean ghostDamage10OrLess_;
    /**
     * <code>optional bool ghost_damage_10_or_less = 31 [default = true];</code>
     */
    @java.lang.Override
    public boolean hasGhostDamage10OrLess() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool ghost_damage_10_or_less = 31 [default = true];</code>
     */
    @java.lang.Override
    public boolean getGhostDamage10OrLess() {
      return ghostDamage10OrLess_;
    }
    /**
     * <code>optional bool ghost_damage_10_or_less = 31 [default = true];</code>
     */
    private void setGhostDamage10OrLess(boolean value) {
      bitField0_ |= 0x00000001;
      ghostDamage10OrLess_ = value;
    }
    /**
     * <code>optional bool ghost_damage_10_or_less = 31 [default = true];</code>
     */
    private void clearGhostDamage10OrLess() {
      bitField0_ = (bitField0_ & ~0x00000001);
      ghostDamage10OrLess_ = true;
    }

    public static final int VANDALIZED_FIELD_NUMBER = 1;
    private boolean vandalized_;
    /**
     * <code>optional bool vandalized = 1;</code>
     */
    @java.lang.Override
    public boolean hasVandalized() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool vandalized = 1;</code>
     */
    @java.lang.Override
    public boolean getVandalized() {
      return vandalized_;
    }
    /**
     * <code>optional bool vandalized = 1;</code>
     */
    private void setVandalized(boolean value) {
      bitField0_ |= 0x00000002;
      vandalized_ = value;
    }
    /**
     * <code>optional bool vandalized = 1;</code>
     */
    private void clearVandalized() {
      bitField0_ = (bitField0_ & ~0x00000002);
      vandalized_ = false;
    }

    public static final int DESCRIBE_CONTROL_METHODS_FIELD_NUMBER = 28;
    private java.lang.String describeControlMethods_;
    /**
     * <code>optional string describe_control_methods = 28;</code>
     */
    @java.lang.Override
    public boolean hasDescribeControlMethods() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string describe_control_methods = 28;</code>
     */
    @java.lang.Override
    public java.lang.String getDescribeControlMethods() {
      return describeControlMethods_;
    }
    /**
     * <code>optional string describe_control_methods = 28;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescribeControlMethodsBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(describeControlMethods_);
    }
    /**
     * <code>optional string describe_control_methods = 28;</code>
     */
    private void setDescribeControlMethods(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      describeControlMethods_ = value;
    }
    /**
     * <code>optional string describe_control_methods = 28;</code>
     */
    private void clearDescribeControlMethods() {
      bitField0_ = (bitField0_ & ~0x00000004);
      describeControlMethods_ = getDefaultInstance().getDescribeControlMethods();
    }
    /**
     * <code>optional string describe_control_methods = 28;</code>
     */
    private void setDescribeControlMethodsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      describeControlMethods_ = value.toStringUtf8();
    }

    public static final int VANDALIZED_TIMESTAMP_MS_FIELD_NUMBER = 2;
    private long vandalizedTimestampMs_;
    /**
     * <code>optional int64 vandalized_timestamp_ms = 2;</code>
     */
    @java.lang.Override
    public boolean hasVandalizedTimestampMs() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 vandalized_timestamp_ms = 2;</code>
     */
    @java.lang.Override
    public long getVandalizedTimestampMs() {
      return vandalizedTimestampMs_;
    }
    /**
     * <code>optional int64 vandalized_timestamp_ms = 2;</code>
     */
    private void setVandalizedTimestampMs(long value) {
      bitField0_ |= 0x00000008;
      vandalizedTimestampMs_ = value;
    }
    /**
     * <code>optional int64 vandalized_timestamp_ms = 2;</code>
     */
    private void clearVandalizedTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00000008);
      vandalizedTimestampMs_ = 0L;
    }

    public static final int VANDALISM_TYPE_FIELD_NUMBER = 15;
    private int vandalismType_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.VandalismType vandalism_type = 15;</code>
     */
    @java.lang.Override
    public boolean hasVandalismType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.VandalismType vandalism_type = 15;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.VandalismType getVandalismType() {
      com.islandturtlewatch.nest.data.ReportProto.NestCondition.VandalismType result = com.islandturtlewatch.nest.data.ReportProto.NestCondition.VandalismType.forNumber(vandalismType_);
      return result == null ? com.islandturtlewatch.nest.data.ReportProto.NestCondition.VandalismType.UNKOWN : result;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.VandalismType vandalism_type = 15;</code>
     */
    private void setVandalismType(com.islandturtlewatch.nest.data.ReportProto.NestCondition.VandalismType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      vandalismType_ = value.getNumber();
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.VandalismType vandalism_type = 15;</code>
     */
    private void clearVandalismType() {
      bitField0_ = (bitField0_ & ~0x00000010);
      vandalismType_ = 1;
    }

    public static final int NEST_DUG_INTO_FIELD_NUMBER = 26;
    private boolean nestDugInto_;
    /**
     * <code>optional bool nest_dug_into = 26;</code>
     */
    @java.lang.Override
    public boolean hasNestDugInto() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool nest_dug_into = 26;</code>
     */
    @java.lang.Override
    public boolean getNestDugInto() {
      return nestDugInto_;
    }
    /**
     * <code>optional bool nest_dug_into = 26;</code>
     */
    private void setNestDugInto(boolean value) {
      bitField0_ |= 0x00000020;
      nestDugInto_ = value;
    }
    /**
     * <code>optional bool nest_dug_into = 26;</code>
     */
    private void clearNestDugInto() {
      bitField0_ = (bitField0_ & ~0x00000020);
      nestDugInto_ = false;
    }

    public static final int POST_HATCH_WASHOUT_FIELD_NUMBER = 20;
    private boolean postHatchWashout_;
    /**
     * <pre>
     * post_hatch_washout is deprecated, we are now using complete_washout_timing instead
     * </pre>
     *
     * <code>optional bool post_hatch_washout = 20;</code>
     */
    @java.lang.Override
    public boolean hasPostHatchWashout() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * post_hatch_washout is deprecated, we are now using complete_washout_timing instead
     * </pre>
     *
     * <code>optional bool post_hatch_washout = 20;</code>
     */
    @java.lang.Override
    public boolean getPostHatchWashout() {
      return postHatchWashout_;
    }
    /**
     * <pre>
     * post_hatch_washout is deprecated, we are now using complete_washout_timing instead
     * </pre>
     *
     * <code>optional bool post_hatch_washout = 20;</code>
     */
    private void setPostHatchWashout(boolean value) {
      bitField0_ |= 0x00000040;
      postHatchWashout_ = value;
    }
    /**
     * <pre>
     * post_hatch_washout is deprecated, we are now using complete_washout_timing instead
     * </pre>
     *
     * <code>optional bool post_hatch_washout = 20;</code>
     */
    private void clearPostHatchWashout() {
      bitField0_ = (bitField0_ & ~0x00000040);
      postHatchWashout_ = false;
    }

    public static final int COMPLETE_WASHOUT_TIMING_FIELD_NUMBER = 34;
    private int completeWashoutTiming_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption complete_washout_timing = 34;</code>
     */
    @java.lang.Override
    public boolean hasCompleteWashoutTiming() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption complete_washout_timing = 34;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption getCompleteWashoutTiming() {
      com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption result = com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption.forNumber(completeWashoutTiming_);
      return result == null ? com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption.PRE_HATCH : result;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption complete_washout_timing = 34;</code>
     */
    private void setCompleteWashoutTiming(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000080;
      completeWashoutTiming_ = value.getNumber();
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption complete_washout_timing = 34;</code>
     */
    private void clearCompleteWashoutTiming() {
      bitField0_ = (bitField0_ & ~0x00000080);
      completeWashoutTiming_ = 1;
    }

    public static final int PARTIAL_WASHOUT_TIMING_FIELD_NUMBER = 35;
    private int partialWashoutTiming_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption partial_washout_timing = 35;</code>
     */
    @java.lang.Override
    public boolean hasPartialWashoutTiming() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption partial_washout_timing = 35;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption getPartialWashoutTiming() {
      com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption result = com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption.forNumber(partialWashoutTiming_);
      return result == null ? com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption.PRE_HATCH : result;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption partial_washout_timing = 35;</code>
     */
    private void setPartialWashoutTiming(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000100;
      partialWashoutTiming_ = value.getNumber();
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption partial_washout_timing = 35;</code>
     */
    private void clearPartialWashoutTiming() {
      bitField0_ = (bitField0_ & ~0x00000100);
      partialWashoutTiming_ = 1;
    }

    public static final int ACCRETION_FIELD_NUMBER = 30;
    private com.google.protobuf.Internal.ProtobufList<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> accretion_;
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    @java.lang.Override
    public java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> getAccretionList() {
      return accretion_;
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    public java.util.List<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEventOrBuilder> 
        getAccretionOrBuilderList() {
      return accretion_;
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    @java.lang.Override
    public int getAccretionCount() {
      return accretion_.size();
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getAccretion(int index) {
      return accretion_.get(index);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEventOrBuilder getAccretionOrBuilder(
        int index) {
      return accretion_.get(index);
    }
    private void ensureAccretionIsMutable() {
      if (!accretion_.isModifiable()) {
        accretion_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(accretion_);
       }
    }

    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    private void setAccretion(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAccretionIsMutable();
      accretion_.set(index, value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    private void setAccretion(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      ensureAccretionIsMutable();
      accretion_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    private void addAccretion(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAccretionIsMutable();
      accretion_.add(value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    private void addAccretion(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAccretionIsMutable();
      accretion_.add(index, value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    private void addAccretion(
        com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      ensureAccretionIsMutable();
      accretion_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    private void addAccretion(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      ensureAccretionIsMutable();
      accretion_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    private void addAllAccretion(
        java.lang.Iterable<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> values) {
      ensureAccretionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, accretion_);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    private void clearAccretion() {
      accretion_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
     */
    private void removeAccretion(int index) {
      ensureAccretionIsMutable();
      accretion_.remove(index);
    }

    public static final int EROSION_FIELD_NUMBER = 33;
    private com.google.protobuf.Internal.ProtobufList<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> erosion_;
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    @java.lang.Override
    public java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> getErosionList() {
      return erosion_;
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    public java.util.List<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEventOrBuilder> 
        getErosionOrBuilderList() {
      return erosion_;
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    @java.lang.Override
    public int getErosionCount() {
      return erosion_.size();
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getErosion(int index) {
      return erosion_.get(index);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEventOrBuilder getErosionOrBuilder(
        int index) {
      return erosion_.get(index);
    }
    private void ensureErosionIsMutable() {
      if (!erosion_.isModifiable()) {
        erosion_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(erosion_);
       }
    }

    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    private void setErosion(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureErosionIsMutable();
      erosion_.set(index, value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    private void setErosion(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      ensureErosionIsMutable();
      erosion_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    private void addErosion(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureErosionIsMutable();
      erosion_.add(value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    private void addErosion(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureErosionIsMutable();
      erosion_.add(index, value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    private void addErosion(
        com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      ensureErosionIsMutable();
      erosion_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    private void addErosion(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      ensureErosionIsMutable();
      erosion_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    private void addAllErosion(
        java.lang.Iterable<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> values) {
      ensureErosionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, erosion_);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    private void clearErosion() {
      erosion_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
     */
    private void removeErosion(int index) {
      ensureErosionIsMutable();
      erosion_.remove(index);
    }

    public static final int STORM_IMPACT_FIELD_NUMBER = 32;
    private com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact stormImpact_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
     */
    @java.lang.Override
    public boolean hasStormImpact() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact getStormImpact() {
      return stormImpact_ == null ? com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact.getDefaultInstance() : stormImpact_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
     */
    private void setStormImpact(com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact value) {
      if (value == null) {
        throw new NullPointerException();
      }
      stormImpact_ = value;
      bitField0_ |= 0x00000200;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
     */
    private void setStormImpact(
        com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact.Builder builderForValue) {
      stormImpact_ = builderForValue.build();
      bitField0_ |= 0x00000200;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeStormImpact(com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (stormImpact_ != null &&
          stormImpact_ != com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact.getDefaultInstance()) {
        stormImpact_ =
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact.newBuilder(stormImpact_).mergeFrom(value).buildPartial();
      } else {
        stormImpact_ = value;
      }
      bitField0_ |= 0x00000200;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
     */
    private void clearStormImpact() {  stormImpact_ = null;
      bitField0_ = (bitField0_ & ~0x00000200);
    }

    public static final int POACHED_FIELD_NUMBER = 3;
    private boolean poached_;
    /**
     * <code>optional bool poached = 3;</code>
     */
    @java.lang.Override
    public boolean hasPoached() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool poached = 3;</code>
     */
    @java.lang.Override
    public boolean getPoached() {
      return poached_;
    }
    /**
     * <code>optional bool poached = 3;</code>
     */
    private void setPoached(boolean value) {
      bitField0_ |= 0x00000400;
      poached_ = value;
    }
    /**
     * <code>optional bool poached = 3;</code>
     */
    private void clearPoached() {
      bitField0_ = (bitField0_ & ~0x00000400);
      poached_ = false;
    }

    public static final int POACHED_TIMESTAMP_MS_FIELD_NUMBER = 4;
    private long poachedTimestampMs_;
    /**
     * <code>optional int64 poached_timestamp_ms = 4;</code>
     */
    @java.lang.Override
    public boolean hasPoachedTimestampMs() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int64 poached_timestamp_ms = 4;</code>
     */
    @java.lang.Override
    public long getPoachedTimestampMs() {
      return poachedTimestampMs_;
    }
    /**
     * <code>optional int64 poached_timestamp_ms = 4;</code>
     */
    private void setPoachedTimestampMs(long value) {
      bitField0_ |= 0x00000800;
      poachedTimestampMs_ = value;
    }
    /**
     * <code>optional int64 poached_timestamp_ms = 4;</code>
     */
    private void clearPoachedTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00000800);
      poachedTimestampMs_ = 0L;
    }

    public static final int POACHED_EGGS_REMOVED_FIELD_NUMBER = 17;
    private boolean poachedEggsRemoved_;
    /**
     * <code>optional bool poached_eggs_removed = 17;</code>
     */
    @java.lang.Override
    public boolean hasPoachedEggsRemoved() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bool poached_eggs_removed = 17;</code>
     */
    @java.lang.Override
    public boolean getPoachedEggsRemoved() {
      return poachedEggsRemoved_;
    }
    /**
     * <code>optional bool poached_eggs_removed = 17;</code>
     */
    private void setPoachedEggsRemoved(boolean value) {
      bitField0_ |= 0x00001000;
      poachedEggsRemoved_ = value;
    }
    /**
     * <code>optional bool poached_eggs_removed = 17;</code>
     */
    private void clearPoachedEggsRemoved() {
      bitField0_ = (bitField0_ & ~0x00001000);
      poachedEggsRemoved_ = false;
    }

    public static final int ROOTS_INVADED_EGGSHELLS_FIELD_NUMBER = 5;
    private boolean rootsInvadedEggshells_;
    /**
     * <code>optional bool roots_invaded_eggshells = 5;</code>
     */
    @java.lang.Override
    public boolean hasRootsInvadedEggshells() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool roots_invaded_eggshells = 5;</code>
     */
    @java.lang.Override
    public boolean getRootsInvadedEggshells() {
      return rootsInvadedEggshells_;
    }
    /**
     * <code>optional bool roots_invaded_eggshells = 5;</code>
     */
    private void setRootsInvadedEggshells(boolean value) {
      bitField0_ |= 0x00002000;
      rootsInvadedEggshells_ = value;
    }
    /**
     * <code>optional bool roots_invaded_eggshells = 5;</code>
     */
    private void clearRootsInvadedEggshells() {
      bitField0_ = (bitField0_ & ~0x00002000);
      rootsInvadedEggshells_ = false;
    }

    public static final int EGGS_SCATTERED_BY_ANOTHER_FIELD_NUMBER = 6;
    private boolean eggsScatteredByAnother_;
    /**
     * <code>optional bool eggs_scattered_by_another = 6;</code>
     */
    @java.lang.Override
    public boolean hasEggsScatteredByAnother() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bool eggs_scattered_by_another = 6;</code>
     */
    @java.lang.Override
    public boolean getEggsScatteredByAnother() {
      return eggsScatteredByAnother_;
    }
    /**
     * <code>optional bool eggs_scattered_by_another = 6;</code>
     */
    private void setEggsScatteredByAnother(boolean value) {
      bitField0_ |= 0x00004000;
      eggsScatteredByAnother_ = value;
    }
    /**
     * <code>optional bool eggs_scattered_by_another = 6;</code>
     */
    private void clearEggsScatteredByAnother() {
      bitField0_ = (bitField0_ & ~0x00004000);
      eggsScatteredByAnother_ = false;
    }

    public static final int EGGS_SCATTERED_BY_ANOTHER_TIMESTAMP_MS_FIELD_NUMBER = 16;
    private long eggsScatteredByAnotherTimestampMs_;
    /**
     * <code>optional int64 eggs_scattered_by_another_timestamp_ms = 16;</code>
     */
    @java.lang.Override
    public boolean hasEggsScatteredByAnotherTimestampMs() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 eggs_scattered_by_another_timestamp_ms = 16;</code>
     */
    @java.lang.Override
    public long getEggsScatteredByAnotherTimestampMs() {
      return eggsScatteredByAnotherTimestampMs_;
    }
    /**
     * <code>optional int64 eggs_scattered_by_another_timestamp_ms = 16;</code>
     */
    private void setEggsScatteredByAnotherTimestampMs(long value) {
      bitField0_ |= 0x00008000;
      eggsScatteredByAnotherTimestampMs_ = value;
    }
    /**
     * <code>optional int64 eggs_scattered_by_another_timestamp_ms = 16;</code>
     */
    private void clearEggsScatteredByAnotherTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00008000);
      eggsScatteredByAnotherTimestampMs_ = 0L;
    }

    public static final int WASH_OVER_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.ProtobufList<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> washOver_;
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    @java.lang.Override
    public java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> getWashOverList() {
      return washOver_;
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    public java.util.List<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEventOrBuilder> 
        getWashOverOrBuilderList() {
      return washOver_;
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    @java.lang.Override
    public int getWashOverCount() {
      return washOver_.size();
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getWashOver(int index) {
      return washOver_.get(index);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEventOrBuilder getWashOverOrBuilder(
        int index) {
      return washOver_.get(index);
    }
    private void ensureWashOverIsMutable() {
      if (!washOver_.isModifiable()) {
        washOver_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(washOver_);
       }
    }

    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    private void setWashOver(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureWashOverIsMutable();
      washOver_.set(index, value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    private void setWashOver(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      ensureWashOverIsMutable();
      washOver_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    private void addWashOver(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureWashOverIsMutable();
      washOver_.add(value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    private void addWashOver(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureWashOverIsMutable();
      washOver_.add(index, value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    private void addWashOver(
        com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      ensureWashOverIsMutable();
      washOver_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    private void addWashOver(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      ensureWashOverIsMutable();
      washOver_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    private void addAllWashOver(
        java.lang.Iterable<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> values) {
      ensureWashOverIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, washOver_);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    private void clearWashOver() {
      washOver_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
     */
    private void removeWashOver(int index) {
      ensureWashOverIsMutable();
      washOver_.remove(index);
    }

    public static final int WASH_OUT_FIELD_NUMBER = 8;
    private com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent washOut_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
     */
    @java.lang.Override
    public boolean hasWashOut() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getWashOut() {
      return washOut_ == null ? com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.getDefaultInstance() : washOut_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
     */
    private void setWashOut(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      washOut_ = value;
      bitField0_ |= 0x00010000;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
     */
    private void setWashOut(
        com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      washOut_ = builderForValue.build();
      bitField0_ |= 0x00010000;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeWashOut(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (washOut_ != null &&
          washOut_ != com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.getDefaultInstance()) {
        washOut_ =
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.newBuilder(washOut_).mergeFrom(value).buildPartial();
      } else {
        washOut_ = value;
      }
      bitField0_ |= 0x00010000;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
     */
    private void clearWashOut() {  washOut_ = null;
      bitField0_ = (bitField0_ & ~0x00010000);
    }

    public static final int PARTIAL_WASHOUT_FIELD_NUMBER = 19;
    private com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent partialWashout_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
     */
    @java.lang.Override
    public boolean hasPartialWashout() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getPartialWashout() {
      return partialWashout_ == null ? com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.getDefaultInstance() : partialWashout_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
     */
    private void setPartialWashout(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      partialWashout_ = value;
      bitField0_ |= 0x00020000;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
     */
    private void setPartialWashout(
        com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      partialWashout_ = builderForValue.build();
      bitField0_ |= 0x00020000;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergePartialWashout(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (partialWashout_ != null &&
          partialWashout_ != com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.getDefaultInstance()) {
        partialWashout_ =
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.newBuilder(partialWashout_).mergeFrom(value).buildPartial();
      } else {
        partialWashout_ = value;
      }
      bitField0_ |= 0x00020000;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
     */
    private void clearPartialWashout() {  partialWashout_ = null;
      bitField0_ = (bitField0_ & ~0x00020000);
    }

    public static final int NEST_INUNDATED_FIELD_NUMBER = 21;
    private boolean nestInundated_;
    /**
     * <pre>
     *nest_inundated is deprecated, use new inundated_event instead
     * </pre>
     *
     * <code>optional bool nest_inundated = 21;</code>
     */
    @java.lang.Override
    public boolean hasNestInundated() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <pre>
     *nest_inundated is deprecated, use new inundated_event instead
     * </pre>
     *
     * <code>optional bool nest_inundated = 21;</code>
     */
    @java.lang.Override
    public boolean getNestInundated() {
      return nestInundated_;
    }
    /**
     * <pre>
     *nest_inundated is deprecated, use new inundated_event instead
     * </pre>
     *
     * <code>optional bool nest_inundated = 21;</code>
     */
    private void setNestInundated(boolean value) {
      bitField0_ |= 0x00040000;
      nestInundated_ = value;
    }
    /**
     * <pre>
     *nest_inundated is deprecated, use new inundated_event instead
     * </pre>
     *
     * <code>optional bool nest_inundated = 21;</code>
     */
    private void clearNestInundated() {
      bitField0_ = (bitField0_ & ~0x00040000);
      nestInundated_ = false;
    }

    public static final int NEST_INUNDATED_TIMESTAMP_MS_FIELD_NUMBER = 22;
    private long nestInundatedTimestampMs_;
    /**
     * <code>optional int64 nest_inundated_timestamp_ms = 22;</code>
     */
    @java.lang.Override
    public boolean hasNestInundatedTimestampMs() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 nest_inundated_timestamp_ms = 22;</code>
     */
    @java.lang.Override
    public long getNestInundatedTimestampMs() {
      return nestInundatedTimestampMs_;
    }
    /**
     * <code>optional int64 nest_inundated_timestamp_ms = 22;</code>
     */
    private void setNestInundatedTimestampMs(long value) {
      bitField0_ |= 0x00080000;
      nestInundatedTimestampMs_ = value;
    }
    /**
     * <code>optional int64 nest_inundated_timestamp_ms = 22;</code>
     */
    private void clearNestInundatedTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00080000);
      nestInundatedTimestampMs_ = 0L;
    }

    public static final int INUNDATED_EVENT_FIELD_NUMBER = 25;
    private com.google.protobuf.Internal.ProtobufList<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> inundatedEvent_;
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    @java.lang.Override
    public java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> getInundatedEventList() {
      return inundatedEvent_;
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    public java.util.List<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEventOrBuilder> 
        getInundatedEventOrBuilderList() {
      return inundatedEvent_;
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    @java.lang.Override
    public int getInundatedEventCount() {
      return inundatedEvent_.size();
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getInundatedEvent(int index) {
      return inundatedEvent_.get(index);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEventOrBuilder getInundatedEventOrBuilder(
        int index) {
      return inundatedEvent_.get(index);
    }
    private void ensureInundatedEventIsMutable() {
      if (!inundatedEvent_.isModifiable()) {
        inundatedEvent_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(inundatedEvent_);
       }
    }

    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    private void setInundatedEvent(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInundatedEventIsMutable();
      inundatedEvent_.set(index, value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    private void setInundatedEvent(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      ensureInundatedEventIsMutable();
      inundatedEvent_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    private void addInundatedEvent(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInundatedEventIsMutable();
      inundatedEvent_.add(value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    private void addInundatedEvent(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInundatedEventIsMutable();
      inundatedEvent_.add(index, value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    private void addInundatedEvent(
        com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      ensureInundatedEventIsMutable();
      inundatedEvent_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    private void addInundatedEvent(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
      ensureInundatedEventIsMutable();
      inundatedEvent_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    private void addAllInundatedEvent(
        java.lang.Iterable<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> values) {
      ensureInundatedEventIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, inundatedEvent_);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    private void clearInundatedEvent() {
      inundatedEvent_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
     */
    private void removeInundatedEvent(int index) {
      ensureInundatedEventIsMutable();
      inundatedEvent_.remove(index);
    }

    public static final int PREDITATION_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.ProtobufList<com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent> preditation_;
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    @java.lang.Override
    public java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent> getPreditationList() {
      return preditation_;
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    public java.util.List<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEventOrBuilder> 
        getPreditationOrBuilderList() {
      return preditation_;
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    @java.lang.Override
    public int getPreditationCount() {
      return preditation_.size();
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent getPreditation(int index) {
      return preditation_.get(index);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEventOrBuilder getPreditationOrBuilder(
        int index) {
      return preditation_.get(index);
    }
    private void ensurePreditationIsMutable() {
      if (!preditation_.isModifiable()) {
        preditation_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(preditation_);
       }
    }

    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    private void setPreditation(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePreditationIsMutable();
      preditation_.set(index, value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    private void setPreditation(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.Builder builderForValue) {
      ensurePreditationIsMutable();
      preditation_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    private void addPreditation(com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePreditationIsMutable();
      preditation_.add(value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    private void addPreditation(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePreditationIsMutable();
      preditation_.add(index, value);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    private void addPreditation(
        com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.Builder builderForValue) {
      ensurePreditationIsMutable();
      preditation_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    private void addPreditation(
        int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.Builder builderForValue) {
      ensurePreditationIsMutable();
      preditation_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    private void addAllPreditation(
        java.lang.Iterable<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent> values) {
      ensurePreditationIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, preditation_);
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    private void clearPreditation() {
      preditation_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
     */
    private void removePreditation(int index) {
      ensurePreditationIsMutable();
      preditation_.remove(index);
    }

    public static final int ACTIVELY_RECORD_EVENTS_FIELD_NUMBER = 27;
    private boolean activelyRecordEvents_;
    /**
     * <code>optional bool actively_record_events = 27 [default = true];</code>
     */
    @java.lang.Override
    public boolean hasActivelyRecordEvents() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional bool actively_record_events = 27 [default = true];</code>
     */
    @java.lang.Override
    public boolean getActivelyRecordEvents() {
      return activelyRecordEvents_;
    }
    /**
     * <code>optional bool actively_record_events = 27 [default = true];</code>
     */
    private void setActivelyRecordEvents(boolean value) {
      bitField0_ |= 0x00100000;
      activelyRecordEvents_ = value;
    }
    /**
     * <code>optional bool actively_record_events = 27 [default = true];</code>
     */
    private void clearActivelyRecordEvents() {
      bitField0_ = (bitField0_ & ~0x00100000);
      activelyRecordEvents_ = true;
    }

    public static final int PROP_EVENTS_RECORDED_FIELD_NUMBER = 29;
    private int propEventsRecorded_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.ProportionEventsRecorded prop_events_recorded = 29;</code>
     */
    @java.lang.Override
    public boolean hasPropEventsRecorded() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.ProportionEventsRecorded prop_events_recorded = 29;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestCondition.ProportionEventsRecorded getPropEventsRecorded() {
      com.islandturtlewatch.nest.data.ReportProto.NestCondition.ProportionEventsRecorded result = com.islandturtlewatch.nest.data.ReportProto.NestCondition.ProportionEventsRecorded.forNumber(propEventsRecorded_);
      return result == null ? com.islandturtlewatch.nest.data.ReportProto.NestCondition.ProportionEventsRecorded.ALL : result;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.ProportionEventsRecorded prop_events_recorded = 29;</code>
     */
    private void setPropEventsRecorded(com.islandturtlewatch.nest.data.ReportProto.NestCondition.ProportionEventsRecorded value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00200000;
      propEventsRecorded_ = value.getNumber();
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestCondition.ProportionEventsRecorded prop_events_recorded = 29;</code>
     */
    private void clearPropEventsRecorded() {
      bitField0_ = (bitField0_ & ~0x00200000);
      propEventsRecorded_ = 1;
    }

    public static final int HATCH_TIMESTAMP_MS_FIELD_NUMBER = 10;
    private long hatchTimestampMs_;
    /**
     * <code>optional int64 hatch_timestamp_ms = 10;</code>
     */
    @java.lang.Override
    public boolean hasHatchTimestampMs() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional int64 hatch_timestamp_ms = 10;</code>
     */
    @java.lang.Override
    public long getHatchTimestampMs() {
      return hatchTimestampMs_;
    }
    /**
     * <code>optional int64 hatch_timestamp_ms = 10;</code>
     */
    private void setHatchTimestampMs(long value) {
      bitField0_ |= 0x00400000;
      hatchTimestampMs_ = value;
    }
    /**
     * <code>optional int64 hatch_timestamp_ms = 10;</code>
     */
    private void clearHatchTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00400000);
      hatchTimestampMs_ = 0L;
    }

    public static final int ADDITIONAL_HATCH_TIMESTAMP_MS_FIELD_NUMBER = 11;
    private long additionalHatchTimestampMs_;
    /**
     * <code>optional int64 additional_hatch_timestamp_ms = 11;</code>
     */
    @java.lang.Override
    public boolean hasAdditionalHatchTimestampMs() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional int64 additional_hatch_timestamp_ms = 11;</code>
     */
    @java.lang.Override
    public long getAdditionalHatchTimestampMs() {
      return additionalHatchTimestampMs_;
    }
    /**
     * <code>optional int64 additional_hatch_timestamp_ms = 11;</code>
     */
    private void setAdditionalHatchTimestampMs(long value) {
      bitField0_ |= 0x00800000;
      additionalHatchTimestampMs_ = value;
    }
    /**
     * <code>optional int64 additional_hatch_timestamp_ms = 11;</code>
     */
    private void clearAdditionalHatchTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00800000);
      additionalHatchTimestampMs_ = 0L;
    }

    public static final int DISORIENTATION_FIELD_NUMBER = 12;
    private boolean disorientation_;
    /**
     * <code>optional bool disorientation = 12;</code>
     */
    @java.lang.Override
    public boolean hasDisorientation() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional bool disorientation = 12;</code>
     */
    @java.lang.Override
    public boolean getDisorientation() {
      return disorientation_;
    }
    /**
     * <code>optional bool disorientation = 12;</code>
     */
    private void setDisorientation(boolean value) {
      bitField0_ |= 0x01000000;
      disorientation_ = value;
    }
    /**
     * <code>optional bool disorientation = 12;</code>
     */
    private void clearDisorientation() {
      bitField0_ = (bitField0_ & ~0x01000000);
      disorientation_ = false;
    }

    public static final int ABANDONED_BODY_PITS_FIELD_NUMBER = 13;
    private boolean abandonedBodyPits_;
    /**
     * <code>optional bool abandoned_body_pits = 13;</code>
     */
    @java.lang.Override
    public boolean hasAbandonedBodyPits() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional bool abandoned_body_pits = 13;</code>
     */
    @java.lang.Override
    public boolean getAbandonedBodyPits() {
      return abandonedBodyPits_;
    }
    /**
     * <code>optional bool abandoned_body_pits = 13;</code>
     */
    private void setAbandonedBodyPits(boolean value) {
      bitField0_ |= 0x02000000;
      abandonedBodyPits_ = value;
    }
    /**
     * <code>optional bool abandoned_body_pits = 13;</code>
     */
    private void clearAbandonedBodyPits() {
      bitField0_ = (bitField0_ & ~0x02000000);
      abandonedBodyPits_ = false;
    }

    public static final int ABANDONED_EGG_CAVITIES_FIELD_NUMBER = 14;
    private boolean abandonedEggCavities_;
    /**
     * <code>optional bool abandoned_egg_cavities = 14;</code>
     */
    @java.lang.Override
    public boolean hasAbandonedEggCavities() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional bool abandoned_egg_cavities = 14;</code>
     */
    @java.lang.Override
    public boolean getAbandonedEggCavities() {
      return abandonedEggCavities_;
    }
    /**
     * <code>optional bool abandoned_egg_cavities = 14;</code>
     */
    private void setAbandonedEggCavities(boolean value) {
      bitField0_ |= 0x04000000;
      abandonedEggCavities_ = value;
    }
    /**
     * <code>optional bool abandoned_egg_cavities = 14;</code>
     */
    private void clearAbandonedEggCavities() {
      bitField0_ = (bitField0_ & ~0x04000000);
      abandonedEggCavities_ = false;
    }

    public static final int NO_DIGGING_FIELD_NUMBER = 18;
    private boolean noDigging_;
    /**
     * <code>optional bool no_digging = 18;</code>
     */
    @java.lang.Override
    public boolean hasNoDigging() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional bool no_digging = 18;</code>
     */
    @java.lang.Override
    public boolean getNoDigging() {
      return noDigging_;
    }
    /**
     * <code>optional bool no_digging = 18;</code>
     */
    private void setNoDigging(boolean value) {
      bitField0_ |= 0x08000000;
      noDigging_ = value;
    }
    /**
     * <code>optional bool no_digging = 18;</code>
     */
    private void clearNoDigging() {
      bitField0_ = (bitField0_ & ~0x08000000);
      noDigging_ = false;
    }

    public static final int NEST_DEPREDATED_FIELD_NUMBER = 23;
    private boolean nestDepredated_;
    /**
     * <code>optional bool nest_depredated = 23;</code>
     */
    @java.lang.Override
    public boolean hasNestDepredated() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional bool nest_depredated = 23;</code>
     */
    @java.lang.Override
    public boolean getNestDepredated() {
      return nestDepredated_;
    }
    /**
     * <code>optional bool nest_depredated = 23;</code>
     */
    private void setNestDepredated(boolean value) {
      bitField0_ |= 0x10000000;
      nestDepredated_ = value;
    }
    /**
     * <code>optional bool nest_depredated = 23;</code>
     */
    private void clearNestDepredated() {
      bitField0_ = (bitField0_ & ~0x10000000);
      nestDepredated_ = false;
    }

    public static final int EGGS_DAMAGED_BY_ANOTHER_TURTLE_FIELD_NUMBER = 24;
    private boolean eggsDamagedByAnotherTurtle_;
    /**
     * <pre>
     * Next ID=35
     * </pre>
     *
     * <code>optional bool eggs_damaged_by_another_turtle = 24;</code>
     */
    @java.lang.Override
    public boolean hasEggsDamagedByAnotherTurtle() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <pre>
     * Next ID=35
     * </pre>
     *
     * <code>optional bool eggs_damaged_by_another_turtle = 24;</code>
     */
    @java.lang.Override
    public boolean getEggsDamagedByAnotherTurtle() {
      return eggsDamagedByAnotherTurtle_;
    }
    /**
     * <pre>
     * Next ID=35
     * </pre>
     *
     * <code>optional bool eggs_damaged_by_another_turtle = 24;</code>
     */
    private void setEggsDamagedByAnotherTurtle(boolean value) {
      bitField0_ |= 0x20000000;
      eggsDamagedByAnotherTurtle_ = value;
    }
    /**
     * <pre>
     * Next ID=35
     * </pre>
     *
     * <code>optional bool eggs_damaged_by_another_turtle = 24;</code>
     */
    private void clearEggsDamagedByAnotherTurtle() {
      bitField0_ = (bitField0_ & ~0x20000000);
      eggsDamagedByAnotherTurtle_ = false;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(1, vandalized_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(2, vandalizedTimestampMs_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(3, poached_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(4, poachedTimestampMs_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(5, rootsInvadedEggshells_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(6, eggsScatteredByAnother_);
      }
      for (int i = 0; i < washOver_.size(); i++) {
        output.writeMessage(7, washOver_.get(i));
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(8, getWashOut());
      }
      for (int i = 0; i < preditation_.size(); i++) {
        output.writeMessage(9, preditation_.get(i));
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt64(10, hatchTimestampMs_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt64(11, additionalHatchTimestampMs_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeBool(12, disorientation_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeBool(13, abandonedBodyPits_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeBool(14, abandonedEggCavities_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(15, vandalismType_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(16, eggsScatteredByAnotherTimestampMs_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(17, poachedEggsRemoved_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeBool(18, noDigging_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(19, getPartialWashout());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(20, postHatchWashout_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(21, nestInundated_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(22, nestInundatedTimestampMs_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeBool(23, nestDepredated_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeBool(24, eggsDamagedByAnotherTurtle_);
      }
      for (int i = 0; i < inundatedEvent_.size(); i++) {
        output.writeMessage(25, inundatedEvent_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(26, nestDugInto_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeBool(27, activelyRecordEvents_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(28, getDescribeControlMethods());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeEnum(29, propEventsRecorded_);
      }
      for (int i = 0; i < accretion_.size(); i++) {
        output.writeMessage(30, accretion_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(31, ghostDamage10OrLess_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(32, getStormImpact());
      }
      for (int i = 0; i < erosion_.size(); i++) {
        output.writeMessage(33, erosion_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(34, completeWashoutTiming_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(35, partialWashoutTiming_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, vandalized_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, vandalizedTimestampMs_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, poached_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, poachedTimestampMs_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, rootsInvadedEggshells_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, eggsScatteredByAnother_);
      }
      for (int i = 0; i < washOver_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, washOver_.get(i));
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getWashOut());
      }
      for (int i = 0; i < preditation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, preditation_.get(i));
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, hatchTimestampMs_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, additionalHatchTimestampMs_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, disorientation_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, abandonedBodyPits_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, abandonedEggCavities_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(15, vandalismType_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, eggsScatteredByAnotherTimestampMs_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, poachedEggsRemoved_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, noDigging_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getPartialWashout());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, postHatchWashout_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, nestInundated_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(22, nestInundatedTimestampMs_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, nestDepredated_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, eggsDamagedByAnotherTurtle_);
      }
      for (int i = 0; i < inundatedEvent_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, inundatedEvent_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(26, nestDugInto_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(27, activelyRecordEvents_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(28, getDescribeControlMethods());
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(29, propEventsRecorded_);
      }
      for (int i = 0; i < accretion_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, accretion_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(31, ghostDamage10OrLess_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, getStormImpact());
      }
      for (int i = 0; i < erosion_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, erosion_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(34, completeWashoutTiming_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(35, partialWashoutTiming_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.islandturtlewatch.nest.data.ReportProto.NestCondition parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestCondition parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestCondition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestCondition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestCondition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestCondition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestCondition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestCondition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestCondition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestCondition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestCondition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestCondition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.NestCondition prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.NestCondition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.islandturtlewatch.nest.data.ReportProto.NestCondition, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.NestCondition)
        com.islandturtlewatch.nest.data.ReportProto.NestConditionOrBuilder {
      // Construct using com.islandturtlewatch.nest.data.ReportProto.NestCondition.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional bool ghost_damage_10_or_less = 31 [default = true];</code>
       */
      @java.lang.Override
      public boolean hasGhostDamage10OrLess() {
        return instance.hasGhostDamage10OrLess();
      }
      /**
       * <code>optional bool ghost_damage_10_or_less = 31 [default = true];</code>
       */
      @java.lang.Override
      public boolean getGhostDamage10OrLess() {
        return instance.getGhostDamage10OrLess();
      }
      /**
       * <code>optional bool ghost_damage_10_or_less = 31 [default = true];</code>
       */
      public Builder setGhostDamage10OrLess(boolean value) {
        copyOnWrite();
        instance.setGhostDamage10OrLess(value);
        return this;
      }
      /**
       * <code>optional bool ghost_damage_10_or_less = 31 [default = true];</code>
       */
      public Builder clearGhostDamage10OrLess() {
        copyOnWrite();
        instance.clearGhostDamage10OrLess();
        return this;
      }

      /**
       * <code>optional bool vandalized = 1;</code>
       */
      @java.lang.Override
      public boolean hasVandalized() {
        return instance.hasVandalized();
      }
      /**
       * <code>optional bool vandalized = 1;</code>
       */
      @java.lang.Override
      public boolean getVandalized() {
        return instance.getVandalized();
      }
      /**
       * <code>optional bool vandalized = 1;</code>
       */
      public Builder setVandalized(boolean value) {
        copyOnWrite();
        instance.setVandalized(value);
        return this;
      }
      /**
       * <code>optional bool vandalized = 1;</code>
       */
      public Builder clearVandalized() {
        copyOnWrite();
        instance.clearVandalized();
        return this;
      }

      /**
       * <code>optional string describe_control_methods = 28;</code>
       */
      @java.lang.Override
      public boolean hasDescribeControlMethods() {
        return instance.hasDescribeControlMethods();
      }
      /**
       * <code>optional string describe_control_methods = 28;</code>
       */
      @java.lang.Override
      public java.lang.String getDescribeControlMethods() {
        return instance.getDescribeControlMethods();
      }
      /**
       * <code>optional string describe_control_methods = 28;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDescribeControlMethodsBytes() {
        return instance.getDescribeControlMethodsBytes();
      }
      /**
       * <code>optional string describe_control_methods = 28;</code>
       */
      public Builder setDescribeControlMethods(
          java.lang.String value) {
        copyOnWrite();
        instance.setDescribeControlMethods(value);
        return this;
      }
      /**
       * <code>optional string describe_control_methods = 28;</code>
       */
      public Builder clearDescribeControlMethods() {
        copyOnWrite();
        instance.clearDescribeControlMethods();
        return this;
      }
      /**
       * <code>optional string describe_control_methods = 28;</code>
       */
      public Builder setDescribeControlMethodsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDescribeControlMethodsBytes(value);
        return this;
      }

      /**
       * <code>optional int64 vandalized_timestamp_ms = 2;</code>
       */
      @java.lang.Override
      public boolean hasVandalizedTimestampMs() {
        return instance.hasVandalizedTimestampMs();
      }
      /**
       * <code>optional int64 vandalized_timestamp_ms = 2;</code>
       */
      @java.lang.Override
      public long getVandalizedTimestampMs() {
        return instance.getVandalizedTimestampMs();
      }
      /**
       * <code>optional int64 vandalized_timestamp_ms = 2;</code>
       */
      public Builder setVandalizedTimestampMs(long value) {
        copyOnWrite();
        instance.setVandalizedTimestampMs(value);
        return this;
      }
      /**
       * <code>optional int64 vandalized_timestamp_ms = 2;</code>
       */
      public Builder clearVandalizedTimestampMs() {
        copyOnWrite();
        instance.clearVandalizedTimestampMs();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.VandalismType vandalism_type = 15;</code>
       */
      @java.lang.Override
      public boolean hasVandalismType() {
        return instance.hasVandalismType();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.VandalismType vandalism_type = 15;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition.VandalismType getVandalismType() {
        return instance.getVandalismType();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.VandalismType vandalism_type = 15;</code>
       */
      public Builder setVandalismType(com.islandturtlewatch.nest.data.ReportProto.NestCondition.VandalismType value) {
        copyOnWrite();
        instance.setVandalismType(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.VandalismType vandalism_type = 15;</code>
       */
      public Builder clearVandalismType() {
        copyOnWrite();
        instance.clearVandalismType();
        return this;
      }

      /**
       * <code>optional bool nest_dug_into = 26;</code>
       */
      @java.lang.Override
      public boolean hasNestDugInto() {
        return instance.hasNestDugInto();
      }
      /**
       * <code>optional bool nest_dug_into = 26;</code>
       */
      @java.lang.Override
      public boolean getNestDugInto() {
        return instance.getNestDugInto();
      }
      /**
       * <code>optional bool nest_dug_into = 26;</code>
       */
      public Builder setNestDugInto(boolean value) {
        copyOnWrite();
        instance.setNestDugInto(value);
        return this;
      }
      /**
       * <code>optional bool nest_dug_into = 26;</code>
       */
      public Builder clearNestDugInto() {
        copyOnWrite();
        instance.clearNestDugInto();
        return this;
      }

      /**
       * <pre>
       * post_hatch_washout is deprecated, we are now using complete_washout_timing instead
       * </pre>
       *
       * <code>optional bool post_hatch_washout = 20;</code>
       */
      @java.lang.Override
      public boolean hasPostHatchWashout() {
        return instance.hasPostHatchWashout();
      }
      /**
       * <pre>
       * post_hatch_washout is deprecated, we are now using complete_washout_timing instead
       * </pre>
       *
       * <code>optional bool post_hatch_washout = 20;</code>
       */
      @java.lang.Override
      public boolean getPostHatchWashout() {
        return instance.getPostHatchWashout();
      }
      /**
       * <pre>
       * post_hatch_washout is deprecated, we are now using complete_washout_timing instead
       * </pre>
       *
       * <code>optional bool post_hatch_washout = 20;</code>
       */
      public Builder setPostHatchWashout(boolean value) {
        copyOnWrite();
        instance.setPostHatchWashout(value);
        return this;
      }
      /**
       * <pre>
       * post_hatch_washout is deprecated, we are now using complete_washout_timing instead
       * </pre>
       *
       * <code>optional bool post_hatch_washout = 20;</code>
       */
      public Builder clearPostHatchWashout() {
        copyOnWrite();
        instance.clearPostHatchWashout();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption complete_washout_timing = 34;</code>
       */
      @java.lang.Override
      public boolean hasCompleteWashoutTiming() {
        return instance.hasCompleteWashoutTiming();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption complete_washout_timing = 34;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption getCompleteWashoutTiming() {
        return instance.getCompleteWashoutTiming();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption complete_washout_timing = 34;</code>
       */
      public Builder setCompleteWashoutTiming(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption value) {
        copyOnWrite();
        instance.setCompleteWashoutTiming(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption complete_washout_timing = 34;</code>
       */
      public Builder clearCompleteWashoutTiming() {
        copyOnWrite();
        instance.clearCompleteWashoutTiming();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption partial_washout_timing = 35;</code>
       */
      @java.lang.Override
      public boolean hasPartialWashoutTiming() {
        return instance.hasPartialWashoutTiming();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption partial_washout_timing = 35;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption getPartialWashoutTiming() {
        return instance.getPartialWashoutTiming();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption partial_washout_timing = 35;</code>
       */
      public Builder setPartialWashoutTiming(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption value) {
        copyOnWrite();
        instance.setPartialWashoutTiming(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashoutTimeOption partial_washout_timing = 35;</code>
       */
      public Builder clearPartialWashoutTiming() {
        copyOnWrite();
        instance.clearPartialWashoutTiming();
        return this;
      }

      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
       */
      @java.lang.Override
      public java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> getAccretionList() {
        return java.util.Collections.unmodifiableList(
            instance.getAccretionList());
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
       */
      @java.lang.Override
      public int getAccretionCount() {
        return instance.getAccretionCount();
      }/**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getAccretion(int index) {
        return instance.getAccretion(index);
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
       */
      public Builder setAccretion(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.setAccretion(index, value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
       */
      public Builder setAccretion(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.setAccretion(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
       */
      public Builder addAccretion(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.addAccretion(value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
       */
      public Builder addAccretion(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.addAccretion(index, value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
       */
      public Builder addAccretion(
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addAccretion(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
       */
      public Builder addAccretion(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addAccretion(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
       */
      public Builder addAllAccretion(
          java.lang.Iterable<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> values) {
        copyOnWrite();
        instance.addAllAccretion(values);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
       */
      public Builder clearAccretion() {
        copyOnWrite();
        instance.clearAccretion();
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent accretion = 30;</code>
       */
      public Builder removeAccretion(int index) {
        copyOnWrite();
        instance.removeAccretion(index);
        return this;
      }

      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
       */
      @java.lang.Override
      public java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> getErosionList() {
        return java.util.Collections.unmodifiableList(
            instance.getErosionList());
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
       */
      @java.lang.Override
      public int getErosionCount() {
        return instance.getErosionCount();
      }/**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getErosion(int index) {
        return instance.getErosion(index);
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
       */
      public Builder setErosion(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.setErosion(index, value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
       */
      public Builder setErosion(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.setErosion(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
       */
      public Builder addErosion(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.addErosion(value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
       */
      public Builder addErosion(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.addErosion(index, value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
       */
      public Builder addErosion(
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addErosion(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
       */
      public Builder addErosion(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addErosion(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
       */
      public Builder addAllErosion(
          java.lang.Iterable<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> values) {
        copyOnWrite();
        instance.addAllErosion(values);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
       */
      public Builder clearErosion() {
        copyOnWrite();
        instance.clearErosion();
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent erosion = 33;</code>
       */
      public Builder removeErosion(int index) {
        copyOnWrite();
        instance.removeErosion(index);
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
       */
      @java.lang.Override
      public boolean hasStormImpact() {
        return instance.hasStormImpact();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact getStormImpact() {
        return instance.getStormImpact();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
       */
      public Builder setStormImpact(com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact value) {
        copyOnWrite();
        instance.setStormImpact(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
       */
      public Builder setStormImpact(
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact.Builder builderForValue) {
        copyOnWrite();
        instance.setStormImpact(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
       */
      public Builder mergeStormImpact(com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact value) {
        copyOnWrite();
        instance.mergeStormImpact(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.StormImpact storm_impact = 32;</code>
       */
      public Builder clearStormImpact() {  copyOnWrite();
        instance.clearStormImpact();
        return this;
      }

      /**
       * <code>optional bool poached = 3;</code>
       */
      @java.lang.Override
      public boolean hasPoached() {
        return instance.hasPoached();
      }
      /**
       * <code>optional bool poached = 3;</code>
       */
      @java.lang.Override
      public boolean getPoached() {
        return instance.getPoached();
      }
      /**
       * <code>optional bool poached = 3;</code>
       */
      public Builder setPoached(boolean value) {
        copyOnWrite();
        instance.setPoached(value);
        return this;
      }
      /**
       * <code>optional bool poached = 3;</code>
       */
      public Builder clearPoached() {
        copyOnWrite();
        instance.clearPoached();
        return this;
      }

      /**
       * <code>optional int64 poached_timestamp_ms = 4;</code>
       */
      @java.lang.Override
      public boolean hasPoachedTimestampMs() {
        return instance.hasPoachedTimestampMs();
      }
      /**
       * <code>optional int64 poached_timestamp_ms = 4;</code>
       */
      @java.lang.Override
      public long getPoachedTimestampMs() {
        return instance.getPoachedTimestampMs();
      }
      /**
       * <code>optional int64 poached_timestamp_ms = 4;</code>
       */
      public Builder setPoachedTimestampMs(long value) {
        copyOnWrite();
        instance.setPoachedTimestampMs(value);
        return this;
      }
      /**
       * <code>optional int64 poached_timestamp_ms = 4;</code>
       */
      public Builder clearPoachedTimestampMs() {
        copyOnWrite();
        instance.clearPoachedTimestampMs();
        return this;
      }

      /**
       * <code>optional bool poached_eggs_removed = 17;</code>
       */
      @java.lang.Override
      public boolean hasPoachedEggsRemoved() {
        return instance.hasPoachedEggsRemoved();
      }
      /**
       * <code>optional bool poached_eggs_removed = 17;</code>
       */
      @java.lang.Override
      public boolean getPoachedEggsRemoved() {
        return instance.getPoachedEggsRemoved();
      }
      /**
       * <code>optional bool poached_eggs_removed = 17;</code>
       */
      public Builder setPoachedEggsRemoved(boolean value) {
        copyOnWrite();
        instance.setPoachedEggsRemoved(value);
        return this;
      }
      /**
       * <code>optional bool poached_eggs_removed = 17;</code>
       */
      public Builder clearPoachedEggsRemoved() {
        copyOnWrite();
        instance.clearPoachedEggsRemoved();
        return this;
      }

      /**
       * <code>optional bool roots_invaded_eggshells = 5;</code>
       */
      @java.lang.Override
      public boolean hasRootsInvadedEggshells() {
        return instance.hasRootsInvadedEggshells();
      }
      /**
       * <code>optional bool roots_invaded_eggshells = 5;</code>
       */
      @java.lang.Override
      public boolean getRootsInvadedEggshells() {
        return instance.getRootsInvadedEggshells();
      }
      /**
       * <code>optional bool roots_invaded_eggshells = 5;</code>
       */
      public Builder setRootsInvadedEggshells(boolean value) {
        copyOnWrite();
        instance.setRootsInvadedEggshells(value);
        return this;
      }
      /**
       * <code>optional bool roots_invaded_eggshells = 5;</code>
       */
      public Builder clearRootsInvadedEggshells() {
        copyOnWrite();
        instance.clearRootsInvadedEggshells();
        return this;
      }

      /**
       * <code>optional bool eggs_scattered_by_another = 6;</code>
       */
      @java.lang.Override
      public boolean hasEggsScatteredByAnother() {
        return instance.hasEggsScatteredByAnother();
      }
      /**
       * <code>optional bool eggs_scattered_by_another = 6;</code>
       */
      @java.lang.Override
      public boolean getEggsScatteredByAnother() {
        return instance.getEggsScatteredByAnother();
      }
      /**
       * <code>optional bool eggs_scattered_by_another = 6;</code>
       */
      public Builder setEggsScatteredByAnother(boolean value) {
        copyOnWrite();
        instance.setEggsScatteredByAnother(value);
        return this;
      }
      /**
       * <code>optional bool eggs_scattered_by_another = 6;</code>
       */
      public Builder clearEggsScatteredByAnother() {
        copyOnWrite();
        instance.clearEggsScatteredByAnother();
        return this;
      }

      /**
       * <code>optional int64 eggs_scattered_by_another_timestamp_ms = 16;</code>
       */
      @java.lang.Override
      public boolean hasEggsScatteredByAnotherTimestampMs() {
        return instance.hasEggsScatteredByAnotherTimestampMs();
      }
      /**
       * <code>optional int64 eggs_scattered_by_another_timestamp_ms = 16;</code>
       */
      @java.lang.Override
      public long getEggsScatteredByAnotherTimestampMs() {
        return instance.getEggsScatteredByAnotherTimestampMs();
      }
      /**
       * <code>optional int64 eggs_scattered_by_another_timestamp_ms = 16;</code>
       */
      public Builder setEggsScatteredByAnotherTimestampMs(long value) {
        copyOnWrite();
        instance.setEggsScatteredByAnotherTimestampMs(value);
        return this;
      }
      /**
       * <code>optional int64 eggs_scattered_by_another_timestamp_ms = 16;</code>
       */
      public Builder clearEggsScatteredByAnotherTimestampMs() {
        copyOnWrite();
        instance.clearEggsScatteredByAnotherTimestampMs();
        return this;
      }

      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
       */
      @java.lang.Override
      public java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> getWashOverList() {
        return java.util.Collections.unmodifiableList(
            instance.getWashOverList());
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
       */
      @java.lang.Override
      public int getWashOverCount() {
        return instance.getWashOverCount();
      }/**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getWashOver(int index) {
        return instance.getWashOver(index);
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
       */
      public Builder setWashOver(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.setWashOver(index, value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
       */
      public Builder setWashOver(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.setWashOver(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
       */
      public Builder addWashOver(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.addWashOver(value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
       */
      public Builder addWashOver(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.addWashOver(index, value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
       */
      public Builder addWashOver(
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addWashOver(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
       */
      public Builder addWashOver(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addWashOver(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
       */
      public Builder addAllWashOver(
          java.lang.Iterable<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> values) {
        copyOnWrite();
        instance.addAllWashOver(values);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
       */
      public Builder clearWashOver() {
        copyOnWrite();
        instance.clearWashOver();
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_over = 7;</code>
       */
      public Builder removeWashOver(int index) {
        copyOnWrite();
        instance.removeWashOver(index);
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
       */
      @java.lang.Override
      public boolean hasWashOut() {
        return instance.hasWashOut();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getWashOut() {
        return instance.getWashOut();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
       */
      public Builder setWashOut(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.setWashOut(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
       */
      public Builder setWashOut(
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.setWashOut(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
       */
      public Builder mergeWashOut(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.mergeWashOut(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent wash_out = 8;</code>
       */
      public Builder clearWashOut() {  copyOnWrite();
        instance.clearWashOut();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
       */
      @java.lang.Override
      public boolean hasPartialWashout() {
        return instance.hasPartialWashout();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getPartialWashout() {
        return instance.getPartialWashout();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
       */
      public Builder setPartialWashout(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.setPartialWashout(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
       */
      public Builder setPartialWashout(
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.setPartialWashout(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
       */
      public Builder mergePartialWashout(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.mergePartialWashout(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.WashEvent partial_washout = 19;</code>
       */
      public Builder clearPartialWashout() {  copyOnWrite();
        instance.clearPartialWashout();
        return this;
      }

      /**
       * <pre>
       *nest_inundated is deprecated, use new inundated_event instead
       * </pre>
       *
       * <code>optional bool nest_inundated = 21;</code>
       */
      @java.lang.Override
      public boolean hasNestInundated() {
        return instance.hasNestInundated();
      }
      /**
       * <pre>
       *nest_inundated is deprecated, use new inundated_event instead
       * </pre>
       *
       * <code>optional bool nest_inundated = 21;</code>
       */
      @java.lang.Override
      public boolean getNestInundated() {
        return instance.getNestInundated();
      }
      /**
       * <pre>
       *nest_inundated is deprecated, use new inundated_event instead
       * </pre>
       *
       * <code>optional bool nest_inundated = 21;</code>
       */
      public Builder setNestInundated(boolean value) {
        copyOnWrite();
        instance.setNestInundated(value);
        return this;
      }
      /**
       * <pre>
       *nest_inundated is deprecated, use new inundated_event instead
       * </pre>
       *
       * <code>optional bool nest_inundated = 21;</code>
       */
      public Builder clearNestInundated() {
        copyOnWrite();
        instance.clearNestInundated();
        return this;
      }

      /**
       * <code>optional int64 nest_inundated_timestamp_ms = 22;</code>
       */
      @java.lang.Override
      public boolean hasNestInundatedTimestampMs() {
        return instance.hasNestInundatedTimestampMs();
      }
      /**
       * <code>optional int64 nest_inundated_timestamp_ms = 22;</code>
       */
      @java.lang.Override
      public long getNestInundatedTimestampMs() {
        return instance.getNestInundatedTimestampMs();
      }
      /**
       * <code>optional int64 nest_inundated_timestamp_ms = 22;</code>
       */
      public Builder setNestInundatedTimestampMs(long value) {
        copyOnWrite();
        instance.setNestInundatedTimestampMs(value);
        return this;
      }
      /**
       * <code>optional int64 nest_inundated_timestamp_ms = 22;</code>
       */
      public Builder clearNestInundatedTimestampMs() {
        copyOnWrite();
        instance.clearNestInundatedTimestampMs();
        return this;
      }

      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
       */
      @java.lang.Override
      public java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> getInundatedEventList() {
        return java.util.Collections.unmodifiableList(
            instance.getInundatedEventList());
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
       */
      @java.lang.Override
      public int getInundatedEventCount() {
        return instance.getInundatedEventCount();
      }/**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent getInundatedEvent(int index) {
        return instance.getInundatedEvent(index);
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
       */
      public Builder setInundatedEvent(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.setInundatedEvent(index, value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
       */
      public Builder setInundatedEvent(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.setInundatedEvent(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
       */
      public Builder addInundatedEvent(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.addInundatedEvent(value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
       */
      public Builder addInundatedEvent(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent value) {
        copyOnWrite();
        instance.addInundatedEvent(index, value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
       */
      public Builder addInundatedEvent(
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addInundatedEvent(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
       */
      public Builder addInundatedEvent(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addInundatedEvent(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
       */
      public Builder addAllInundatedEvent(
          java.lang.Iterable<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent> values) {
        copyOnWrite();
        instance.addAllInundatedEvent(values);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
       */
      public Builder clearInundatedEvent() {
        copyOnWrite();
        instance.clearInundatedEvent();
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.WashEvent inundated_event = 25;</code>
       */
      public Builder removeInundatedEvent(int index) {
        copyOnWrite();
        instance.removeInundatedEvent(index);
        return this;
      }

      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
       */
      @java.lang.Override
      public java.util.List<com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent> getPreditationList() {
        return java.util.Collections.unmodifiableList(
            instance.getPreditationList());
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
       */
      @java.lang.Override
      public int getPreditationCount() {
        return instance.getPreditationCount();
      }/**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent getPreditation(int index) {
        return instance.getPreditation(index);
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
       */
      public Builder setPreditation(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent value) {
        copyOnWrite();
        instance.setPreditation(index, value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
       */
      public Builder setPreditation(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.Builder builderForValue) {
        copyOnWrite();
        instance.setPreditation(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
       */
      public Builder addPreditation(com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent value) {
        copyOnWrite();
        instance.addPreditation(value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
       */
      public Builder addPreditation(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent value) {
        copyOnWrite();
        instance.addPreditation(index, value);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
       */
      public Builder addPreditation(
          com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addPreditation(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
       */
      public Builder addPreditation(
          int index, com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.Builder builderForValue) {
        copyOnWrite();
        instance.addPreditation(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
       */
      public Builder addAllPreditation(
          java.lang.Iterable<? extends com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent> values) {
        copyOnWrite();
        instance.addAllPreditation(values);
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
       */
      public Builder clearPreditation() {
        copyOnWrite();
        instance.clearPreditation();
        return this;
      }
      /**
       * <code>repeated .com.islandturtlewatch.nest.data.NestCondition.PreditationEvent preditation = 9;</code>
       */
      public Builder removePreditation(int index) {
        copyOnWrite();
        instance.removePreditation(index);
        return this;
      }

      /**
       * <code>optional bool actively_record_events = 27 [default = true];</code>
       */
      @java.lang.Override
      public boolean hasActivelyRecordEvents() {
        return instance.hasActivelyRecordEvents();
      }
      /**
       * <code>optional bool actively_record_events = 27 [default = true];</code>
       */
      @java.lang.Override
      public boolean getActivelyRecordEvents() {
        return instance.getActivelyRecordEvents();
      }
      /**
       * <code>optional bool actively_record_events = 27 [default = true];</code>
       */
      public Builder setActivelyRecordEvents(boolean value) {
        copyOnWrite();
        instance.setActivelyRecordEvents(value);
        return this;
      }
      /**
       * <code>optional bool actively_record_events = 27 [default = true];</code>
       */
      public Builder clearActivelyRecordEvents() {
        copyOnWrite();
        instance.clearActivelyRecordEvents();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.ProportionEventsRecorded prop_events_recorded = 29;</code>
       */
      @java.lang.Override
      public boolean hasPropEventsRecorded() {
        return instance.hasPropEventsRecorded();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.ProportionEventsRecorded prop_events_recorded = 29;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestCondition.ProportionEventsRecorded getPropEventsRecorded() {
        return instance.getPropEventsRecorded();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.ProportionEventsRecorded prop_events_recorded = 29;</code>
       */
      public Builder setPropEventsRecorded(com.islandturtlewatch.nest.data.ReportProto.NestCondition.ProportionEventsRecorded value) {
        copyOnWrite();
        instance.setPropEventsRecorded(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestCondition.ProportionEventsRecorded prop_events_recorded = 29;</code>
       */
      public Builder clearPropEventsRecorded() {
        copyOnWrite();
        instance.clearPropEventsRecorded();
        return this;
      }

      /**
       * <code>optional int64 hatch_timestamp_ms = 10;</code>
       */
      @java.lang.Override
      public boolean hasHatchTimestampMs() {
        return instance.hasHatchTimestampMs();
      }
      /**
       * <code>optional int64 hatch_timestamp_ms = 10;</code>
       */
      @java.lang.Override
      public long getHatchTimestampMs() {
        return instance.getHatchTimestampMs();
      }
      /**
       * <code>optional int64 hatch_timestamp_ms = 10;</code>
       */
      public Builder setHatchTimestampMs(long value) {
        copyOnWrite();
        instance.setHatchTimestampMs(value);
        return this;
      }
      /**
       * <code>optional int64 hatch_timestamp_ms = 10;</code>
       */
      public Builder clearHatchTimestampMs() {
        copyOnWrite();
        instance.clearHatchTimestampMs();
        return this;
      }

      /**
       * <code>optional int64 additional_hatch_timestamp_ms = 11;</code>
       */
      @java.lang.Override
      public boolean hasAdditionalHatchTimestampMs() {
        return instance.hasAdditionalHatchTimestampMs();
      }
      /**
       * <code>optional int64 additional_hatch_timestamp_ms = 11;</code>
       */
      @java.lang.Override
      public long getAdditionalHatchTimestampMs() {
        return instance.getAdditionalHatchTimestampMs();
      }
      /**
       * <code>optional int64 additional_hatch_timestamp_ms = 11;</code>
       */
      public Builder setAdditionalHatchTimestampMs(long value) {
        copyOnWrite();
        instance.setAdditionalHatchTimestampMs(value);
        return this;
      }
      /**
       * <code>optional int64 additional_hatch_timestamp_ms = 11;</code>
       */
      public Builder clearAdditionalHatchTimestampMs() {
        copyOnWrite();
        instance.clearAdditionalHatchTimestampMs();
        return this;
      }

      /**
       * <code>optional bool disorientation = 12;</code>
       */
      @java.lang.Override
      public boolean hasDisorientation() {
        return instance.hasDisorientation();
      }
      /**
       * <code>optional bool disorientation = 12;</code>
       */
      @java.lang.Override
      public boolean getDisorientation() {
        return instance.getDisorientation();
      }
      /**
       * <code>optional bool disorientation = 12;</code>
       */
      public Builder setDisorientation(boolean value) {
        copyOnWrite();
        instance.setDisorientation(value);
        return this;
      }
      /**
       * <code>optional bool disorientation = 12;</code>
       */
      public Builder clearDisorientation() {
        copyOnWrite();
        instance.clearDisorientation();
        return this;
      }

      /**
       * <code>optional bool abandoned_body_pits = 13;</code>
       */
      @java.lang.Override
      public boolean hasAbandonedBodyPits() {
        return instance.hasAbandonedBodyPits();
      }
      /**
       * <code>optional bool abandoned_body_pits = 13;</code>
       */
      @java.lang.Override
      public boolean getAbandonedBodyPits() {
        return instance.getAbandonedBodyPits();
      }
      /**
       * <code>optional bool abandoned_body_pits = 13;</code>
       */
      public Builder setAbandonedBodyPits(boolean value) {
        copyOnWrite();
        instance.setAbandonedBodyPits(value);
        return this;
      }
      /**
       * <code>optional bool abandoned_body_pits = 13;</code>
       */
      public Builder clearAbandonedBodyPits() {
        copyOnWrite();
        instance.clearAbandonedBodyPits();
        return this;
      }

      /**
       * <code>optional bool abandoned_egg_cavities = 14;</code>
       */
      @java.lang.Override
      public boolean hasAbandonedEggCavities() {
        return instance.hasAbandonedEggCavities();
      }
      /**
       * <code>optional bool abandoned_egg_cavities = 14;</code>
       */
      @java.lang.Override
      public boolean getAbandonedEggCavities() {
        return instance.getAbandonedEggCavities();
      }
      /**
       * <code>optional bool abandoned_egg_cavities = 14;</code>
       */
      public Builder setAbandonedEggCavities(boolean value) {
        copyOnWrite();
        instance.setAbandonedEggCavities(value);
        return this;
      }
      /**
       * <code>optional bool abandoned_egg_cavities = 14;</code>
       */
      public Builder clearAbandonedEggCavities() {
        copyOnWrite();
        instance.clearAbandonedEggCavities();
        return this;
      }

      /**
       * <code>optional bool no_digging = 18;</code>
       */
      @java.lang.Override
      public boolean hasNoDigging() {
        return instance.hasNoDigging();
      }
      /**
       * <code>optional bool no_digging = 18;</code>
       */
      @java.lang.Override
      public boolean getNoDigging() {
        return instance.getNoDigging();
      }
      /**
       * <code>optional bool no_digging = 18;</code>
       */
      public Builder setNoDigging(boolean value) {
        copyOnWrite();
        instance.setNoDigging(value);
        return this;
      }
      /**
       * <code>optional bool no_digging = 18;</code>
       */
      public Builder clearNoDigging() {
        copyOnWrite();
        instance.clearNoDigging();
        return this;
      }

      /**
       * <code>optional bool nest_depredated = 23;</code>
       */
      @java.lang.Override
      public boolean hasNestDepredated() {
        return instance.hasNestDepredated();
      }
      /**
       * <code>optional bool nest_depredated = 23;</code>
       */
      @java.lang.Override
      public boolean getNestDepredated() {
        return instance.getNestDepredated();
      }
      /**
       * <code>optional bool nest_depredated = 23;</code>
       */
      public Builder setNestDepredated(boolean value) {
        copyOnWrite();
        instance.setNestDepredated(value);
        return this;
      }
      /**
       * <code>optional bool nest_depredated = 23;</code>
       */
      public Builder clearNestDepredated() {
        copyOnWrite();
        instance.clearNestDepredated();
        return this;
      }

      /**
       * <pre>
       * Next ID=35
       * </pre>
       *
       * <code>optional bool eggs_damaged_by_another_turtle = 24;</code>
       */
      @java.lang.Override
      public boolean hasEggsDamagedByAnotherTurtle() {
        return instance.hasEggsDamagedByAnotherTurtle();
      }
      /**
       * <pre>
       * Next ID=35
       * </pre>
       *
       * <code>optional bool eggs_damaged_by_another_turtle = 24;</code>
       */
      @java.lang.Override
      public boolean getEggsDamagedByAnotherTurtle() {
        return instance.getEggsDamagedByAnotherTurtle();
      }
      /**
       * <pre>
       * Next ID=35
       * </pre>
       *
       * <code>optional bool eggs_damaged_by_another_turtle = 24;</code>
       */
      public Builder setEggsDamagedByAnotherTurtle(boolean value) {
        copyOnWrite();
        instance.setEggsDamagedByAnotherTurtle(value);
        return this;
      }
      /**
       * <pre>
       * Next ID=35
       * </pre>
       *
       * <code>optional bool eggs_damaged_by_another_turtle = 24;</code>
       */
      public Builder clearEggsDamagedByAnotherTurtle() {
        copyOnWrite();
        instance.clearEggsDamagedByAnotherTurtle();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.NestCondition)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.islandturtlewatch.nest.data.ReportProto.NestCondition();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          accretion_.makeImmutable();
          erosion_.makeImmutable();
          washOver_.makeImmutable();
          inundatedEvent_.makeImmutable();
          preditation_.makeImmutable();
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.islandturtlewatch.nest.data.ReportProto.NestCondition other = (com.islandturtlewatch.nest.data.ReportProto.NestCondition) arg1;
          ghostDamage10OrLess_ = visitor.visitBoolean(
              hasGhostDamage10OrLess(), ghostDamage10OrLess_,
              other.hasGhostDamage10OrLess(), other.ghostDamage10OrLess_);
          vandalized_ = visitor.visitBoolean(
              hasVandalized(), vandalized_,
              other.hasVandalized(), other.vandalized_);
          describeControlMethods_ = visitor.visitString(
              hasDescribeControlMethods(), describeControlMethods_,
              other.hasDescribeControlMethods(), other.describeControlMethods_);
          vandalizedTimestampMs_ = visitor.visitLong(
              hasVandalizedTimestampMs(), vandalizedTimestampMs_,
              other.hasVandalizedTimestampMs(), other.vandalizedTimestampMs_);
          vandalismType_ = visitor.visitInt(hasVandalismType(), vandalismType_,
              other.hasVandalismType(), other.vandalismType_);
          nestDugInto_ = visitor.visitBoolean(
              hasNestDugInto(), nestDugInto_,
              other.hasNestDugInto(), other.nestDugInto_);
          postHatchWashout_ = visitor.visitBoolean(
              hasPostHatchWashout(), postHatchWashout_,
              other.hasPostHatchWashout(), other.postHatchWashout_);
          completeWashoutTiming_ = visitor.visitInt(hasCompleteWashoutTiming(), completeWashoutTiming_,
              other.hasCompleteWashoutTiming(), other.completeWashoutTiming_);
          partialWashoutTiming_ = visitor.visitInt(hasPartialWashoutTiming(), partialWashoutTiming_,
              other.hasPartialWashoutTiming(), other.partialWashoutTiming_);
          accretion_= visitor.visitList(accretion_, other.accretion_);
          erosion_= visitor.visitList(erosion_, other.erosion_);
          stormImpact_ = visitor.visitMessage(stormImpact_, other.stormImpact_);
          poached_ = visitor.visitBoolean(
              hasPoached(), poached_,
              other.hasPoached(), other.poached_);
          poachedTimestampMs_ = visitor.visitLong(
              hasPoachedTimestampMs(), poachedTimestampMs_,
              other.hasPoachedTimestampMs(), other.poachedTimestampMs_);
          poachedEggsRemoved_ = visitor.visitBoolean(
              hasPoachedEggsRemoved(), poachedEggsRemoved_,
              other.hasPoachedEggsRemoved(), other.poachedEggsRemoved_);
          rootsInvadedEggshells_ = visitor.visitBoolean(
              hasRootsInvadedEggshells(), rootsInvadedEggshells_,
              other.hasRootsInvadedEggshells(), other.rootsInvadedEggshells_);
          eggsScatteredByAnother_ = visitor.visitBoolean(
              hasEggsScatteredByAnother(), eggsScatteredByAnother_,
              other.hasEggsScatteredByAnother(), other.eggsScatteredByAnother_);
          eggsScatteredByAnotherTimestampMs_ = visitor.visitLong(
              hasEggsScatteredByAnotherTimestampMs(), eggsScatteredByAnotherTimestampMs_,
              other.hasEggsScatteredByAnotherTimestampMs(), other.eggsScatteredByAnotherTimestampMs_);
          washOver_= visitor.visitList(washOver_, other.washOver_);
          washOut_ = visitor.visitMessage(washOut_, other.washOut_);
          partialWashout_ = visitor.visitMessage(partialWashout_, other.partialWashout_);
          nestInundated_ = visitor.visitBoolean(
              hasNestInundated(), nestInundated_,
              other.hasNestInundated(), other.nestInundated_);
          nestInundatedTimestampMs_ = visitor.visitLong(
              hasNestInundatedTimestampMs(), nestInundatedTimestampMs_,
              other.hasNestInundatedTimestampMs(), other.nestInundatedTimestampMs_);
          inundatedEvent_= visitor.visitList(inundatedEvent_, other.inundatedEvent_);
          preditation_= visitor.visitList(preditation_, other.preditation_);
          activelyRecordEvents_ = visitor.visitBoolean(
              hasActivelyRecordEvents(), activelyRecordEvents_,
              other.hasActivelyRecordEvents(), other.activelyRecordEvents_);
          propEventsRecorded_ = visitor.visitInt(hasPropEventsRecorded(), propEventsRecorded_,
              other.hasPropEventsRecorded(), other.propEventsRecorded_);
          hatchTimestampMs_ = visitor.visitLong(
              hasHatchTimestampMs(), hatchTimestampMs_,
              other.hasHatchTimestampMs(), other.hatchTimestampMs_);
          additionalHatchTimestampMs_ = visitor.visitLong(
              hasAdditionalHatchTimestampMs(), additionalHatchTimestampMs_,
              other.hasAdditionalHatchTimestampMs(), other.additionalHatchTimestampMs_);
          disorientation_ = visitor.visitBoolean(
              hasDisorientation(), disorientation_,
              other.hasDisorientation(), other.disorientation_);
          abandonedBodyPits_ = visitor.visitBoolean(
              hasAbandonedBodyPits(), abandonedBodyPits_,
              other.hasAbandonedBodyPits(), other.abandonedBodyPits_);
          abandonedEggCavities_ = visitor.visitBoolean(
              hasAbandonedEggCavities(), abandonedEggCavities_,
              other.hasAbandonedEggCavities(), other.abandonedEggCavities_);
          noDigging_ = visitor.visitBoolean(
              hasNoDigging(), noDigging_,
              other.hasNoDigging(), other.noDigging_);
          nestDepredated_ = visitor.visitBoolean(
              hasNestDepredated(), nestDepredated_,
              other.hasNestDepredated(), other.nestDepredated_);
          eggsDamagedByAnotherTurtle_ = visitor.visitBoolean(
              hasEggsDamagedByAnotherTurtle(), eggsDamagedByAnotherTurtle_,
              other.hasEggsDamagedByAnotherTurtle(), other.eggsDamagedByAnotherTurtle_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000002;
                  vandalized_ = input.readBool();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000008;
                  vandalizedTimestampMs_ = input.readInt64();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000400;
                  poached_ = input.readBool();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000800;
                  poachedTimestampMs_ = input.readInt64();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00002000;
                  rootsInvadedEggshells_ = input.readBool();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00004000;
                  eggsScatteredByAnother_ = input.readBool();
                  break;
                }
                case 58: {
                  if (!washOver_.isModifiable()) {
                    washOver_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(washOver_);
                  }
                  washOver_.add(
                      input.readMessage(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.parser(), extensionRegistry));
                  break;
                }
                case 66: {
                  com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder subBuilder = null;
                  if (((bitField0_ & 0x00010000) == 0x00010000)) {
                    subBuilder = washOut_.toBuilder();
                  }
                  washOut_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(washOut_);
                    washOut_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00010000;
                  break;
                }
                case 74: {
                  if (!preditation_.isModifiable()) {
                    preditation_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(preditation_);
                  }
                  preditation_.add(
                      input.readMessage(com.islandturtlewatch.nest.data.ReportProto.NestCondition.PreditationEvent.parser(), extensionRegistry));
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00400000;
                  hatchTimestampMs_ = input.readInt64();
                  break;
                }
                case 88: {
                  bitField0_ |= 0x00800000;
                  additionalHatchTimestampMs_ = input.readInt64();
                  break;
                }
                case 96: {
                  bitField0_ |= 0x01000000;
                  disorientation_ = input.readBool();
                  break;
                }
                case 104: {
                  bitField0_ |= 0x02000000;
                  abandonedBodyPits_ = input.readBool();
                  break;
                }
                case 112: {
                  bitField0_ |= 0x04000000;
                  abandonedEggCavities_ = input.readBool();
                  break;
                }
                case 120: {
                  int rawValue = input.readEnum();
                  com.islandturtlewatch.nest.data.ReportProto.NestCondition.VandalismType value = com.islandturtlewatch.nest.data.ReportProto.NestCondition.VandalismType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(15, rawValue);
                  } else {
                    bitField0_ |= 0x00000010;
                    vandalismType_ = rawValue;
                  }
                  break;
                }
                case 128: {
                  bitField0_ |= 0x00008000;
                  eggsScatteredByAnotherTimestampMs_ = input.readInt64();
                  break;
                }
                case 136: {
                  bitField0_ |= 0x00001000;
                  poachedEggsRemoved_ = input.readBool();
                  break;
                }
                case 144: {
                  bitField0_ |= 0x08000000;
                  noDigging_ = input.readBool();
                  break;
                }
                case 154: {
                  com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.Builder subBuilder = null;
                  if (((bitField0_ & 0x00020000) == 0x00020000)) {
                    subBuilder = partialWashout_.toBuilder();
                  }
                  partialWashout_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(partialWashout_);
                    partialWashout_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00020000;
                  break;
                }
                case 160: {
                  bitField0_ |= 0x00000040;
                  postHatchWashout_ = input.readBool();
                  break;
                }
                case 168: {
                  bitField0_ |= 0x00040000;
                  nestInundated_ = input.readBool();
                  break;
                }
                case 176: {
                  bitField0_ |= 0x00080000;
                  nestInundatedTimestampMs_ = input.readInt64();
                  break;
                }
                case 184: {
                  bitField0_ |= 0x10000000;
                  nestDepredated_ = input.readBool();
                  break;
                }
                case 192: {
                  bitField0_ |= 0x20000000;
                  eggsDamagedByAnotherTurtle_ = input.readBool();
                  break;
                }
                case 202: {
                  if (!inundatedEvent_.isModifiable()) {
                    inundatedEvent_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(inundatedEvent_);
                  }
                  inundatedEvent_.add(
                      input.readMessage(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.parser(), extensionRegistry));
                  break;
                }
                case 208: {
                  bitField0_ |= 0x00000020;
                  nestDugInto_ = input.readBool();
                  break;
                }
                case 216: {
                  bitField0_ |= 0x00100000;
                  activelyRecordEvents_ = input.readBool();
                  break;
                }
                case 226: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000004;
                  describeControlMethods_ = s;
                  break;
                }
                case 232: {
                  int rawValue = input.readEnum();
                  com.islandturtlewatch.nest.data.ReportProto.NestCondition.ProportionEventsRecorded value = com.islandturtlewatch.nest.data.ReportProto.NestCondition.ProportionEventsRecorded.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(29, rawValue);
                  } else {
                    bitField0_ |= 0x00200000;
                    propEventsRecorded_ = rawValue;
                  }
                  break;
                }
                case 242: {
                  if (!accretion_.isModifiable()) {
                    accretion_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(accretion_);
                  }
                  accretion_.add(
                      input.readMessage(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.parser(), extensionRegistry));
                  break;
                }
                case 248: {
                  bitField0_ |= 0x00000001;
                  ghostDamage10OrLess_ = input.readBool();
                  break;
                }
                case 258: {
                  com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000200) == 0x00000200)) {
                    subBuilder = stormImpact_.toBuilder();
                  }
                  stormImpact_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.NestCondition.StormImpact.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(stormImpact_);
                    stormImpact_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000200;
                  break;
                }
                case 266: {
                  if (!erosion_.isModifiable()) {
                    erosion_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(erosion_);
                  }
                  erosion_.add(
                      input.readMessage(com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashEvent.parser(), extensionRegistry));
                  break;
                }
                case 272: {
                  int rawValue = input.readEnum();
                  com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption value = com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(34, rawValue);
                  } else {
                    bitField0_ |= 0x00000080;
                    completeWashoutTiming_ = rawValue;
                  }
                  break;
                }
                case 280: {
                  int rawValue = input.readEnum();
                  com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption value = com.islandturtlewatch.nest.data.ReportProto.NestCondition.WashoutTimeOption.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(35, rawValue);
                  } else {
                    bitField0_ |= 0x00000100;
                    partialWashoutTiming_ = rawValue;
                  }
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.NestCondition> parser = PARSER;
          if (parser == null) {
            synchronized (com.islandturtlewatch.nest.data.ReportProto.NestCondition.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.NestCondition)
    private static final com.islandturtlewatch.nest.data.ReportProto.NestCondition DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new NestCondition();
    }

    public static com.islandturtlewatch.nest.data.ReportProto.NestCondition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<NestCondition> PARSER;

    public static com.google.protobuf.Parser<NestCondition> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface NestLocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.NestLocation)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string street_address = 1;</code>
     */
    boolean hasStreetAddress();
    /**
     * <code>optional string street_address = 1;</code>
     */
    java.lang.String getStreetAddress();
    /**
     * <code>optional string street_address = 1;</code>
     */
    com.google.protobuf.ByteString
        getStreetAddressBytes();

    /**
     * <code>optional int32 section = 2;</code>
     */
    boolean hasSection();
    /**
     * <code>optional int32 section = 2;</code>
     */
    int getSection();

    /**
     * <code>optional string details = 3;</code>
     */
    boolean hasDetails();
    /**
     * <code>optional string details = 3;</code>
     */
    java.lang.String getDetails();
    /**
     * <code>optional string details = 3;</code>
     */
    com.google.protobuf.ByteString
        getDetailsBytes();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.City city = 4;</code>
     */
    boolean hasCity();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.City city = 4;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestLocation.City getCity();

    /**
     * <code>optional bool nest_within_project_area = 15;</code>
     */
    boolean hasNestWithinProjectArea();
    /**
     * <code>optional bool nest_within_project_area = 15;</code>
     */
    boolean getNestWithinProjectArea();

    /**
     * <code>optional bool in_cortez_groin_replacement_area = 14;</code>
     */
    boolean hasInCortezGroinReplacementArea();
    /**
     * <code>optional bool in_cortez_groin_replacement_area = 14;</code>
     */
    boolean getInCortezGroinReplacementArea();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Placement placement = 5;</code>
     */
    boolean hasPlacement();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Placement placement = 5;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestLocation.Placement getPlacement();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
     */
    boolean hasObstructions();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions getObstructions();

    /**
     * <code>optional int32 apex_to_barrier_ft = 7;</code>
     */
    boolean hasApexToBarrierFt();
    /**
     * <code>optional int32 apex_to_barrier_ft = 7;</code>
     */
    int getApexToBarrierFt();

    /**
     * <code>optional int32 apex_to_barrier_in = 8;</code>
     */
    boolean hasApexToBarrierIn();
    /**
     * <code>optional int32 apex_to_barrier_in = 8;</code>
     */
    int getApexToBarrierIn();

    /**
     * <code>optional int32 water_to_apex_ft = 9;</code>
     */
    boolean hasWaterToApexFt();
    /**
     * <code>optional int32 water_to_apex_ft = 9;</code>
     */
    int getWaterToApexFt();

    /**
     * <code>optional int32 water_to_apex_in = 10;</code>
     */
    boolean hasWaterToApexIn();
    /**
     * <code>optional int32 water_to_apex_in = 10;</code>
     */
    int getWaterToApexIn();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
     */
    boolean hasCoordinates();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates getCoordinates();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
     */
    boolean hasTriangulation();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation getTriangulation();

    /**
     * <pre>
     * Next ID=16
     * </pre>
     *
     * <code>optional bool escarpment_over_18_inches = 13;</code>
     */
    boolean hasEscarpmentOver18Inches();
    /**
     * <pre>
     * Next ID=16
     * </pre>
     *
     * <code>optional bool escarpment_over_18_inches = 13;</code>
     */
    boolean getEscarpmentOver18Inches();
  }
  /**
   * Protobuf type {@code com.islandturtlewatch.nest.data.NestLocation}
   */
  public  static final class NestLocation extends
      com.google.protobuf.GeneratedMessageLite<
          NestLocation, NestLocation.Builder> implements
      // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.NestLocation)
      NestLocationOrBuilder {
    private NestLocation() {
      streetAddress_ = "";
      details_ = "";
      city_ = 1;
      placement_ = 1;
    }
    /**
     * Protobuf enum {@code com.islandturtlewatch.nest.data.NestLocation.City}
     */
    public enum City
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>UNSET_CITY = 1;</code>
       */
      UNSET_CITY(1),
      /**
       * <code>AM = 2;</code>
       */
      AM(2),
      /**
       * <code>BB = 3;</code>
       */
      BB(3),
      /**
       * <code>HB = 4;</code>
       */
      HB(4),
      ;

      /**
       * <code>UNSET_CITY = 1;</code>
       */
      public static final int UNSET_CITY_VALUE = 1;
      /**
       * <code>AM = 2;</code>
       */
      public static final int AM_VALUE = 2;
      /**
       * <code>BB = 3;</code>
       */
      public static final int BB_VALUE = 3;
      /**
       * <code>HB = 4;</code>
       */
      public static final int HB_VALUE = 4;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static City valueOf(int value) {
        return forNumber(value);
      }

      public static City forNumber(int value) {
        switch (value) {
          case 1: return UNSET_CITY;
          case 2: return AM;
          case 3: return BB;
          case 4: return HB;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<City>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          City> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<City>() {
              @java.lang.Override
              public City findValueByNumber(int number) {
                return City.forNumber(number);
              }
            };

      private final int value;

      private City(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.NestLocation.City)
    }

    /**
     * Protobuf enum {@code com.islandturtlewatch.nest.data.NestLocation.Placement}
     */
    public enum Placement
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>UNSET_PLACEMENT = 1;</code>
       */
      UNSET_PLACEMENT(1),
      /**
       * <code>OPEN_BEACH = 2;</code>
       */
      OPEN_BEACH(2),
      /**
       * <code>IN_VEGITATION = 3;</code>
       */
      IN_VEGITATION(3),
      /**
       * <code>AT_VEGITATION = 4;</code>
       */
      AT_VEGITATION(4),
      /**
       * <code>AT_ESCARPMENT = 5;</code>
       */
      AT_ESCARPMENT(5),
      /**
       * <code>ON_ESCARPMENT = 6;</code>
       */
      ON_ESCARPMENT(6),
      ;

      /**
       * <code>UNSET_PLACEMENT = 1;</code>
       */
      public static final int UNSET_PLACEMENT_VALUE = 1;
      /**
       * <code>OPEN_BEACH = 2;</code>
       */
      public static final int OPEN_BEACH_VALUE = 2;
      /**
       * <code>IN_VEGITATION = 3;</code>
       */
      public static final int IN_VEGITATION_VALUE = 3;
      /**
       * <code>AT_VEGITATION = 4;</code>
       */
      public static final int AT_VEGITATION_VALUE = 4;
      /**
       * <code>AT_ESCARPMENT = 5;</code>
       */
      public static final int AT_ESCARPMENT_VALUE = 5;
      /**
       * <code>ON_ESCARPMENT = 6;</code>
       */
      public static final int ON_ESCARPMENT_VALUE = 6;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Placement valueOf(int value) {
        return forNumber(value);
      }

      public static Placement forNumber(int value) {
        switch (value) {
          case 1: return UNSET_PLACEMENT;
          case 2: return OPEN_BEACH;
          case 3: return IN_VEGITATION;
          case 4: return AT_VEGITATION;
          case 5: return AT_ESCARPMENT;
          case 6: return ON_ESCARPMENT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Placement>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Placement> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Placement>() {
              @java.lang.Override
              public Placement findValueByNumber(int number) {
                return Placement.forNumber(number);
              }
            };

      private final int value;

      private Placement(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.NestLocation.Placement)
    }

    public interface NestObstructionsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.NestLocation.NestObstructions)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional bool seawall_rocks = 1;</code>
       */
      boolean hasSeawallRocks();
      /**
       * <code>optional bool seawall_rocks = 1;</code>
       */
      boolean getSeawallRocks();

      /**
       * <code>optional bool furniture = 2;</code>
       */
      boolean hasFurniture();
      /**
       * <code>optional bool furniture = 2;</code>
       */
      boolean getFurniture();

      /**
       * <code>optional bool escarpment = 3;</code>
       */
      boolean hasEscarpment();
      /**
       * <code>optional bool escarpment = 3;</code>
       */
      boolean getEscarpment();

      /**
       * <code>optional string other = 4;</code>
       */
      boolean hasOther();
      /**
       * <code>optional string other = 4;</code>
       */
      java.lang.String getOther();
      /**
       * <code>optional string other = 4;</code>
       */
      com.google.protobuf.ByteString
          getOtherBytes();
    }
    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.NestLocation.NestObstructions}
     */
    public  static final class NestObstructions extends
        com.google.protobuf.GeneratedMessageLite<
            NestObstructions, NestObstructions.Builder> implements
        // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.NestLocation.NestObstructions)
        NestObstructionsOrBuilder {
      private NestObstructions() {
        other_ = "";
      }
      private int bitField0_;
      public static final int SEAWALL_ROCKS_FIELD_NUMBER = 1;
      private boolean seawallRocks_;
      /**
       * <code>optional bool seawall_rocks = 1;</code>
       */
      @java.lang.Override
      public boolean hasSeawallRocks() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool seawall_rocks = 1;</code>
       */
      @java.lang.Override
      public boolean getSeawallRocks() {
        return seawallRocks_;
      }
      /**
       * <code>optional bool seawall_rocks = 1;</code>
       */
      private void setSeawallRocks(boolean value) {
        bitField0_ |= 0x00000001;
        seawallRocks_ = value;
      }
      /**
       * <code>optional bool seawall_rocks = 1;</code>
       */
      private void clearSeawallRocks() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seawallRocks_ = false;
      }

      public static final int FURNITURE_FIELD_NUMBER = 2;
      private boolean furniture_;
      /**
       * <code>optional bool furniture = 2;</code>
       */
      @java.lang.Override
      public boolean hasFurniture() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool furniture = 2;</code>
       */
      @java.lang.Override
      public boolean getFurniture() {
        return furniture_;
      }
      /**
       * <code>optional bool furniture = 2;</code>
       */
      private void setFurniture(boolean value) {
        bitField0_ |= 0x00000002;
        furniture_ = value;
      }
      /**
       * <code>optional bool furniture = 2;</code>
       */
      private void clearFurniture() {
        bitField0_ = (bitField0_ & ~0x00000002);
        furniture_ = false;
      }

      public static final int ESCARPMENT_FIELD_NUMBER = 3;
      private boolean escarpment_;
      /**
       * <code>optional bool escarpment = 3;</code>
       */
      @java.lang.Override
      public boolean hasEscarpment() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool escarpment = 3;</code>
       */
      @java.lang.Override
      public boolean getEscarpment() {
        return escarpment_;
      }
      /**
       * <code>optional bool escarpment = 3;</code>
       */
      private void setEscarpment(boolean value) {
        bitField0_ |= 0x00000004;
        escarpment_ = value;
      }
      /**
       * <code>optional bool escarpment = 3;</code>
       */
      private void clearEscarpment() {
        bitField0_ = (bitField0_ & ~0x00000004);
        escarpment_ = false;
      }

      public static final int OTHER_FIELD_NUMBER = 4;
      private java.lang.String other_;
      /**
       * <code>optional string other = 4;</code>
       */
      @java.lang.Override
      public boolean hasOther() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string other = 4;</code>
       */
      @java.lang.Override
      public java.lang.String getOther() {
        return other_;
      }
      /**
       * <code>optional string other = 4;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getOtherBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(other_);
      }
      /**
       * <code>optional string other = 4;</code>
       */
      private void setOther(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        other_ = value;
      }
      /**
       * <code>optional string other = 4;</code>
       */
      private void clearOther() {
        bitField0_ = (bitField0_ & ~0x00000008);
        other_ = getDefaultInstance().getOther();
      }
      /**
       * <code>optional string other = 4;</code>
       */
      private void setOtherBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        other_ = value.toStringUtf8();
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, seawallRocks_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, furniture_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, escarpment_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeString(4, getOther());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, seawallRocks_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, furniture_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, escarpment_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(4, getOther());
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code com.islandturtlewatch.nest.data.NestLocation.NestObstructions}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions, Builder> implements
          // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.NestLocation.NestObstructions)
          com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructionsOrBuilder {
        // Construct using com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional bool seawall_rocks = 1;</code>
         */
        @java.lang.Override
        public boolean hasSeawallRocks() {
          return instance.hasSeawallRocks();
        }
        /**
         * <code>optional bool seawall_rocks = 1;</code>
         */
        @java.lang.Override
        public boolean getSeawallRocks() {
          return instance.getSeawallRocks();
        }
        /**
         * <code>optional bool seawall_rocks = 1;</code>
         */
        public Builder setSeawallRocks(boolean value) {
          copyOnWrite();
          instance.setSeawallRocks(value);
          return this;
        }
        /**
         * <code>optional bool seawall_rocks = 1;</code>
         */
        public Builder clearSeawallRocks() {
          copyOnWrite();
          instance.clearSeawallRocks();
          return this;
        }

        /**
         * <code>optional bool furniture = 2;</code>
         */
        @java.lang.Override
        public boolean hasFurniture() {
          return instance.hasFurniture();
        }
        /**
         * <code>optional bool furniture = 2;</code>
         */
        @java.lang.Override
        public boolean getFurniture() {
          return instance.getFurniture();
        }
        /**
         * <code>optional bool furniture = 2;</code>
         */
        public Builder setFurniture(boolean value) {
          copyOnWrite();
          instance.setFurniture(value);
          return this;
        }
        /**
         * <code>optional bool furniture = 2;</code>
         */
        public Builder clearFurniture() {
          copyOnWrite();
          instance.clearFurniture();
          return this;
        }

        /**
         * <code>optional bool escarpment = 3;</code>
         */
        @java.lang.Override
        public boolean hasEscarpment() {
          return instance.hasEscarpment();
        }
        /**
         * <code>optional bool escarpment = 3;</code>
         */
        @java.lang.Override
        public boolean getEscarpment() {
          return instance.getEscarpment();
        }
        /**
         * <code>optional bool escarpment = 3;</code>
         */
        public Builder setEscarpment(boolean value) {
          copyOnWrite();
          instance.setEscarpment(value);
          return this;
        }
        /**
         * <code>optional bool escarpment = 3;</code>
         */
        public Builder clearEscarpment() {
          copyOnWrite();
          instance.clearEscarpment();
          return this;
        }

        /**
         * <code>optional string other = 4;</code>
         */
        @java.lang.Override
        public boolean hasOther() {
          return instance.hasOther();
        }
        /**
         * <code>optional string other = 4;</code>
         */
        @java.lang.Override
        public java.lang.String getOther() {
          return instance.getOther();
        }
        /**
         * <code>optional string other = 4;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getOtherBytes() {
          return instance.getOtherBytes();
        }
        /**
         * <code>optional string other = 4;</code>
         */
        public Builder setOther(
            java.lang.String value) {
          copyOnWrite();
          instance.setOther(value);
          return this;
        }
        /**
         * <code>optional string other = 4;</code>
         */
        public Builder clearOther() {
          copyOnWrite();
          instance.clearOther();
          return this;
        }
        /**
         * <code>optional string other = 4;</code>
         */
        public Builder setOtherBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setOtherBytes(value);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.NestLocation.NestObstructions)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions other = (com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions) arg1;
            seawallRocks_ = visitor.visitBoolean(
                hasSeawallRocks(), seawallRocks_,
                other.hasSeawallRocks(), other.seawallRocks_);
            furniture_ = visitor.visitBoolean(
                hasFurniture(), furniture_,
                other.hasFurniture(), other.furniture_);
            escarpment_ = visitor.visitBoolean(
                hasEscarpment(), escarpment_,
                other.hasEscarpment(), other.escarpment_);
            other_ = visitor.visitString(
                hasOther(), other_,
                other.hasOther(), other.other_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    bitField0_ |= 0x00000001;
                    seawallRocks_ = input.readBool();
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    furniture_ = input.readBool();
                    break;
                  }
                  case 24: {
                    bitField0_ |= 0x00000004;
                    escarpment_ = input.readBool();
                    break;
                  }
                  case 34: {
                    java.lang.String s = input.readString();
                    bitField0_ |= 0x00000008;
                    other_ = s;
                    break;
                  }
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions> parser = PARSER;
            if (parser == null) {
              synchronized (com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.NestLocation.NestObstructions)
      private static final com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new NestObstructions();
      }

      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<NestObstructions> PARSER;

      public static com.google.protobuf.Parser<NestObstructions> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface TriangulationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.NestLocation.Triangulation)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
       */
      boolean hasNorth();
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
       */
      com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates getNorth();

      /**
       * <code>optional int32 north_ft = 3;</code>
       */
      boolean hasNorthFt();
      /**
       * <code>optional int32 north_ft = 3;</code>
       */
      int getNorthFt();

      /**
       * <code>optional int32 north_in = 4;</code>
       */
      boolean hasNorthIn();
      /**
       * <code>optional int32 north_in = 4;</code>
       */
      int getNorthIn();

      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
       */
      boolean hasSouth();
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
       */
      com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates getSouth();

      /**
       * <code>optional int32 south_ft = 5;</code>
       */
      boolean hasSouthFt();
      /**
       * <code>optional int32 south_ft = 5;</code>
       */
      int getSouthFt();

      /**
       * <code>optional int32 south_in = 6;</code>
       */
      boolean hasSouthIn();
      /**
       * <code>optional int32 south_in = 6;</code>
       */
      int getSouthIn();
    }
    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.NestLocation.Triangulation}
     */
    public  static final class Triangulation extends
        com.google.protobuf.GeneratedMessageLite<
            Triangulation, Triangulation.Builder> implements
        // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.NestLocation.Triangulation)
        TriangulationOrBuilder {
      private Triangulation() {
      }
      private int bitField0_;
      public static final int NORTH_FIELD_NUMBER = 1;
      private com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates north_;
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
       */
      @java.lang.Override
      public boolean hasNorth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates getNorth() {
        return north_ == null ? com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.getDefaultInstance() : north_;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
       */
      private void setNorth(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
        if (value == null) {
          throw new NullPointerException();
        }
        north_ = value;
        bitField0_ |= 0x00000001;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
       */
      private void setNorth(
          com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.Builder builderForValue) {
        north_ = builderForValue.build();
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
       */
      @java.lang.SuppressWarnings({"ReferenceEquality"})
      private void mergeNorth(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (north_ != null &&
            north_ != com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.getDefaultInstance()) {
          north_ =
            com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.newBuilder(north_).mergeFrom(value).buildPartial();
        } else {
          north_ = value;
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
       */
      private void clearNorth() {  north_ = null;
        bitField0_ = (bitField0_ & ~0x00000001);
      }

      public static final int NORTH_FT_FIELD_NUMBER = 3;
      private int northFt_;
      /**
       * <code>optional int32 north_ft = 3;</code>
       */
      @java.lang.Override
      public boolean hasNorthFt() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 north_ft = 3;</code>
       */
      @java.lang.Override
      public int getNorthFt() {
        return northFt_;
      }
      /**
       * <code>optional int32 north_ft = 3;</code>
       */
      private void setNorthFt(int value) {
        bitField0_ |= 0x00000002;
        northFt_ = value;
      }
      /**
       * <code>optional int32 north_ft = 3;</code>
       */
      private void clearNorthFt() {
        bitField0_ = (bitField0_ & ~0x00000002);
        northFt_ = 0;
      }

      public static final int NORTH_IN_FIELD_NUMBER = 4;
      private int northIn_;
      /**
       * <code>optional int32 north_in = 4;</code>
       */
      @java.lang.Override
      public boolean hasNorthIn() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 north_in = 4;</code>
       */
      @java.lang.Override
      public int getNorthIn() {
        return northIn_;
      }
      /**
       * <code>optional int32 north_in = 4;</code>
       */
      private void setNorthIn(int value) {
        bitField0_ |= 0x00000004;
        northIn_ = value;
      }
      /**
       * <code>optional int32 north_in = 4;</code>
       */
      private void clearNorthIn() {
        bitField0_ = (bitField0_ & ~0x00000004);
        northIn_ = 0;
      }

      public static final int SOUTH_FIELD_NUMBER = 2;
      private com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates south_;
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
       */
      @java.lang.Override
      public boolean hasSouth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates getSouth() {
        return south_ == null ? com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.getDefaultInstance() : south_;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
       */
      private void setSouth(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
        if (value == null) {
          throw new NullPointerException();
        }
        south_ = value;
        bitField0_ |= 0x00000008;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
       */
      private void setSouth(
          com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.Builder builderForValue) {
        south_ = builderForValue.build();
        bitField0_ |= 0x00000008;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
       */
      @java.lang.SuppressWarnings({"ReferenceEquality"})
      private void mergeSouth(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (south_ != null &&
            south_ != com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.getDefaultInstance()) {
          south_ =
            com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.newBuilder(south_).mergeFrom(value).buildPartial();
        } else {
          south_ = value;
        }
        bitField0_ |= 0x00000008;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
       */
      private void clearSouth() {  south_ = null;
        bitField0_ = (bitField0_ & ~0x00000008);
      }

      public static final int SOUTH_FT_FIELD_NUMBER = 5;
      private int southFt_;
      /**
       * <code>optional int32 south_ft = 5;</code>
       */
      @java.lang.Override
      public boolean hasSouthFt() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 south_ft = 5;</code>
       */
      @java.lang.Override
      public int getSouthFt() {
        return southFt_;
      }
      /**
       * <code>optional int32 south_ft = 5;</code>
       */
      private void setSouthFt(int value) {
        bitField0_ |= 0x00000010;
        southFt_ = value;
      }
      /**
       * <code>optional int32 south_ft = 5;</code>
       */
      private void clearSouthFt() {
        bitField0_ = (bitField0_ & ~0x00000010);
        southFt_ = 0;
      }

      public static final int SOUTH_IN_FIELD_NUMBER = 6;
      private int southIn_;
      /**
       * <code>optional int32 south_in = 6;</code>
       */
      @java.lang.Override
      public boolean hasSouthIn() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 south_in = 6;</code>
       */
      @java.lang.Override
      public int getSouthIn() {
        return southIn_;
      }
      /**
       * <code>optional int32 south_in = 6;</code>
       */
      private void setSouthIn(int value) {
        bitField0_ |= 0x00000020;
        southIn_ = value;
      }
      /**
       * <code>optional int32 south_in = 6;</code>
       */
      private void clearSouthIn() {
        bitField0_ = (bitField0_ & ~0x00000020);
        southIn_ = 0;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, getNorth());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(2, getSouth());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(3, northFt_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(4, northIn_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, southFt_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, southIn_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getNorth());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getSouth());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, northFt_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, northIn_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, southFt_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, southIn_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code com.islandturtlewatch.nest.data.NestLocation.Triangulation}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation, Builder> implements
          // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.NestLocation.Triangulation)
          com.islandturtlewatch.nest.data.ReportProto.NestLocation.TriangulationOrBuilder {
        // Construct using com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
         */
        @java.lang.Override
        public boolean hasNorth() {
          return instance.hasNorth();
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
         */
        @java.lang.Override
        public com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates getNorth() {
          return instance.getNorth();
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
         */
        public Builder setNorth(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
          copyOnWrite();
          instance.setNorth(value);
          return this;
          }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
         */
        public Builder setNorth(
            com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.Builder builderForValue) {
          copyOnWrite();
          instance.setNorth(builderForValue);
          return this;
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
         */
        public Builder mergeNorth(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
          copyOnWrite();
          instance.mergeNorth(value);
          return this;
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates north = 1;</code>
         */
        public Builder clearNorth() {  copyOnWrite();
          instance.clearNorth();
          return this;
        }

        /**
         * <code>optional int32 north_ft = 3;</code>
         */
        @java.lang.Override
        public boolean hasNorthFt() {
          return instance.hasNorthFt();
        }
        /**
         * <code>optional int32 north_ft = 3;</code>
         */
        @java.lang.Override
        public int getNorthFt() {
          return instance.getNorthFt();
        }
        /**
         * <code>optional int32 north_ft = 3;</code>
         */
        public Builder setNorthFt(int value) {
          copyOnWrite();
          instance.setNorthFt(value);
          return this;
        }
        /**
         * <code>optional int32 north_ft = 3;</code>
         */
        public Builder clearNorthFt() {
          copyOnWrite();
          instance.clearNorthFt();
          return this;
        }

        /**
         * <code>optional int32 north_in = 4;</code>
         */
        @java.lang.Override
        public boolean hasNorthIn() {
          return instance.hasNorthIn();
        }
        /**
         * <code>optional int32 north_in = 4;</code>
         */
        @java.lang.Override
        public int getNorthIn() {
          return instance.getNorthIn();
        }
        /**
         * <code>optional int32 north_in = 4;</code>
         */
        public Builder setNorthIn(int value) {
          copyOnWrite();
          instance.setNorthIn(value);
          return this;
        }
        /**
         * <code>optional int32 north_in = 4;</code>
         */
        public Builder clearNorthIn() {
          copyOnWrite();
          instance.clearNorthIn();
          return this;
        }

        /**
         * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
         */
        @java.lang.Override
        public boolean hasSouth() {
          return instance.hasSouth();
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
         */
        @java.lang.Override
        public com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates getSouth() {
          return instance.getSouth();
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
         */
        public Builder setSouth(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
          copyOnWrite();
          instance.setSouth(value);
          return this;
          }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
         */
        public Builder setSouth(
            com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.Builder builderForValue) {
          copyOnWrite();
          instance.setSouth(builderForValue);
          return this;
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
         */
        public Builder mergeSouth(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
          copyOnWrite();
          instance.mergeSouth(value);
          return this;
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates south = 2;</code>
         */
        public Builder clearSouth() {  copyOnWrite();
          instance.clearSouth();
          return this;
        }

        /**
         * <code>optional int32 south_ft = 5;</code>
         */
        @java.lang.Override
        public boolean hasSouthFt() {
          return instance.hasSouthFt();
        }
        /**
         * <code>optional int32 south_ft = 5;</code>
         */
        @java.lang.Override
        public int getSouthFt() {
          return instance.getSouthFt();
        }
        /**
         * <code>optional int32 south_ft = 5;</code>
         */
        public Builder setSouthFt(int value) {
          copyOnWrite();
          instance.setSouthFt(value);
          return this;
        }
        /**
         * <code>optional int32 south_ft = 5;</code>
         */
        public Builder clearSouthFt() {
          copyOnWrite();
          instance.clearSouthFt();
          return this;
        }

        /**
         * <code>optional int32 south_in = 6;</code>
         */
        @java.lang.Override
        public boolean hasSouthIn() {
          return instance.hasSouthIn();
        }
        /**
         * <code>optional int32 south_in = 6;</code>
         */
        @java.lang.Override
        public int getSouthIn() {
          return instance.getSouthIn();
        }
        /**
         * <code>optional int32 south_in = 6;</code>
         */
        public Builder setSouthIn(int value) {
          copyOnWrite();
          instance.setSouthIn(value);
          return this;
        }
        /**
         * <code>optional int32 south_in = 6;</code>
         */
        public Builder clearSouthIn() {
          copyOnWrite();
          instance.clearSouthIn();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.NestLocation.Triangulation)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation other = (com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation) arg1;
            north_ = visitor.visitMessage(north_, other.north_);
            northFt_ = visitor.visitInt(
                hasNorthFt(), northFt_,
                other.hasNorthFt(), other.northFt_);
            northIn_ = visitor.visitInt(
                hasNorthIn(), northIn_,
                other.hasNorthIn(), other.northIn_);
            south_ = visitor.visitMessage(south_, other.south_);
            southFt_ = visitor.visitInt(
                hasSouthFt(), southFt_,
                other.hasSouthFt(), other.southFt_);
            southIn_ = visitor.visitInt(
                hasSouthIn(), southIn_,
                other.hasSouthIn(), other.southIn_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 10: {
                    com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.Builder subBuilder = null;
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                      subBuilder = north_.toBuilder();
                    }
                    north_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.parser(), extensionRegistry);
                    if (subBuilder != null) {
                      subBuilder.mergeFrom(north_);
                      north_ = subBuilder.buildPartial();
                    }
                    bitField0_ |= 0x00000001;
                    break;
                  }
                  case 18: {
                    com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.Builder subBuilder = null;
                    if (((bitField0_ & 0x00000008) == 0x00000008)) {
                      subBuilder = south_.toBuilder();
                    }
                    south_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.parser(), extensionRegistry);
                    if (subBuilder != null) {
                      subBuilder.mergeFrom(south_);
                      south_ = subBuilder.buildPartial();
                    }
                    bitField0_ |= 0x00000008;
                    break;
                  }
                  case 24: {
                    bitField0_ |= 0x00000002;
                    northFt_ = input.readInt32();
                    break;
                  }
                  case 32: {
                    bitField0_ |= 0x00000004;
                    northIn_ = input.readInt32();
                    break;
                  }
                  case 40: {
                    bitField0_ |= 0x00000010;
                    southFt_ = input.readInt32();
                    break;
                  }
                  case 48: {
                    bitField0_ |= 0x00000020;
                    southIn_ = input.readInt32();
                    break;
                  }
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation> parser = PARSER;
            if (parser == null) {
              synchronized (com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.NestLocation.Triangulation)
      private static final com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new Triangulation();
      }

      public static com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Triangulation> PARSER;

      public static com.google.protobuf.Parser<Triangulation> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int STREET_ADDRESS_FIELD_NUMBER = 1;
    private java.lang.String streetAddress_;
    /**
     * <code>optional string street_address = 1;</code>
     */
    @java.lang.Override
    public boolean hasStreetAddress() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string street_address = 1;</code>
     */
    @java.lang.Override
    public java.lang.String getStreetAddress() {
      return streetAddress_;
    }
    /**
     * <code>optional string street_address = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStreetAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(streetAddress_);
    }
    /**
     * <code>optional string street_address = 1;</code>
     */
    private void setStreetAddress(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      streetAddress_ = value;
    }
    /**
     * <code>optional string street_address = 1;</code>
     */
    private void clearStreetAddress() {
      bitField0_ = (bitField0_ & ~0x00000001);
      streetAddress_ = getDefaultInstance().getStreetAddress();
    }
    /**
     * <code>optional string street_address = 1;</code>
     */
    private void setStreetAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      streetAddress_ = value.toStringUtf8();
    }

    public static final int SECTION_FIELD_NUMBER = 2;
    private int section_;
    /**
     * <code>optional int32 section = 2;</code>
     */
    @java.lang.Override
    public boolean hasSection() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 section = 2;</code>
     */
    @java.lang.Override
    public int getSection() {
      return section_;
    }
    /**
     * <code>optional int32 section = 2;</code>
     */
    private void setSection(int value) {
      bitField0_ |= 0x00000002;
      section_ = value;
    }
    /**
     * <code>optional int32 section = 2;</code>
     */
    private void clearSection() {
      bitField0_ = (bitField0_ & ~0x00000002);
      section_ = 0;
    }

    public static final int DETAILS_FIELD_NUMBER = 3;
    private java.lang.String details_;
    /**
     * <code>optional string details = 3;</code>
     */
    @java.lang.Override
    public boolean hasDetails() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string details = 3;</code>
     */
    @java.lang.Override
    public java.lang.String getDetails() {
      return details_;
    }
    /**
     * <code>optional string details = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDetailsBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(details_);
    }
    /**
     * <code>optional string details = 3;</code>
     */
    private void setDetails(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      details_ = value;
    }
    /**
     * <code>optional string details = 3;</code>
     */
    private void clearDetails() {
      bitField0_ = (bitField0_ & ~0x00000004);
      details_ = getDefaultInstance().getDetails();
    }
    /**
     * <code>optional string details = 3;</code>
     */
    private void setDetailsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      details_ = value.toStringUtf8();
    }

    public static final int CITY_FIELD_NUMBER = 4;
    private int city_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.City city = 4;</code>
     */
    @java.lang.Override
    public boolean hasCity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.City city = 4;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestLocation.City getCity() {
      com.islandturtlewatch.nest.data.ReportProto.NestLocation.City result = com.islandturtlewatch.nest.data.ReportProto.NestLocation.City.forNumber(city_);
      return result == null ? com.islandturtlewatch.nest.data.ReportProto.NestLocation.City.UNSET_CITY : result;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.City city = 4;</code>
     */
    private void setCity(com.islandturtlewatch.nest.data.ReportProto.NestLocation.City value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      city_ = value.getNumber();
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.City city = 4;</code>
     */
    private void clearCity() {
      bitField0_ = (bitField0_ & ~0x00000008);
      city_ = 1;
    }

    public static final int NEST_WITHIN_PROJECT_AREA_FIELD_NUMBER = 15;
    private boolean nestWithinProjectArea_;
    /**
     * <code>optional bool nest_within_project_area = 15;</code>
     */
    @java.lang.Override
    public boolean hasNestWithinProjectArea() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool nest_within_project_area = 15;</code>
     */
    @java.lang.Override
    public boolean getNestWithinProjectArea() {
      return nestWithinProjectArea_;
    }
    /**
     * <code>optional bool nest_within_project_area = 15;</code>
     */
    private void setNestWithinProjectArea(boolean value) {
      bitField0_ |= 0x00000010;
      nestWithinProjectArea_ = value;
    }
    /**
     * <code>optional bool nest_within_project_area = 15;</code>
     */
    private void clearNestWithinProjectArea() {
      bitField0_ = (bitField0_ & ~0x00000010);
      nestWithinProjectArea_ = false;
    }

    public static final int IN_CORTEZ_GROIN_REPLACEMENT_AREA_FIELD_NUMBER = 14;
    private boolean inCortezGroinReplacementArea_;
    /**
     * <code>optional bool in_cortez_groin_replacement_area = 14;</code>
     */
    @java.lang.Override
    public boolean hasInCortezGroinReplacementArea() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool in_cortez_groin_replacement_area = 14;</code>
     */
    @java.lang.Override
    public boolean getInCortezGroinReplacementArea() {
      return inCortezGroinReplacementArea_;
    }
    /**
     * <code>optional bool in_cortez_groin_replacement_area = 14;</code>
     */
    private void setInCortezGroinReplacementArea(boolean value) {
      bitField0_ |= 0x00000020;
      inCortezGroinReplacementArea_ = value;
    }
    /**
     * <code>optional bool in_cortez_groin_replacement_area = 14;</code>
     */
    private void clearInCortezGroinReplacementArea() {
      bitField0_ = (bitField0_ & ~0x00000020);
      inCortezGroinReplacementArea_ = false;
    }

    public static final int PLACEMENT_FIELD_NUMBER = 5;
    private int placement_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Placement placement = 5;</code>
     */
    @java.lang.Override
    public boolean hasPlacement() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Placement placement = 5;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestLocation.Placement getPlacement() {
      com.islandturtlewatch.nest.data.ReportProto.NestLocation.Placement result = com.islandturtlewatch.nest.data.ReportProto.NestLocation.Placement.forNumber(placement_);
      return result == null ? com.islandturtlewatch.nest.data.ReportProto.NestLocation.Placement.UNSET_PLACEMENT : result;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Placement placement = 5;</code>
     */
    private void setPlacement(com.islandturtlewatch.nest.data.ReportProto.NestLocation.Placement value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      placement_ = value.getNumber();
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Placement placement = 5;</code>
     */
    private void clearPlacement() {
      bitField0_ = (bitField0_ & ~0x00000040);
      placement_ = 1;
    }

    public static final int OBSTRUCTIONS_FIELD_NUMBER = 6;
    private com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions obstructions_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
     */
    @java.lang.Override
    public boolean hasObstructions() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions getObstructions() {
      return obstructions_ == null ? com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions.getDefaultInstance() : obstructions_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
     */
    private void setObstructions(com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      obstructions_ = value;
      bitField0_ |= 0x00000080;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
     */
    private void setObstructions(
        com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions.Builder builderForValue) {
      obstructions_ = builderForValue.build();
      bitField0_ |= 0x00000080;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeObstructions(com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (obstructions_ != null &&
          obstructions_ != com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions.getDefaultInstance()) {
        obstructions_ =
          com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions.newBuilder(obstructions_).mergeFrom(value).buildPartial();
      } else {
        obstructions_ = value;
      }
      bitField0_ |= 0x00000080;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
     */
    private void clearObstructions() {  obstructions_ = null;
      bitField0_ = (bitField0_ & ~0x00000080);
    }

    public static final int APEX_TO_BARRIER_FT_FIELD_NUMBER = 7;
    private int apexToBarrierFt_;
    /**
     * <code>optional int32 apex_to_barrier_ft = 7;</code>
     */
    @java.lang.Override
    public boolean hasApexToBarrierFt() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 apex_to_barrier_ft = 7;</code>
     */
    @java.lang.Override
    public int getApexToBarrierFt() {
      return apexToBarrierFt_;
    }
    /**
     * <code>optional int32 apex_to_barrier_ft = 7;</code>
     */
    private void setApexToBarrierFt(int value) {
      bitField0_ |= 0x00000100;
      apexToBarrierFt_ = value;
    }
    /**
     * <code>optional int32 apex_to_barrier_ft = 7;</code>
     */
    private void clearApexToBarrierFt() {
      bitField0_ = (bitField0_ & ~0x00000100);
      apexToBarrierFt_ = 0;
    }

    public static final int APEX_TO_BARRIER_IN_FIELD_NUMBER = 8;
    private int apexToBarrierIn_;
    /**
     * <code>optional int32 apex_to_barrier_in = 8;</code>
     */
    @java.lang.Override
    public boolean hasApexToBarrierIn() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 apex_to_barrier_in = 8;</code>
     */
    @java.lang.Override
    public int getApexToBarrierIn() {
      return apexToBarrierIn_;
    }
    /**
     * <code>optional int32 apex_to_barrier_in = 8;</code>
     */
    private void setApexToBarrierIn(int value) {
      bitField0_ |= 0x00000200;
      apexToBarrierIn_ = value;
    }
    /**
     * <code>optional int32 apex_to_barrier_in = 8;</code>
     */
    private void clearApexToBarrierIn() {
      bitField0_ = (bitField0_ & ~0x00000200);
      apexToBarrierIn_ = 0;
    }

    public static final int WATER_TO_APEX_FT_FIELD_NUMBER = 9;
    private int waterToApexFt_;
    /**
     * <code>optional int32 water_to_apex_ft = 9;</code>
     */
    @java.lang.Override
    public boolean hasWaterToApexFt() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 water_to_apex_ft = 9;</code>
     */
    @java.lang.Override
    public int getWaterToApexFt() {
      return waterToApexFt_;
    }
    /**
     * <code>optional int32 water_to_apex_ft = 9;</code>
     */
    private void setWaterToApexFt(int value) {
      bitField0_ |= 0x00000400;
      waterToApexFt_ = value;
    }
    /**
     * <code>optional int32 water_to_apex_ft = 9;</code>
     */
    private void clearWaterToApexFt() {
      bitField0_ = (bitField0_ & ~0x00000400);
      waterToApexFt_ = 0;
    }

    public static final int WATER_TO_APEX_IN_FIELD_NUMBER = 10;
    private int waterToApexIn_;
    /**
     * <code>optional int32 water_to_apex_in = 10;</code>
     */
    @java.lang.Override
    public boolean hasWaterToApexIn() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 water_to_apex_in = 10;</code>
     */
    @java.lang.Override
    public int getWaterToApexIn() {
      return waterToApexIn_;
    }
    /**
     * <code>optional int32 water_to_apex_in = 10;</code>
     */
    private void setWaterToApexIn(int value) {
      bitField0_ |= 0x00000800;
      waterToApexIn_ = value;
    }
    /**
     * <code>optional int32 water_to_apex_in = 10;</code>
     */
    private void clearWaterToApexIn() {
      bitField0_ = (bitField0_ & ~0x00000800);
      waterToApexIn_ = 0;
    }

    public static final int COORDINATES_FIELD_NUMBER = 11;
    private com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates coordinates_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
     */
    @java.lang.Override
    public boolean hasCoordinates() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates getCoordinates() {
      return coordinates_ == null ? com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.getDefaultInstance() : coordinates_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
     */
    private void setCoordinates(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
      if (value == null) {
        throw new NullPointerException();
      }
      coordinates_ = value;
      bitField0_ |= 0x00001000;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
     */
    private void setCoordinates(
        com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.Builder builderForValue) {
      coordinates_ = builderForValue.build();
      bitField0_ |= 0x00001000;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCoordinates(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (coordinates_ != null &&
          coordinates_ != com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.getDefaultInstance()) {
        coordinates_ =
          com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.newBuilder(coordinates_).mergeFrom(value).buildPartial();
      } else {
        coordinates_ = value;
      }
      bitField0_ |= 0x00001000;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
     */
    private void clearCoordinates() {  coordinates_ = null;
      bitField0_ = (bitField0_ & ~0x00001000);
    }

    public static final int TRIANGULATION_FIELD_NUMBER = 12;
    private com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation triangulation_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
     */
    @java.lang.Override
    public boolean hasTriangulation() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation getTriangulation() {
      return triangulation_ == null ? com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation.getDefaultInstance() : triangulation_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
     */
    private void setTriangulation(com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      triangulation_ = value;
      bitField0_ |= 0x00002000;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
     */
    private void setTriangulation(
        com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation.Builder builderForValue) {
      triangulation_ = builderForValue.build();
      bitField0_ |= 0x00002000;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeTriangulation(com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (triangulation_ != null &&
          triangulation_ != com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation.getDefaultInstance()) {
        triangulation_ =
          com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation.newBuilder(triangulation_).mergeFrom(value).buildPartial();
      } else {
        triangulation_ = value;
      }
      bitField0_ |= 0x00002000;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
     */
    private void clearTriangulation() {  triangulation_ = null;
      bitField0_ = (bitField0_ & ~0x00002000);
    }

    public static final int ESCARPMENT_OVER_18_INCHES_FIELD_NUMBER = 13;
    private boolean escarpmentOver18Inches_;
    /**
     * <pre>
     * Next ID=16
     * </pre>
     *
     * <code>optional bool escarpment_over_18_inches = 13;</code>
     */
    @java.lang.Override
    public boolean hasEscarpmentOver18Inches() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <pre>
     * Next ID=16
     * </pre>
     *
     * <code>optional bool escarpment_over_18_inches = 13;</code>
     */
    @java.lang.Override
    public boolean getEscarpmentOver18Inches() {
      return escarpmentOver18Inches_;
    }
    /**
     * <pre>
     * Next ID=16
     * </pre>
     *
     * <code>optional bool escarpment_over_18_inches = 13;</code>
     */
    private void setEscarpmentOver18Inches(boolean value) {
      bitField0_ |= 0x00004000;
      escarpmentOver18Inches_ = value;
    }
    /**
     * <pre>
     * Next ID=16
     * </pre>
     *
     * <code>optional bool escarpment_over_18_inches = 13;</code>
     */
    private void clearEscarpmentOver18Inches() {
      bitField0_ = (bitField0_ & ~0x00004000);
      escarpmentOver18Inches_ = false;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getStreetAddress());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, section_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getDetails());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, city_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(5, placement_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(6, getObstructions());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(7, apexToBarrierFt_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(8, apexToBarrierIn_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(9, waterToApexFt_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(10, waterToApexIn_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(11, getCoordinates());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(12, getTriangulation());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(13, escarpmentOver18Inches_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(14, inCortezGroinReplacementArea_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(15, nestWithinProjectArea_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getStreetAddress());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, section_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getDetails());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, city_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, placement_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getObstructions());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, apexToBarrierFt_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, apexToBarrierIn_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, waterToApexFt_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, waterToApexIn_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getCoordinates());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getTriangulation());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, escarpmentOver18Inches_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, inCortezGroinReplacementArea_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, nestWithinProjectArea_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.islandturtlewatch.nest.data.ReportProto.NestLocation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestLocation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestLocation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestLocation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestLocation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestLocation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestLocation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestLocation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestLocation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestLocation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestLocation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.NestLocation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.NestLocation prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.NestLocation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.islandturtlewatch.nest.data.ReportProto.NestLocation, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.NestLocation)
        com.islandturtlewatch.nest.data.ReportProto.NestLocationOrBuilder {
      // Construct using com.islandturtlewatch.nest.data.ReportProto.NestLocation.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string street_address = 1;</code>
       */
      @java.lang.Override
      public boolean hasStreetAddress() {
        return instance.hasStreetAddress();
      }
      /**
       * <code>optional string street_address = 1;</code>
       */
      @java.lang.Override
      public java.lang.String getStreetAddress() {
        return instance.getStreetAddress();
      }
      /**
       * <code>optional string street_address = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStreetAddressBytes() {
        return instance.getStreetAddressBytes();
      }
      /**
       * <code>optional string street_address = 1;</code>
       */
      public Builder setStreetAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setStreetAddress(value);
        return this;
      }
      /**
       * <code>optional string street_address = 1;</code>
       */
      public Builder clearStreetAddress() {
        copyOnWrite();
        instance.clearStreetAddress();
        return this;
      }
      /**
       * <code>optional string street_address = 1;</code>
       */
      public Builder setStreetAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStreetAddressBytes(value);
        return this;
      }

      /**
       * <code>optional int32 section = 2;</code>
       */
      @java.lang.Override
      public boolean hasSection() {
        return instance.hasSection();
      }
      /**
       * <code>optional int32 section = 2;</code>
       */
      @java.lang.Override
      public int getSection() {
        return instance.getSection();
      }
      /**
       * <code>optional int32 section = 2;</code>
       */
      public Builder setSection(int value) {
        copyOnWrite();
        instance.setSection(value);
        return this;
      }
      /**
       * <code>optional int32 section = 2;</code>
       */
      public Builder clearSection() {
        copyOnWrite();
        instance.clearSection();
        return this;
      }

      /**
       * <code>optional string details = 3;</code>
       */
      @java.lang.Override
      public boolean hasDetails() {
        return instance.hasDetails();
      }
      /**
       * <code>optional string details = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getDetails() {
        return instance.getDetails();
      }
      /**
       * <code>optional string details = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDetailsBytes() {
        return instance.getDetailsBytes();
      }
      /**
       * <code>optional string details = 3;</code>
       */
      public Builder setDetails(
          java.lang.String value) {
        copyOnWrite();
        instance.setDetails(value);
        return this;
      }
      /**
       * <code>optional string details = 3;</code>
       */
      public Builder clearDetails() {
        copyOnWrite();
        instance.clearDetails();
        return this;
      }
      /**
       * <code>optional string details = 3;</code>
       */
      public Builder setDetailsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDetailsBytes(value);
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.City city = 4;</code>
       */
      @java.lang.Override
      public boolean hasCity() {
        return instance.hasCity();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.City city = 4;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestLocation.City getCity() {
        return instance.getCity();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.City city = 4;</code>
       */
      public Builder setCity(com.islandturtlewatch.nest.data.ReportProto.NestLocation.City value) {
        copyOnWrite();
        instance.setCity(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.City city = 4;</code>
       */
      public Builder clearCity() {
        copyOnWrite();
        instance.clearCity();
        return this;
      }

      /**
       * <code>optional bool nest_within_project_area = 15;</code>
       */
      @java.lang.Override
      public boolean hasNestWithinProjectArea() {
        return instance.hasNestWithinProjectArea();
      }
      /**
       * <code>optional bool nest_within_project_area = 15;</code>
       */
      @java.lang.Override
      public boolean getNestWithinProjectArea() {
        return instance.getNestWithinProjectArea();
      }
      /**
       * <code>optional bool nest_within_project_area = 15;</code>
       */
      public Builder setNestWithinProjectArea(boolean value) {
        copyOnWrite();
        instance.setNestWithinProjectArea(value);
        return this;
      }
      /**
       * <code>optional bool nest_within_project_area = 15;</code>
       */
      public Builder clearNestWithinProjectArea() {
        copyOnWrite();
        instance.clearNestWithinProjectArea();
        return this;
      }

      /**
       * <code>optional bool in_cortez_groin_replacement_area = 14;</code>
       */
      @java.lang.Override
      public boolean hasInCortezGroinReplacementArea() {
        return instance.hasInCortezGroinReplacementArea();
      }
      /**
       * <code>optional bool in_cortez_groin_replacement_area = 14;</code>
       */
      @java.lang.Override
      public boolean getInCortezGroinReplacementArea() {
        return instance.getInCortezGroinReplacementArea();
      }
      /**
       * <code>optional bool in_cortez_groin_replacement_area = 14;</code>
       */
      public Builder setInCortezGroinReplacementArea(boolean value) {
        copyOnWrite();
        instance.setInCortezGroinReplacementArea(value);
        return this;
      }
      /**
       * <code>optional bool in_cortez_groin_replacement_area = 14;</code>
       */
      public Builder clearInCortezGroinReplacementArea() {
        copyOnWrite();
        instance.clearInCortezGroinReplacementArea();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Placement placement = 5;</code>
       */
      @java.lang.Override
      public boolean hasPlacement() {
        return instance.hasPlacement();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Placement placement = 5;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestLocation.Placement getPlacement() {
        return instance.getPlacement();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Placement placement = 5;</code>
       */
      public Builder setPlacement(com.islandturtlewatch.nest.data.ReportProto.NestLocation.Placement value) {
        copyOnWrite();
        instance.setPlacement(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Placement placement = 5;</code>
       */
      public Builder clearPlacement() {
        copyOnWrite();
        instance.clearPlacement();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
       */
      @java.lang.Override
      public boolean hasObstructions() {
        return instance.hasObstructions();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions getObstructions() {
        return instance.getObstructions();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
       */
      public Builder setObstructions(com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions value) {
        copyOnWrite();
        instance.setObstructions(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
       */
      public Builder setObstructions(
          com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions.Builder builderForValue) {
        copyOnWrite();
        instance.setObstructions(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
       */
      public Builder mergeObstructions(com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions value) {
        copyOnWrite();
        instance.mergeObstructions(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.NestObstructions obstructions = 6;</code>
       */
      public Builder clearObstructions() {  copyOnWrite();
        instance.clearObstructions();
        return this;
      }

      /**
       * <code>optional int32 apex_to_barrier_ft = 7;</code>
       */
      @java.lang.Override
      public boolean hasApexToBarrierFt() {
        return instance.hasApexToBarrierFt();
      }
      /**
       * <code>optional int32 apex_to_barrier_ft = 7;</code>
       */
      @java.lang.Override
      public int getApexToBarrierFt() {
        return instance.getApexToBarrierFt();
      }
      /**
       * <code>optional int32 apex_to_barrier_ft = 7;</code>
       */
      public Builder setApexToBarrierFt(int value) {
        copyOnWrite();
        instance.setApexToBarrierFt(value);
        return this;
      }
      /**
       * <code>optional int32 apex_to_barrier_ft = 7;</code>
       */
      public Builder clearApexToBarrierFt() {
        copyOnWrite();
        instance.clearApexToBarrierFt();
        return this;
      }

      /**
       * <code>optional int32 apex_to_barrier_in = 8;</code>
       */
      @java.lang.Override
      public boolean hasApexToBarrierIn() {
        return instance.hasApexToBarrierIn();
      }
      /**
       * <code>optional int32 apex_to_barrier_in = 8;</code>
       */
      @java.lang.Override
      public int getApexToBarrierIn() {
        return instance.getApexToBarrierIn();
      }
      /**
       * <code>optional int32 apex_to_barrier_in = 8;</code>
       */
      public Builder setApexToBarrierIn(int value) {
        copyOnWrite();
        instance.setApexToBarrierIn(value);
        return this;
      }
      /**
       * <code>optional int32 apex_to_barrier_in = 8;</code>
       */
      public Builder clearApexToBarrierIn() {
        copyOnWrite();
        instance.clearApexToBarrierIn();
        return this;
      }

      /**
       * <code>optional int32 water_to_apex_ft = 9;</code>
       */
      @java.lang.Override
      public boolean hasWaterToApexFt() {
        return instance.hasWaterToApexFt();
      }
      /**
       * <code>optional int32 water_to_apex_ft = 9;</code>
       */
      @java.lang.Override
      public int getWaterToApexFt() {
        return instance.getWaterToApexFt();
      }
      /**
       * <code>optional int32 water_to_apex_ft = 9;</code>
       */
      public Builder setWaterToApexFt(int value) {
        copyOnWrite();
        instance.setWaterToApexFt(value);
        return this;
      }
      /**
       * <code>optional int32 water_to_apex_ft = 9;</code>
       */
      public Builder clearWaterToApexFt() {
        copyOnWrite();
        instance.clearWaterToApexFt();
        return this;
      }

      /**
       * <code>optional int32 water_to_apex_in = 10;</code>
       */
      @java.lang.Override
      public boolean hasWaterToApexIn() {
        return instance.hasWaterToApexIn();
      }
      /**
       * <code>optional int32 water_to_apex_in = 10;</code>
       */
      @java.lang.Override
      public int getWaterToApexIn() {
        return instance.getWaterToApexIn();
      }
      /**
       * <code>optional int32 water_to_apex_in = 10;</code>
       */
      public Builder setWaterToApexIn(int value) {
        copyOnWrite();
        instance.setWaterToApexIn(value);
        return this;
      }
      /**
       * <code>optional int32 water_to_apex_in = 10;</code>
       */
      public Builder clearWaterToApexIn() {
        copyOnWrite();
        instance.clearWaterToApexIn();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
       */
      @java.lang.Override
      public boolean hasCoordinates() {
        return instance.hasCoordinates();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates getCoordinates() {
        return instance.getCoordinates();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
       */
      public Builder setCoordinates(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
        copyOnWrite();
        instance.setCoordinates(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
       */
      public Builder setCoordinates(
          com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.Builder builderForValue) {
        copyOnWrite();
        instance.setCoordinates(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
       */
      public Builder mergeCoordinates(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
        copyOnWrite();
        instance.mergeCoordinates(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 11;</code>
       */
      public Builder clearCoordinates() {  copyOnWrite();
        instance.clearCoordinates();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
       */
      @java.lang.Override
      public boolean hasTriangulation() {
        return instance.hasTriangulation();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation getTriangulation() {
        return instance.getTriangulation();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
       */
      public Builder setTriangulation(com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation value) {
        copyOnWrite();
        instance.setTriangulation(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
       */
      public Builder setTriangulation(
          com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation.Builder builderForValue) {
        copyOnWrite();
        instance.setTriangulation(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
       */
      public Builder mergeTriangulation(com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation value) {
        copyOnWrite();
        instance.mergeTriangulation(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.NestLocation.Triangulation triangulation = 12;</code>
       */
      public Builder clearTriangulation() {  copyOnWrite();
        instance.clearTriangulation();
        return this;
      }

      /**
       * <pre>
       * Next ID=16
       * </pre>
       *
       * <code>optional bool escarpment_over_18_inches = 13;</code>
       */
      @java.lang.Override
      public boolean hasEscarpmentOver18Inches() {
        return instance.hasEscarpmentOver18Inches();
      }
      /**
       * <pre>
       * Next ID=16
       * </pre>
       *
       * <code>optional bool escarpment_over_18_inches = 13;</code>
       */
      @java.lang.Override
      public boolean getEscarpmentOver18Inches() {
        return instance.getEscarpmentOver18Inches();
      }
      /**
       * <pre>
       * Next ID=16
       * </pre>
       *
       * <code>optional bool escarpment_over_18_inches = 13;</code>
       */
      public Builder setEscarpmentOver18Inches(boolean value) {
        copyOnWrite();
        instance.setEscarpmentOver18Inches(value);
        return this;
      }
      /**
       * <pre>
       * Next ID=16
       * </pre>
       *
       * <code>optional bool escarpment_over_18_inches = 13;</code>
       */
      public Builder clearEscarpmentOver18Inches() {
        copyOnWrite();
        instance.clearEscarpmentOver18Inches();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.NestLocation)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.islandturtlewatch.nest.data.ReportProto.NestLocation();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.islandturtlewatch.nest.data.ReportProto.NestLocation other = (com.islandturtlewatch.nest.data.ReportProto.NestLocation) arg1;
          streetAddress_ = visitor.visitString(
              hasStreetAddress(), streetAddress_,
              other.hasStreetAddress(), other.streetAddress_);
          section_ = visitor.visitInt(
              hasSection(), section_,
              other.hasSection(), other.section_);
          details_ = visitor.visitString(
              hasDetails(), details_,
              other.hasDetails(), other.details_);
          city_ = visitor.visitInt(hasCity(), city_,
              other.hasCity(), other.city_);
          nestWithinProjectArea_ = visitor.visitBoolean(
              hasNestWithinProjectArea(), nestWithinProjectArea_,
              other.hasNestWithinProjectArea(), other.nestWithinProjectArea_);
          inCortezGroinReplacementArea_ = visitor.visitBoolean(
              hasInCortezGroinReplacementArea(), inCortezGroinReplacementArea_,
              other.hasInCortezGroinReplacementArea(), other.inCortezGroinReplacementArea_);
          placement_ = visitor.visitInt(hasPlacement(), placement_,
              other.hasPlacement(), other.placement_);
          obstructions_ = visitor.visitMessage(obstructions_, other.obstructions_);
          apexToBarrierFt_ = visitor.visitInt(
              hasApexToBarrierFt(), apexToBarrierFt_,
              other.hasApexToBarrierFt(), other.apexToBarrierFt_);
          apexToBarrierIn_ = visitor.visitInt(
              hasApexToBarrierIn(), apexToBarrierIn_,
              other.hasApexToBarrierIn(), other.apexToBarrierIn_);
          waterToApexFt_ = visitor.visitInt(
              hasWaterToApexFt(), waterToApexFt_,
              other.hasWaterToApexFt(), other.waterToApexFt_);
          waterToApexIn_ = visitor.visitInt(
              hasWaterToApexIn(), waterToApexIn_,
              other.hasWaterToApexIn(), other.waterToApexIn_);
          coordinates_ = visitor.visitMessage(coordinates_, other.coordinates_);
          triangulation_ = visitor.visitMessage(triangulation_, other.triangulation_);
          escarpmentOver18Inches_ = visitor.visitBoolean(
              hasEscarpmentOver18Inches(), escarpmentOver18Inches_,
              other.hasEscarpmentOver18Inches(), other.escarpmentOver18Inches_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000001;
                  streetAddress_ = s;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  section_ = input.readInt32();
                  break;
                }
                case 26: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000004;
                  details_ = s;
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();
                  com.islandturtlewatch.nest.data.ReportProto.NestLocation.City value = com.islandturtlewatch.nest.data.ReportProto.NestLocation.City.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(4, rawValue);
                  } else {
                    bitField0_ |= 0x00000008;
                    city_ = rawValue;
                  }
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();
                  com.islandturtlewatch.nest.data.ReportProto.NestLocation.Placement value = com.islandturtlewatch.nest.data.ReportProto.NestLocation.Placement.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(5, rawValue);
                  } else {
                    bitField0_ |= 0x00000040;
                    placement_ = rawValue;
                  }
                  break;
                }
                case 50: {
                  com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000080) == 0x00000080)) {
                    subBuilder = obstructions_.toBuilder();
                  }
                  obstructions_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.NestLocation.NestObstructions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(obstructions_);
                    obstructions_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000080;
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000100;
                  apexToBarrierFt_ = input.readInt32();
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000200;
                  apexToBarrierIn_ = input.readInt32();
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000400;
                  waterToApexFt_ = input.readInt32();
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000800;
                  waterToApexIn_ = input.readInt32();
                  break;
                }
                case 90: {
                  com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.Builder subBuilder = null;
                  if (((bitField0_ & 0x00001000) == 0x00001000)) {
                    subBuilder = coordinates_.toBuilder();
                  }
                  coordinates_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(coordinates_);
                    coordinates_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00001000;
                  break;
                }
                case 98: {
                  com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation.Builder subBuilder = null;
                  if (((bitField0_ & 0x00002000) == 0x00002000)) {
                    subBuilder = triangulation_.toBuilder();
                  }
                  triangulation_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.NestLocation.Triangulation.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(triangulation_);
                    triangulation_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00002000;
                  break;
                }
                case 104: {
                  bitField0_ |= 0x00004000;
                  escarpmentOver18Inches_ = input.readBool();
                  break;
                }
                case 112: {
                  bitField0_ |= 0x00000020;
                  inCortezGroinReplacementArea_ = input.readBool();
                  break;
                }
                case 120: {
                  bitField0_ |= 0x00000010;
                  nestWithinProjectArea_ = input.readBool();
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.NestLocation> parser = PARSER;
          if (parser == null) {
            synchronized (com.islandturtlewatch.nest.data.ReportProto.NestLocation.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.NestLocation)
    private static final com.islandturtlewatch.nest.data.ReportProto.NestLocation DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new NestLocation();
    }

    public static com.islandturtlewatch.nest.data.ReportProto.NestLocation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<NestLocation> PARSER;

    public static com.google.protobuf.Parser<NestLocation> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface InterventionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.Intervention)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
     */
    boolean hasProtectionEvent();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent getProtectionEvent();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
     */
    boolean hasProtectionChangedEvent();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent getProtectionChangedEvent();

    /**
     * <code>optional string protection_changed_reason = 7;</code>
     */
    boolean hasProtectionChangedReason();
    /**
     * <code>optional string protection_changed_reason = 7;</code>
     */
    java.lang.String getProtectionChangedReason();
    /**
     * <code>optional string protection_changed_reason = 7;</code>
     */
    com.google.protobuf.ByteString
        getProtectionChangedReasonBytes();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
     */
    boolean hasRelocation();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.Relocation getRelocation();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
     */
    boolean hasExcavation();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.Excavation getExcavation();

    /**
     * <code>optional bool adopted = 4;</code>
     */
    boolean hasAdopted();
    /**
     * <code>optional bool adopted = 4;</code>
     */
    boolean getAdopted();

    /**
     * <pre>
     *NEXT ID = 8
     * </pre>
     *
     * <code>optional string adoptee = 5;</code>
     */
    boolean hasAdoptee();
    /**
     * <pre>
     *NEXT ID = 8
     * </pre>
     *
     * <code>optional string adoptee = 5;</code>
     */
    java.lang.String getAdoptee();
    /**
     * <pre>
     *NEXT ID = 8
     * </pre>
     *
     * <code>optional string adoptee = 5;</code>
     */
    com.google.protobuf.ByteString
        getAdopteeBytes();
  }
  /**
   * Protobuf type {@code com.islandturtlewatch.nest.data.Intervention}
   */
  public  static final class Intervention extends
      com.google.protobuf.GeneratedMessageLite<
          Intervention, Intervention.Builder> implements
      // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.Intervention)
      InterventionOrBuilder {
    private Intervention() {
      protectionChangedReason_ = "";
      adoptee_ = "";
    }
    public interface ProtectionEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.Intervention.ProtectionEvent)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      boolean hasTimestampMs();
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      long getTimestampMs();

      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Type type = 2;</code>
       */
      boolean hasType();
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Type type = 2;</code>
       */
      com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Type getType();

      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Reason reason = 3;</code>
       */
      boolean hasReason();
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Reason reason = 3;</code>
       */
      com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Reason getReason();

      /**
       * <code>optional string reason_other = 4;</code>
       */
      boolean hasReasonOther();
      /**
       * <code>optional string reason_other = 4;</code>
       */
      java.lang.String getReasonOther();
      /**
       * <code>optional string reason_other = 4;</code>
       */
      com.google.protobuf.ByteString
          getReasonOtherBytes();
    }
    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.Intervention.ProtectionEvent}
     */
    public  static final class ProtectionEvent extends
        com.google.protobuf.GeneratedMessageLite<
            ProtectionEvent, ProtectionEvent.Builder> implements
        // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.Intervention.ProtectionEvent)
        ProtectionEventOrBuilder {
      private ProtectionEvent() {
        type_ = 1;
        reason_ = 1;
        reasonOther_ = "";
      }
      /**
       * Protobuf enum {@code com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Type}
       */
      public enum Type
          implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>UNSET_TYPE = 1;</code>
         */
        UNSET_TYPE(1),
        /**
         * <code>SELF_RELEASING_CAGE = 2;</code>
         */
        SELF_RELEASING_CAGE(2),
        /**
         * <code>SELF_RELEASING_FLAT = 3;</code>
         */
        SELF_RELEASING_FLAT(3),
        /**
         * <code>RESTRAINING_CAGE = 4;</code>
         */
        RESTRAINING_CAGE(4),
        ;

        /**
         * <code>UNSET_TYPE = 1;</code>
         */
        public static final int UNSET_TYPE_VALUE = 1;
        /**
         * <code>SELF_RELEASING_CAGE = 2;</code>
         */
        public static final int SELF_RELEASING_CAGE_VALUE = 2;
        /**
         * <code>SELF_RELEASING_FLAT = 3;</code>
         */
        public static final int SELF_RELEASING_FLAT_VALUE = 3;
        /**
         * <code>RESTRAINING_CAGE = 4;</code>
         */
        public static final int RESTRAINING_CAGE_VALUE = 4;


        @java.lang.Override
        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Type valueOf(int value) {
          return forNumber(value);
        }

        public static Type forNumber(int value) {
          switch (value) {
            case 1: return UNSET_TYPE;
            case 2: return SELF_RELEASING_CAGE;
            case 3: return SELF_RELEASING_FLAT;
            case 4: return RESTRAINING_CAGE;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Type> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                @java.lang.Override
                public Type findValueByNumber(int number) {
                  return Type.forNumber(number);
                }
              };

        private final int value;

        private Type(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Type)
      }

      /**
       * Protobuf enum {@code com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Reason}
       */
      public enum Reason
          implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>UNSET_REASON = 1;</code>
         */
        UNSET_REASON(1),
        /**
         * <code>BEFORE_PREDITATION = 2;</code>
         */
        BEFORE_PREDITATION(2),
        /**
         * <code>AFTER_PREDITATION = 3;</code>
         */
        AFTER_PREDITATION(3),
        /**
         * <code>FOR_LIGHT_PROBLEMS = 4;</code>
         */
        FOR_LIGHT_PROBLEMS(4),
        /**
         * <code>OTHER = 5;</code>
         */
        OTHER(5),
        ;

        /**
         * <code>UNSET_REASON = 1;</code>
         */
        public static final int UNSET_REASON_VALUE = 1;
        /**
         * <code>BEFORE_PREDITATION = 2;</code>
         */
        public static final int BEFORE_PREDITATION_VALUE = 2;
        /**
         * <code>AFTER_PREDITATION = 3;</code>
         */
        public static final int AFTER_PREDITATION_VALUE = 3;
        /**
         * <code>FOR_LIGHT_PROBLEMS = 4;</code>
         */
        public static final int FOR_LIGHT_PROBLEMS_VALUE = 4;
        /**
         * <code>OTHER = 5;</code>
         */
        public static final int OTHER_VALUE = 5;


        @java.lang.Override
        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Reason valueOf(int value) {
          return forNumber(value);
        }

        public static Reason forNumber(int value) {
          switch (value) {
            case 1: return UNSET_REASON;
            case 2: return BEFORE_PREDITATION;
            case 3: return AFTER_PREDITATION;
            case 4: return FOR_LIGHT_PROBLEMS;
            case 5: return OTHER;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Reason>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Reason> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Reason>() {
                @java.lang.Override
                public Reason findValueByNumber(int number) {
                  return Reason.forNumber(number);
                }
              };

        private final int value;

        private Reason(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Reason)
      }

      private int bitField0_;
      public static final int TIMESTAMP_MS_FIELD_NUMBER = 1;
      private long timestampMs_;
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      @java.lang.Override
      public boolean hasTimestampMs() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      @java.lang.Override
      public long getTimestampMs() {
        return timestampMs_;
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      private void setTimestampMs(long value) {
        bitField0_ |= 0x00000001;
        timestampMs_ = value;
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      private void clearTimestampMs() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestampMs_ = 0L;
      }

      public static final int TYPE_FIELD_NUMBER = 2;
      private int type_;
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Type type = 2;</code>
       */
      @java.lang.Override
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Type type = 2;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Type getType() {
        com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Type result = com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Type.forNumber(type_);
        return result == null ? com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Type.UNSET_TYPE : result;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Type type = 2;</code>
       */
      private void setType(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value.getNumber();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Type type = 2;</code>
       */
      private void clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 1;
      }

      public static final int REASON_FIELD_NUMBER = 3;
      private int reason_;
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Reason reason = 3;</code>
       */
      @java.lang.Override
      public boolean hasReason() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Reason reason = 3;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Reason getReason() {
        com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Reason result = com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Reason.forNumber(reason_);
        return result == null ? com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Reason.UNSET_REASON : result;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Reason reason = 3;</code>
       */
      private void setReason(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Reason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        reason_ = value.getNumber();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Reason reason = 3;</code>
       */
      private void clearReason() {
        bitField0_ = (bitField0_ & ~0x00000004);
        reason_ = 1;
      }

      public static final int REASON_OTHER_FIELD_NUMBER = 4;
      private java.lang.String reasonOther_;
      /**
       * <code>optional string reason_other = 4;</code>
       */
      @java.lang.Override
      public boolean hasReasonOther() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string reason_other = 4;</code>
       */
      @java.lang.Override
      public java.lang.String getReasonOther() {
        return reasonOther_;
      }
      /**
       * <code>optional string reason_other = 4;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getReasonOtherBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(reasonOther_);
      }
      /**
       * <code>optional string reason_other = 4;</code>
       */
      private void setReasonOther(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        reasonOther_ = value;
      }
      /**
       * <code>optional string reason_other = 4;</code>
       */
      private void clearReasonOther() {
        bitField0_ = (bitField0_ & ~0x00000008);
        reasonOther_ = getDefaultInstance().getReasonOther();
      }
      /**
       * <code>optional string reason_other = 4;</code>
       */
      private void setReasonOtherBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        reasonOther_ = value.toStringUtf8();
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, timestampMs_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeEnum(2, type_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeEnum(3, reason_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeString(4, getReasonOther());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, timestampMs_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, type_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, reason_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(4, getReasonOther());
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * Protobuf type {@code com.islandturtlewatch.nest.data.Intervention.ProtectionEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent, Builder> implements
          // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.Intervention.ProtectionEvent)
          com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEventOrBuilder {
        // Construct using com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        @java.lang.Override
        public boolean hasTimestampMs() {
          return instance.hasTimestampMs();
        }
        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        @java.lang.Override
        public long getTimestampMs() {
          return instance.getTimestampMs();
        }
        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        public Builder setTimestampMs(long value) {
          copyOnWrite();
          instance.setTimestampMs(value);
          return this;
        }
        /**
         * <code>optional int64 timestamp_ms = 1;</code>
         */
        public Builder clearTimestampMs() {
          copyOnWrite();
          instance.clearTimestampMs();
          return this;
        }

        /**
         * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Type type = 2;</code>
         */
        @java.lang.Override
        public boolean hasType() {
          return instance.hasType();
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Type type = 2;</code>
         */
        @java.lang.Override
        public com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Type getType() {
          return instance.getType();
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Type type = 2;</code>
         */
        public Builder setType(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Type value) {
          copyOnWrite();
          instance.setType(value);
          return this;
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Type type = 2;</code>
         */
        public Builder clearType() {
          copyOnWrite();
          instance.clearType();
          return this;
        }

        /**
         * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Reason reason = 3;</code>
         */
        @java.lang.Override
        public boolean hasReason() {
          return instance.hasReason();
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Reason reason = 3;</code>
         */
        @java.lang.Override
        public com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Reason getReason() {
          return instance.getReason();
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Reason reason = 3;</code>
         */
        public Builder setReason(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Reason value) {
          copyOnWrite();
          instance.setReason(value);
          return this;
        }
        /**
         * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent.Reason reason = 3;</code>
         */
        public Builder clearReason() {
          copyOnWrite();
          instance.clearReason();
          return this;
        }

        /**
         * <code>optional string reason_other = 4;</code>
         */
        @java.lang.Override
        public boolean hasReasonOther() {
          return instance.hasReasonOther();
        }
        /**
         * <code>optional string reason_other = 4;</code>
         */
        @java.lang.Override
        public java.lang.String getReasonOther() {
          return instance.getReasonOther();
        }
        /**
         * <code>optional string reason_other = 4;</code>
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getReasonOtherBytes() {
          return instance.getReasonOtherBytes();
        }
        /**
         * <code>optional string reason_other = 4;</code>
         */
        public Builder setReasonOther(
            java.lang.String value) {
          copyOnWrite();
          instance.setReasonOther(value);
          return this;
        }
        /**
         * <code>optional string reason_other = 4;</code>
         */
        public Builder clearReasonOther() {
          copyOnWrite();
          instance.clearReasonOther();
          return this;
        }
        /**
         * <code>optional string reason_other = 4;</code>
         */
        public Builder setReasonOtherBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setReasonOtherBytes(value);
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.Intervention.ProtectionEvent)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent other = (com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent) arg1;
            timestampMs_ = visitor.visitLong(
                hasTimestampMs(), timestampMs_,
                other.hasTimestampMs(), other.timestampMs_);
            type_ = visitor.visitInt(hasType(), type_,
                other.hasType(), other.type_);
            reason_ = visitor.visitInt(hasReason(), reason_,
                other.hasReason(), other.reason_);
            reasonOther_ = visitor.visitString(
                hasReasonOther(), reasonOther_,
                other.hasReasonOther(), other.reasonOther_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    bitField0_ |= 0x00000001;
                    timestampMs_ = input.readInt64();
                    break;
                  }
                  case 16: {
                    int rawValue = input.readEnum();
                    com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Type value = com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Type.forNumber(rawValue);
                    if (value == null) {
                      super.mergeVarintField(2, rawValue);
                    } else {
                      bitField0_ |= 0x00000002;
                      type_ = rawValue;
                    }
                    break;
                  }
                  case 24: {
                    int rawValue = input.readEnum();
                    com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Reason value = com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Reason.forNumber(rawValue);
                    if (value == null) {
                      super.mergeVarintField(3, rawValue);
                    } else {
                      bitField0_ |= 0x00000004;
                      reason_ = rawValue;
                    }
                    break;
                  }
                  case 34: {
                    java.lang.String s = input.readString();
                    bitField0_ |= 0x00000008;
                    reasonOther_ = s;
                    break;
                  }
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent> parser = PARSER;
            if (parser == null) {
              synchronized (com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.class) {
                parser = PARSER;
                if (parser == null) {
                  parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.Intervention.ProtectionEvent)
      private static final com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent DEFAULT_INSTANCE;
      static {
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = new ProtectionEvent();
      }

      public static com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<ProtectionEvent> PARSER;

      public static com.google.protobuf.Parser<ProtectionEvent> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int PROTECTION_EVENT_FIELD_NUMBER = 1;
    private com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent protectionEvent_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
     */
    @java.lang.Override
    public boolean hasProtectionEvent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent getProtectionEvent() {
      return protectionEvent_ == null ? com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.getDefaultInstance() : protectionEvent_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
     */
    private void setProtectionEvent(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      protectionEvent_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
     */
    private void setProtectionEvent(
        com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Builder builderForValue) {
      protectionEvent_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeProtectionEvent(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (protectionEvent_ != null &&
          protectionEvent_ != com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.getDefaultInstance()) {
        protectionEvent_ =
          com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.newBuilder(protectionEvent_).mergeFrom(value).buildPartial();
      } else {
        protectionEvent_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
     */
    private void clearProtectionEvent() {  protectionEvent_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int PROTECTION_CHANGED_EVENT_FIELD_NUMBER = 6;
    private com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent protectionChangedEvent_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
     */
    @java.lang.Override
    public boolean hasProtectionChangedEvent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent getProtectionChangedEvent() {
      return protectionChangedEvent_ == null ? com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.getDefaultInstance() : protectionChangedEvent_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
     */
    private void setProtectionChangedEvent(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      protectionChangedEvent_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
     */
    private void setProtectionChangedEvent(
        com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Builder builderForValue) {
      protectionChangedEvent_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeProtectionChangedEvent(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (protectionChangedEvent_ != null &&
          protectionChangedEvent_ != com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.getDefaultInstance()) {
        protectionChangedEvent_ =
          com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.newBuilder(protectionChangedEvent_).mergeFrom(value).buildPartial();
      } else {
        protectionChangedEvent_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
     */
    private void clearProtectionChangedEvent() {  protectionChangedEvent_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int PROTECTION_CHANGED_REASON_FIELD_NUMBER = 7;
    private java.lang.String protectionChangedReason_;
    /**
     * <code>optional string protection_changed_reason = 7;</code>
     */
    @java.lang.Override
    public boolean hasProtectionChangedReason() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string protection_changed_reason = 7;</code>
     */
    @java.lang.Override
    public java.lang.String getProtectionChangedReason() {
      return protectionChangedReason_;
    }
    /**
     * <code>optional string protection_changed_reason = 7;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProtectionChangedReasonBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(protectionChangedReason_);
    }
    /**
     * <code>optional string protection_changed_reason = 7;</code>
     */
    private void setProtectionChangedReason(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      protectionChangedReason_ = value;
    }
    /**
     * <code>optional string protection_changed_reason = 7;</code>
     */
    private void clearProtectionChangedReason() {
      bitField0_ = (bitField0_ & ~0x00000004);
      protectionChangedReason_ = getDefaultInstance().getProtectionChangedReason();
    }
    /**
     * <code>optional string protection_changed_reason = 7;</code>
     */
    private void setProtectionChangedReasonBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      protectionChangedReason_ = value.toStringUtf8();
    }

    public static final int RELOCATION_FIELD_NUMBER = 2;
    private com.islandturtlewatch.nest.data.ReportProto.Relocation relocation_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
     */
    @java.lang.Override
    public boolean hasRelocation() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.Relocation getRelocation() {
      return relocation_ == null ? com.islandturtlewatch.nest.data.ReportProto.Relocation.getDefaultInstance() : relocation_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
     */
    private void setRelocation(com.islandturtlewatch.nest.data.ReportProto.Relocation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      relocation_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
     */
    private void setRelocation(
        com.islandturtlewatch.nest.data.ReportProto.Relocation.Builder builderForValue) {
      relocation_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeRelocation(com.islandturtlewatch.nest.data.ReportProto.Relocation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (relocation_ != null &&
          relocation_ != com.islandturtlewatch.nest.data.ReportProto.Relocation.getDefaultInstance()) {
        relocation_ =
          com.islandturtlewatch.nest.data.ReportProto.Relocation.newBuilder(relocation_).mergeFrom(value).buildPartial();
      } else {
        relocation_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
     */
    private void clearRelocation() {  relocation_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int EXCAVATION_FIELD_NUMBER = 3;
    private com.islandturtlewatch.nest.data.ReportProto.Excavation excavation_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
     */
    @java.lang.Override
    public boolean hasExcavation() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.Excavation getExcavation() {
      return excavation_ == null ? com.islandturtlewatch.nest.data.ReportProto.Excavation.getDefaultInstance() : excavation_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
     */
    private void setExcavation(com.islandturtlewatch.nest.data.ReportProto.Excavation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      excavation_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
     */
    private void setExcavation(
        com.islandturtlewatch.nest.data.ReportProto.Excavation.Builder builderForValue) {
      excavation_ = builderForValue.build();
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeExcavation(com.islandturtlewatch.nest.data.ReportProto.Excavation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (excavation_ != null &&
          excavation_ != com.islandturtlewatch.nest.data.ReportProto.Excavation.getDefaultInstance()) {
        excavation_ =
          com.islandturtlewatch.nest.data.ReportProto.Excavation.newBuilder(excavation_).mergeFrom(value).buildPartial();
      } else {
        excavation_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
     */
    private void clearExcavation() {  excavation_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int ADOPTED_FIELD_NUMBER = 4;
    private boolean adopted_;
    /**
     * <code>optional bool adopted = 4;</code>
     */
    @java.lang.Override
    public boolean hasAdopted() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool adopted = 4;</code>
     */
    @java.lang.Override
    public boolean getAdopted() {
      return adopted_;
    }
    /**
     * <code>optional bool adopted = 4;</code>
     */
    private void setAdopted(boolean value) {
      bitField0_ |= 0x00000020;
      adopted_ = value;
    }
    /**
     * <code>optional bool adopted = 4;</code>
     */
    private void clearAdopted() {
      bitField0_ = (bitField0_ & ~0x00000020);
      adopted_ = false;
    }

    public static final int ADOPTEE_FIELD_NUMBER = 5;
    private java.lang.String adoptee_;
    /**
     * <pre>
     *NEXT ID = 8
     * </pre>
     *
     * <code>optional string adoptee = 5;</code>
     */
    @java.lang.Override
    public boolean hasAdoptee() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     *NEXT ID = 8
     * </pre>
     *
     * <code>optional string adoptee = 5;</code>
     */
    @java.lang.Override
    public java.lang.String getAdoptee() {
      return adoptee_;
    }
    /**
     * <pre>
     *NEXT ID = 8
     * </pre>
     *
     * <code>optional string adoptee = 5;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAdopteeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(adoptee_);
    }
    /**
     * <pre>
     *NEXT ID = 8
     * </pre>
     *
     * <code>optional string adoptee = 5;</code>
     */
    private void setAdoptee(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      adoptee_ = value;
    }
    /**
     * <pre>
     *NEXT ID = 8
     * </pre>
     *
     * <code>optional string adoptee = 5;</code>
     */
    private void clearAdoptee() {
      bitField0_ = (bitField0_ & ~0x00000040);
      adoptee_ = getDefaultInstance().getAdoptee();
    }
    /**
     * <pre>
     *NEXT ID = 8
     * </pre>
     *
     * <code>optional string adoptee = 5;</code>
     */
    private void setAdopteeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
      adoptee_ = value.toStringUtf8();
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getProtectionEvent());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(2, getRelocation());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(3, getExcavation());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(4, adopted_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeString(5, getAdoptee());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(6, getProtectionChangedEvent());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(7, getProtectionChangedReason());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProtectionEvent());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRelocation());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getExcavation());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, adopted_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getAdoptee());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getProtectionChangedEvent());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getProtectionChangedReason());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.islandturtlewatch.nest.data.ReportProto.Intervention parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Intervention parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Intervention parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Intervention parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Intervention parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Intervention parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Intervention parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Intervention parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Intervention parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Intervention parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Intervention parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Intervention parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.Intervention prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.Intervention}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.islandturtlewatch.nest.data.ReportProto.Intervention, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.Intervention)
        com.islandturtlewatch.nest.data.ReportProto.InterventionOrBuilder {
      // Construct using com.islandturtlewatch.nest.data.ReportProto.Intervention.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
       */
      @java.lang.Override
      public boolean hasProtectionEvent() {
        return instance.hasProtectionEvent();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent getProtectionEvent() {
        return instance.getProtectionEvent();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
       */
      public Builder setProtectionEvent(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent value) {
        copyOnWrite();
        instance.setProtectionEvent(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
       */
      public Builder setProtectionEvent(
          com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Builder builderForValue) {
        copyOnWrite();
        instance.setProtectionEvent(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
       */
      public Builder mergeProtectionEvent(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent value) {
        copyOnWrite();
        instance.mergeProtectionEvent(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_event = 1;</code>
       */
      public Builder clearProtectionEvent() {  copyOnWrite();
        instance.clearProtectionEvent();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
       */
      @java.lang.Override
      public boolean hasProtectionChangedEvent() {
        return instance.hasProtectionChangedEvent();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent getProtectionChangedEvent() {
        return instance.getProtectionChangedEvent();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
       */
      public Builder setProtectionChangedEvent(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent value) {
        copyOnWrite();
        instance.setProtectionChangedEvent(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
       */
      public Builder setProtectionChangedEvent(
          com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Builder builderForValue) {
        copyOnWrite();
        instance.setProtectionChangedEvent(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
       */
      public Builder mergeProtectionChangedEvent(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent value) {
        copyOnWrite();
        instance.mergeProtectionChangedEvent(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Intervention.ProtectionEvent protection_changed_event = 6;</code>
       */
      public Builder clearProtectionChangedEvent() {  copyOnWrite();
        instance.clearProtectionChangedEvent();
        return this;
      }

      /**
       * <code>optional string protection_changed_reason = 7;</code>
       */
      @java.lang.Override
      public boolean hasProtectionChangedReason() {
        return instance.hasProtectionChangedReason();
      }
      /**
       * <code>optional string protection_changed_reason = 7;</code>
       */
      @java.lang.Override
      public java.lang.String getProtectionChangedReason() {
        return instance.getProtectionChangedReason();
      }
      /**
       * <code>optional string protection_changed_reason = 7;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getProtectionChangedReasonBytes() {
        return instance.getProtectionChangedReasonBytes();
      }
      /**
       * <code>optional string protection_changed_reason = 7;</code>
       */
      public Builder setProtectionChangedReason(
          java.lang.String value) {
        copyOnWrite();
        instance.setProtectionChangedReason(value);
        return this;
      }
      /**
       * <code>optional string protection_changed_reason = 7;</code>
       */
      public Builder clearProtectionChangedReason() {
        copyOnWrite();
        instance.clearProtectionChangedReason();
        return this;
      }
      /**
       * <code>optional string protection_changed_reason = 7;</code>
       */
      public Builder setProtectionChangedReasonBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setProtectionChangedReasonBytes(value);
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
       */
      @java.lang.Override
      public boolean hasRelocation() {
        return instance.hasRelocation();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.Relocation getRelocation() {
        return instance.getRelocation();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
       */
      public Builder setRelocation(com.islandturtlewatch.nest.data.ReportProto.Relocation value) {
        copyOnWrite();
        instance.setRelocation(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
       */
      public Builder setRelocation(
          com.islandturtlewatch.nest.data.ReportProto.Relocation.Builder builderForValue) {
        copyOnWrite();
        instance.setRelocation(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
       */
      public Builder mergeRelocation(com.islandturtlewatch.nest.data.ReportProto.Relocation value) {
        copyOnWrite();
        instance.mergeRelocation(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Relocation relocation = 2;</code>
       */
      public Builder clearRelocation() {  copyOnWrite();
        instance.clearRelocation();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
       */
      @java.lang.Override
      public boolean hasExcavation() {
        return instance.hasExcavation();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.Excavation getExcavation() {
        return instance.getExcavation();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
       */
      public Builder setExcavation(com.islandturtlewatch.nest.data.ReportProto.Excavation value) {
        copyOnWrite();
        instance.setExcavation(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
       */
      public Builder setExcavation(
          com.islandturtlewatch.nest.data.ReportProto.Excavation.Builder builderForValue) {
        copyOnWrite();
        instance.setExcavation(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
       */
      public Builder mergeExcavation(com.islandturtlewatch.nest.data.ReportProto.Excavation value) {
        copyOnWrite();
        instance.mergeExcavation(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Excavation excavation = 3;</code>
       */
      public Builder clearExcavation() {  copyOnWrite();
        instance.clearExcavation();
        return this;
      }

      /**
       * <code>optional bool adopted = 4;</code>
       */
      @java.lang.Override
      public boolean hasAdopted() {
        return instance.hasAdopted();
      }
      /**
       * <code>optional bool adopted = 4;</code>
       */
      @java.lang.Override
      public boolean getAdopted() {
        return instance.getAdopted();
      }
      /**
       * <code>optional bool adopted = 4;</code>
       */
      public Builder setAdopted(boolean value) {
        copyOnWrite();
        instance.setAdopted(value);
        return this;
      }
      /**
       * <code>optional bool adopted = 4;</code>
       */
      public Builder clearAdopted() {
        copyOnWrite();
        instance.clearAdopted();
        return this;
      }

      /**
       * <pre>
       *NEXT ID = 8
       * </pre>
       *
       * <code>optional string adoptee = 5;</code>
       */
      @java.lang.Override
      public boolean hasAdoptee() {
        return instance.hasAdoptee();
      }
      /**
       * <pre>
       *NEXT ID = 8
       * </pre>
       *
       * <code>optional string adoptee = 5;</code>
       */
      @java.lang.Override
      public java.lang.String getAdoptee() {
        return instance.getAdoptee();
      }
      /**
       * <pre>
       *NEXT ID = 8
       * </pre>
       *
       * <code>optional string adoptee = 5;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getAdopteeBytes() {
        return instance.getAdopteeBytes();
      }
      /**
       * <pre>
       *NEXT ID = 8
       * </pre>
       *
       * <code>optional string adoptee = 5;</code>
       */
      public Builder setAdoptee(
          java.lang.String value) {
        copyOnWrite();
        instance.setAdoptee(value);
        return this;
      }
      /**
       * <pre>
       *NEXT ID = 8
       * </pre>
       *
       * <code>optional string adoptee = 5;</code>
       */
      public Builder clearAdoptee() {
        copyOnWrite();
        instance.clearAdoptee();
        return this;
      }
      /**
       * <pre>
       *NEXT ID = 8
       * </pre>
       *
       * <code>optional string adoptee = 5;</code>
       */
      public Builder setAdopteeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAdopteeBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.Intervention)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.islandturtlewatch.nest.data.ReportProto.Intervention();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.islandturtlewatch.nest.data.ReportProto.Intervention other = (com.islandturtlewatch.nest.data.ReportProto.Intervention) arg1;
          protectionEvent_ = visitor.visitMessage(protectionEvent_, other.protectionEvent_);
          protectionChangedEvent_ = visitor.visitMessage(protectionChangedEvent_, other.protectionChangedEvent_);
          protectionChangedReason_ = visitor.visitString(
              hasProtectionChangedReason(), protectionChangedReason_,
              other.hasProtectionChangedReason(), other.protectionChangedReason_);
          relocation_ = visitor.visitMessage(relocation_, other.relocation_);
          excavation_ = visitor.visitMessage(excavation_, other.excavation_);
          adopted_ = visitor.visitBoolean(
              hasAdopted(), adopted_,
              other.hasAdopted(), other.adopted_);
          adoptee_ = visitor.visitString(
              hasAdoptee(), adoptee_,
              other.hasAdoptee(), other.adoptee_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = protectionEvent_.toBuilder();
                  }
                  protectionEvent_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(protectionEvent_);
                    protectionEvent_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 18: {
                  com.islandturtlewatch.nest.data.ReportProto.Relocation.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = relocation_.toBuilder();
                  }
                  relocation_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.Relocation.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(relocation_);
                    relocation_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                case 26: {
                  com.islandturtlewatch.nest.data.ReportProto.Excavation.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    subBuilder = excavation_.toBuilder();
                  }
                  excavation_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.Excavation.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(excavation_);
                    excavation_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000010;
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000020;
                  adopted_ = input.readBool();
                  break;
                }
                case 42: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000040;
                  adoptee_ = s;
                  break;
                }
                case 50: {
                  com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = protectionChangedEvent_.toBuilder();
                  }
                  protectionChangedEvent_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.Intervention.ProtectionEvent.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(protectionChangedEvent_);
                    protectionChangedEvent_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 58: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000004;
                  protectionChangedReason_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.Intervention> parser = PARSER;
          if (parser == null) {
            synchronized (com.islandturtlewatch.nest.data.ReportProto.Intervention.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.Intervention)
    private static final com.islandturtlewatch.nest.data.ReportProto.Intervention DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new Intervention();
    }

    public static com.islandturtlewatch.nest.data.ReportProto.Intervention getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Intervention> PARSER;

    public static com.google.protobuf.Parser<Intervention> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ExcavationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.Excavation)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int64 timestamp_ms = 1;</code>
     */
    boolean hasTimestampMs();
    /**
     * <code>optional int64 timestamp_ms = 1;</code>
     */
    long getTimestampMs();

    /**
     * <code>optional bool excavated = 2;</code>
     */
    boolean hasExcavated();
    /**
     * <code>optional bool excavated = 2;</code>
     */
    boolean getExcavated();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation.ExcavationFailureReason failure_reason = 3;</code>
     */
    boolean hasFailureReason();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation.ExcavationFailureReason failure_reason = 3;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.Excavation.ExcavationFailureReason getFailureReason();

    /**
     * <code>optional string failure_other = 4;</code>
     */
    boolean hasFailureOther();
    /**
     * <code>optional string failure_other = 4;</code>
     */
    java.lang.String getFailureOther();
    /**
     * <code>optional string failure_other = 4;</code>
     */
    com.google.protobuf.ByteString
        getFailureOtherBytes();

    /**
     * <code>optional int32 dead_in_nest = 5;</code>
     */
    boolean hasDeadInNest();
    /**
     * <code>optional int32 dead_in_nest = 5;</code>
     */
    int getDeadInNest();

    /**
     * <code>optional int32 live_in_nest = 6;</code>
     */
    boolean hasLiveInNest();
    /**
     * <code>optional int32 live_in_nest = 6;</code>
     */
    int getLiveInNest();

    /**
     * <code>optional int32 hatched_shells = 7;</code>
     */
    boolean hasHatchedShells();
    /**
     * <code>optional int32 hatched_shells = 7;</code>
     */
    int getHatchedShells();

    /**
     * <code>optional int32 dead_pipped = 8;</code>
     */
    boolean hasDeadPipped();
    /**
     * <code>optional int32 dead_pipped = 8;</code>
     */
    int getDeadPipped();

    /**
     * <code>optional int32 live_pipped = 9;</code>
     */
    boolean hasLivePipped();
    /**
     * <code>optional int32 live_pipped = 9;</code>
     */
    int getLivePipped();

    /**
     * <code>optional int32 whole_unhatched = 10;</code>
     */
    boolean hasWholeUnhatched();
    /**
     * <code>optional int32 whole_unhatched = 10;</code>
     */
    int getWholeUnhatched();

    /**
     * <code>optional int32 eggs_destroyed = 11;</code>
     */
    boolean hasEggsDestroyed();
    /**
     * <code>optional int32 eggs_destroyed = 11;</code>
     */
    int getEggsDestroyed();
  }
  /**
   * Protobuf type {@code com.islandturtlewatch.nest.data.Excavation}
   */
  public  static final class Excavation extends
      com.google.protobuf.GeneratedMessageLite<
          Excavation, Excavation.Builder> implements
      // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.Excavation)
      ExcavationOrBuilder {
    private Excavation() {
      failureReason_ = 1;
      failureOther_ = "";
    }
    /**
     * Protobuf enum {@code com.islandturtlewatch.nest.data.Excavation.ExcavationFailureReason}
     */
    public enum ExcavationFailureReason
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>UNSET_REASON = 1;</code>
       */
      UNSET_REASON(1),
      /**
       * <code>EGGS_NOT_FOUND = 2;</code>
       */
      EGGS_NOT_FOUND(2),
      /**
       * <code>EGGS_HATCHLINGS_TOO_DECAYED = 3;</code>
       */
      EGGS_HATCHLINGS_TOO_DECAYED(3),
      /**
       * <code>OTHER = 4;</code>
       */
      OTHER(4),
      /**
       * <code>COMPLETE_WASHOUT = 5;</code>
       */
      COMPLETE_WASHOUT(5),
      ;

      /**
       * <code>UNSET_REASON = 1;</code>
       */
      public static final int UNSET_REASON_VALUE = 1;
      /**
       * <code>EGGS_NOT_FOUND = 2;</code>
       */
      public static final int EGGS_NOT_FOUND_VALUE = 2;
      /**
       * <code>EGGS_HATCHLINGS_TOO_DECAYED = 3;</code>
       */
      public static final int EGGS_HATCHLINGS_TOO_DECAYED_VALUE = 3;
      /**
       * <code>OTHER = 4;</code>
       */
      public static final int OTHER_VALUE = 4;
      /**
       * <code>COMPLETE_WASHOUT = 5;</code>
       */
      public static final int COMPLETE_WASHOUT_VALUE = 5;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ExcavationFailureReason valueOf(int value) {
        return forNumber(value);
      }

      public static ExcavationFailureReason forNumber(int value) {
        switch (value) {
          case 1: return UNSET_REASON;
          case 2: return EGGS_NOT_FOUND;
          case 3: return EGGS_HATCHLINGS_TOO_DECAYED;
          case 4: return OTHER;
          case 5: return COMPLETE_WASHOUT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ExcavationFailureReason>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ExcavationFailureReason> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ExcavationFailureReason>() {
              @java.lang.Override
              public ExcavationFailureReason findValueByNumber(int number) {
                return ExcavationFailureReason.forNumber(number);
              }
            };

      private final int value;

      private ExcavationFailureReason(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.Excavation.ExcavationFailureReason)
    }

    private int bitField0_;
    public static final int TIMESTAMP_MS_FIELD_NUMBER = 1;
    private long timestampMs_;
    /**
     * <code>optional int64 timestamp_ms = 1;</code>
     */
    @java.lang.Override
    public boolean hasTimestampMs() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 timestamp_ms = 1;</code>
     */
    @java.lang.Override
    public long getTimestampMs() {
      return timestampMs_;
    }
    /**
     * <code>optional int64 timestamp_ms = 1;</code>
     */
    private void setTimestampMs(long value) {
      bitField0_ |= 0x00000001;
      timestampMs_ = value;
    }
    /**
     * <code>optional int64 timestamp_ms = 1;</code>
     */
    private void clearTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00000001);
      timestampMs_ = 0L;
    }

    public static final int EXCAVATED_FIELD_NUMBER = 2;
    private boolean excavated_;
    /**
     * <code>optional bool excavated = 2;</code>
     */
    @java.lang.Override
    public boolean hasExcavated() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool excavated = 2;</code>
     */
    @java.lang.Override
    public boolean getExcavated() {
      return excavated_;
    }
    /**
     * <code>optional bool excavated = 2;</code>
     */
    private void setExcavated(boolean value) {
      bitField0_ |= 0x00000002;
      excavated_ = value;
    }
    /**
     * <code>optional bool excavated = 2;</code>
     */
    private void clearExcavated() {
      bitField0_ = (bitField0_ & ~0x00000002);
      excavated_ = false;
    }

    public static final int FAILURE_REASON_FIELD_NUMBER = 3;
    private int failureReason_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation.ExcavationFailureReason failure_reason = 3;</code>
     */
    @java.lang.Override
    public boolean hasFailureReason() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation.ExcavationFailureReason failure_reason = 3;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.Excavation.ExcavationFailureReason getFailureReason() {
      com.islandturtlewatch.nest.data.ReportProto.Excavation.ExcavationFailureReason result = com.islandturtlewatch.nest.data.ReportProto.Excavation.ExcavationFailureReason.forNumber(failureReason_);
      return result == null ? com.islandturtlewatch.nest.data.ReportProto.Excavation.ExcavationFailureReason.UNSET_REASON : result;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation.ExcavationFailureReason failure_reason = 3;</code>
     */
    private void setFailureReason(com.islandturtlewatch.nest.data.ReportProto.Excavation.ExcavationFailureReason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      failureReason_ = value.getNumber();
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Excavation.ExcavationFailureReason failure_reason = 3;</code>
     */
    private void clearFailureReason() {
      bitField0_ = (bitField0_ & ~0x00000004);
      failureReason_ = 1;
    }

    public static final int FAILURE_OTHER_FIELD_NUMBER = 4;
    private java.lang.String failureOther_;
    /**
     * <code>optional string failure_other = 4;</code>
     */
    @java.lang.Override
    public boolean hasFailureOther() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string failure_other = 4;</code>
     */
    @java.lang.Override
    public java.lang.String getFailureOther() {
      return failureOther_;
    }
    /**
     * <code>optional string failure_other = 4;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFailureOtherBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(failureOther_);
    }
    /**
     * <code>optional string failure_other = 4;</code>
     */
    private void setFailureOther(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      failureOther_ = value;
    }
    /**
     * <code>optional string failure_other = 4;</code>
     */
    private void clearFailureOther() {
      bitField0_ = (bitField0_ & ~0x00000008);
      failureOther_ = getDefaultInstance().getFailureOther();
    }
    /**
     * <code>optional string failure_other = 4;</code>
     */
    private void setFailureOtherBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      failureOther_ = value.toStringUtf8();
    }

    public static final int DEAD_IN_NEST_FIELD_NUMBER = 5;
    private int deadInNest_;
    /**
     * <code>optional int32 dead_in_nest = 5;</code>
     */
    @java.lang.Override
    public boolean hasDeadInNest() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 dead_in_nest = 5;</code>
     */
    @java.lang.Override
    public int getDeadInNest() {
      return deadInNest_;
    }
    /**
     * <code>optional int32 dead_in_nest = 5;</code>
     */
    private void setDeadInNest(int value) {
      bitField0_ |= 0x00000010;
      deadInNest_ = value;
    }
    /**
     * <code>optional int32 dead_in_nest = 5;</code>
     */
    private void clearDeadInNest() {
      bitField0_ = (bitField0_ & ~0x00000010);
      deadInNest_ = 0;
    }

    public static final int LIVE_IN_NEST_FIELD_NUMBER = 6;
    private int liveInNest_;
    /**
     * <code>optional int32 live_in_nest = 6;</code>
     */
    @java.lang.Override
    public boolean hasLiveInNest() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 live_in_nest = 6;</code>
     */
    @java.lang.Override
    public int getLiveInNest() {
      return liveInNest_;
    }
    /**
     * <code>optional int32 live_in_nest = 6;</code>
     */
    private void setLiveInNest(int value) {
      bitField0_ |= 0x00000020;
      liveInNest_ = value;
    }
    /**
     * <code>optional int32 live_in_nest = 6;</code>
     */
    private void clearLiveInNest() {
      bitField0_ = (bitField0_ & ~0x00000020);
      liveInNest_ = 0;
    }

    public static final int HATCHED_SHELLS_FIELD_NUMBER = 7;
    private int hatchedShells_;
    /**
     * <code>optional int32 hatched_shells = 7;</code>
     */
    @java.lang.Override
    public boolean hasHatchedShells() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 hatched_shells = 7;</code>
     */
    @java.lang.Override
    public int getHatchedShells() {
      return hatchedShells_;
    }
    /**
     * <code>optional int32 hatched_shells = 7;</code>
     */
    private void setHatchedShells(int value) {
      bitField0_ |= 0x00000040;
      hatchedShells_ = value;
    }
    /**
     * <code>optional int32 hatched_shells = 7;</code>
     */
    private void clearHatchedShells() {
      bitField0_ = (bitField0_ & ~0x00000040);
      hatchedShells_ = 0;
    }

    public static final int DEAD_PIPPED_FIELD_NUMBER = 8;
    private int deadPipped_;
    /**
     * <code>optional int32 dead_pipped = 8;</code>
     */
    @java.lang.Override
    public boolean hasDeadPipped() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 dead_pipped = 8;</code>
     */
    @java.lang.Override
    public int getDeadPipped() {
      return deadPipped_;
    }
    /**
     * <code>optional int32 dead_pipped = 8;</code>
     */
    private void setDeadPipped(int value) {
      bitField0_ |= 0x00000080;
      deadPipped_ = value;
    }
    /**
     * <code>optional int32 dead_pipped = 8;</code>
     */
    private void clearDeadPipped() {
      bitField0_ = (bitField0_ & ~0x00000080);
      deadPipped_ = 0;
    }

    public static final int LIVE_PIPPED_FIELD_NUMBER = 9;
    private int livePipped_;
    /**
     * <code>optional int32 live_pipped = 9;</code>
     */
    @java.lang.Override
    public boolean hasLivePipped() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 live_pipped = 9;</code>
     */
    @java.lang.Override
    public int getLivePipped() {
      return livePipped_;
    }
    /**
     * <code>optional int32 live_pipped = 9;</code>
     */
    private void setLivePipped(int value) {
      bitField0_ |= 0x00000100;
      livePipped_ = value;
    }
    /**
     * <code>optional int32 live_pipped = 9;</code>
     */
    private void clearLivePipped() {
      bitField0_ = (bitField0_ & ~0x00000100);
      livePipped_ = 0;
    }

    public static final int WHOLE_UNHATCHED_FIELD_NUMBER = 10;
    private int wholeUnhatched_;
    /**
     * <code>optional int32 whole_unhatched = 10;</code>
     */
    @java.lang.Override
    public boolean hasWholeUnhatched() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 whole_unhatched = 10;</code>
     */
    @java.lang.Override
    public int getWholeUnhatched() {
      return wholeUnhatched_;
    }
    /**
     * <code>optional int32 whole_unhatched = 10;</code>
     */
    private void setWholeUnhatched(int value) {
      bitField0_ |= 0x00000200;
      wholeUnhatched_ = value;
    }
    /**
     * <code>optional int32 whole_unhatched = 10;</code>
     */
    private void clearWholeUnhatched() {
      bitField0_ = (bitField0_ & ~0x00000200);
      wholeUnhatched_ = 0;
    }

    public static final int EGGS_DESTROYED_FIELD_NUMBER = 11;
    private int eggsDestroyed_;
    /**
     * <code>optional int32 eggs_destroyed = 11;</code>
     */
    @java.lang.Override
    public boolean hasEggsDestroyed() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 eggs_destroyed = 11;</code>
     */
    @java.lang.Override
    public int getEggsDestroyed() {
      return eggsDestroyed_;
    }
    /**
     * <code>optional int32 eggs_destroyed = 11;</code>
     */
    private void setEggsDestroyed(int value) {
      bitField0_ |= 0x00000400;
      eggsDestroyed_ = value;
    }
    /**
     * <code>optional int32 eggs_destroyed = 11;</code>
     */
    private void clearEggsDestroyed() {
      bitField0_ = (bitField0_ & ~0x00000400);
      eggsDestroyed_ = 0;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, timestampMs_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, excavated_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, failureReason_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getFailureOther());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, deadInNest_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, liveInNest_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, hatchedShells_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, deadPipped_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, livePipped_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, wholeUnhatched_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, eggsDestroyed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, timestampMs_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, excavated_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, failureReason_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getFailureOther());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, deadInNest_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, liveInNest_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, hatchedShells_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, deadPipped_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, livePipped_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, wholeUnhatched_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, eggsDestroyed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.islandturtlewatch.nest.data.ReportProto.Excavation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Excavation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Excavation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Excavation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Excavation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Excavation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Excavation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Excavation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Excavation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Excavation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Excavation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Excavation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.Excavation prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.Excavation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.islandturtlewatch.nest.data.ReportProto.Excavation, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.Excavation)
        com.islandturtlewatch.nest.data.ReportProto.ExcavationOrBuilder {
      // Construct using com.islandturtlewatch.nest.data.ReportProto.Excavation.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      @java.lang.Override
      public boolean hasTimestampMs() {
        return instance.hasTimestampMs();
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      @java.lang.Override
      public long getTimestampMs() {
        return instance.getTimestampMs();
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      public Builder setTimestampMs(long value) {
        copyOnWrite();
        instance.setTimestampMs(value);
        return this;
      }
      /**
       * <code>optional int64 timestamp_ms = 1;</code>
       */
      public Builder clearTimestampMs() {
        copyOnWrite();
        instance.clearTimestampMs();
        return this;
      }

      /**
       * <code>optional bool excavated = 2;</code>
       */
      @java.lang.Override
      public boolean hasExcavated() {
        return instance.hasExcavated();
      }
      /**
       * <code>optional bool excavated = 2;</code>
       */
      @java.lang.Override
      public boolean getExcavated() {
        return instance.getExcavated();
      }
      /**
       * <code>optional bool excavated = 2;</code>
       */
      public Builder setExcavated(boolean value) {
        copyOnWrite();
        instance.setExcavated(value);
        return this;
      }
      /**
       * <code>optional bool excavated = 2;</code>
       */
      public Builder clearExcavated() {
        copyOnWrite();
        instance.clearExcavated();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.Excavation.ExcavationFailureReason failure_reason = 3;</code>
       */
      @java.lang.Override
      public boolean hasFailureReason() {
        return instance.hasFailureReason();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Excavation.ExcavationFailureReason failure_reason = 3;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.Excavation.ExcavationFailureReason getFailureReason() {
        return instance.getFailureReason();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Excavation.ExcavationFailureReason failure_reason = 3;</code>
       */
      public Builder setFailureReason(com.islandturtlewatch.nest.data.ReportProto.Excavation.ExcavationFailureReason value) {
        copyOnWrite();
        instance.setFailureReason(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Excavation.ExcavationFailureReason failure_reason = 3;</code>
       */
      public Builder clearFailureReason() {
        copyOnWrite();
        instance.clearFailureReason();
        return this;
      }

      /**
       * <code>optional string failure_other = 4;</code>
       */
      @java.lang.Override
      public boolean hasFailureOther() {
        return instance.hasFailureOther();
      }
      /**
       * <code>optional string failure_other = 4;</code>
       */
      @java.lang.Override
      public java.lang.String getFailureOther() {
        return instance.getFailureOther();
      }
      /**
       * <code>optional string failure_other = 4;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFailureOtherBytes() {
        return instance.getFailureOtherBytes();
      }
      /**
       * <code>optional string failure_other = 4;</code>
       */
      public Builder setFailureOther(
          java.lang.String value) {
        copyOnWrite();
        instance.setFailureOther(value);
        return this;
      }
      /**
       * <code>optional string failure_other = 4;</code>
       */
      public Builder clearFailureOther() {
        copyOnWrite();
        instance.clearFailureOther();
        return this;
      }
      /**
       * <code>optional string failure_other = 4;</code>
       */
      public Builder setFailureOtherBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFailureOtherBytes(value);
        return this;
      }

      /**
       * <code>optional int32 dead_in_nest = 5;</code>
       */
      @java.lang.Override
      public boolean hasDeadInNest() {
        return instance.hasDeadInNest();
      }
      /**
       * <code>optional int32 dead_in_nest = 5;</code>
       */
      @java.lang.Override
      public int getDeadInNest() {
        return instance.getDeadInNest();
      }
      /**
       * <code>optional int32 dead_in_nest = 5;</code>
       */
      public Builder setDeadInNest(int value) {
        copyOnWrite();
        instance.setDeadInNest(value);
        return this;
      }
      /**
       * <code>optional int32 dead_in_nest = 5;</code>
       */
      public Builder clearDeadInNest() {
        copyOnWrite();
        instance.clearDeadInNest();
        return this;
      }

      /**
       * <code>optional int32 live_in_nest = 6;</code>
       */
      @java.lang.Override
      public boolean hasLiveInNest() {
        return instance.hasLiveInNest();
      }
      /**
       * <code>optional int32 live_in_nest = 6;</code>
       */
      @java.lang.Override
      public int getLiveInNest() {
        return instance.getLiveInNest();
      }
      /**
       * <code>optional int32 live_in_nest = 6;</code>
       */
      public Builder setLiveInNest(int value) {
        copyOnWrite();
        instance.setLiveInNest(value);
        return this;
      }
      /**
       * <code>optional int32 live_in_nest = 6;</code>
       */
      public Builder clearLiveInNest() {
        copyOnWrite();
        instance.clearLiveInNest();
        return this;
      }

      /**
       * <code>optional int32 hatched_shells = 7;</code>
       */
      @java.lang.Override
      public boolean hasHatchedShells() {
        return instance.hasHatchedShells();
      }
      /**
       * <code>optional int32 hatched_shells = 7;</code>
       */
      @java.lang.Override
      public int getHatchedShells() {
        return instance.getHatchedShells();
      }
      /**
       * <code>optional int32 hatched_shells = 7;</code>
       */
      public Builder setHatchedShells(int value) {
        copyOnWrite();
        instance.setHatchedShells(value);
        return this;
      }
      /**
       * <code>optional int32 hatched_shells = 7;</code>
       */
      public Builder clearHatchedShells() {
        copyOnWrite();
        instance.clearHatchedShells();
        return this;
      }

      /**
       * <code>optional int32 dead_pipped = 8;</code>
       */
      @java.lang.Override
      public boolean hasDeadPipped() {
        return instance.hasDeadPipped();
      }
      /**
       * <code>optional int32 dead_pipped = 8;</code>
       */
      @java.lang.Override
      public int getDeadPipped() {
        return instance.getDeadPipped();
      }
      /**
       * <code>optional int32 dead_pipped = 8;</code>
       */
      public Builder setDeadPipped(int value) {
        copyOnWrite();
        instance.setDeadPipped(value);
        return this;
      }
      /**
       * <code>optional int32 dead_pipped = 8;</code>
       */
      public Builder clearDeadPipped() {
        copyOnWrite();
        instance.clearDeadPipped();
        return this;
      }

      /**
       * <code>optional int32 live_pipped = 9;</code>
       */
      @java.lang.Override
      public boolean hasLivePipped() {
        return instance.hasLivePipped();
      }
      /**
       * <code>optional int32 live_pipped = 9;</code>
       */
      @java.lang.Override
      public int getLivePipped() {
        return instance.getLivePipped();
      }
      /**
       * <code>optional int32 live_pipped = 9;</code>
       */
      public Builder setLivePipped(int value) {
        copyOnWrite();
        instance.setLivePipped(value);
        return this;
      }
      /**
       * <code>optional int32 live_pipped = 9;</code>
       */
      public Builder clearLivePipped() {
        copyOnWrite();
        instance.clearLivePipped();
        return this;
      }

      /**
       * <code>optional int32 whole_unhatched = 10;</code>
       */
      @java.lang.Override
      public boolean hasWholeUnhatched() {
        return instance.hasWholeUnhatched();
      }
      /**
       * <code>optional int32 whole_unhatched = 10;</code>
       */
      @java.lang.Override
      public int getWholeUnhatched() {
        return instance.getWholeUnhatched();
      }
      /**
       * <code>optional int32 whole_unhatched = 10;</code>
       */
      public Builder setWholeUnhatched(int value) {
        copyOnWrite();
        instance.setWholeUnhatched(value);
        return this;
      }
      /**
       * <code>optional int32 whole_unhatched = 10;</code>
       */
      public Builder clearWholeUnhatched() {
        copyOnWrite();
        instance.clearWholeUnhatched();
        return this;
      }

      /**
       * <code>optional int32 eggs_destroyed = 11;</code>
       */
      @java.lang.Override
      public boolean hasEggsDestroyed() {
        return instance.hasEggsDestroyed();
      }
      /**
       * <code>optional int32 eggs_destroyed = 11;</code>
       */
      @java.lang.Override
      public int getEggsDestroyed() {
        return instance.getEggsDestroyed();
      }
      /**
       * <code>optional int32 eggs_destroyed = 11;</code>
       */
      public Builder setEggsDestroyed(int value) {
        copyOnWrite();
        instance.setEggsDestroyed(value);
        return this;
      }
      /**
       * <code>optional int32 eggs_destroyed = 11;</code>
       */
      public Builder clearEggsDestroyed() {
        copyOnWrite();
        instance.clearEggsDestroyed();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.Excavation)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.islandturtlewatch.nest.data.ReportProto.Excavation();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.islandturtlewatch.nest.data.ReportProto.Excavation other = (com.islandturtlewatch.nest.data.ReportProto.Excavation) arg1;
          timestampMs_ = visitor.visitLong(
              hasTimestampMs(), timestampMs_,
              other.hasTimestampMs(), other.timestampMs_);
          excavated_ = visitor.visitBoolean(
              hasExcavated(), excavated_,
              other.hasExcavated(), other.excavated_);
          failureReason_ = visitor.visitInt(hasFailureReason(), failureReason_,
              other.hasFailureReason(), other.failureReason_);
          failureOther_ = visitor.visitString(
              hasFailureOther(), failureOther_,
              other.hasFailureOther(), other.failureOther_);
          deadInNest_ = visitor.visitInt(
              hasDeadInNest(), deadInNest_,
              other.hasDeadInNest(), other.deadInNest_);
          liveInNest_ = visitor.visitInt(
              hasLiveInNest(), liveInNest_,
              other.hasLiveInNest(), other.liveInNest_);
          hatchedShells_ = visitor.visitInt(
              hasHatchedShells(), hatchedShells_,
              other.hasHatchedShells(), other.hatchedShells_);
          deadPipped_ = visitor.visitInt(
              hasDeadPipped(), deadPipped_,
              other.hasDeadPipped(), other.deadPipped_);
          livePipped_ = visitor.visitInt(
              hasLivePipped(), livePipped_,
              other.hasLivePipped(), other.livePipped_);
          wholeUnhatched_ = visitor.visitInt(
              hasWholeUnhatched(), wholeUnhatched_,
              other.hasWholeUnhatched(), other.wholeUnhatched_);
          eggsDestroyed_ = visitor.visitInt(
              hasEggsDestroyed(), eggsDestroyed_,
              other.hasEggsDestroyed(), other.eggsDestroyed_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  timestampMs_ = input.readInt64();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  excavated_ = input.readBool();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  com.islandturtlewatch.nest.data.ReportProto.Excavation.ExcavationFailureReason value = com.islandturtlewatch.nest.data.ReportProto.Excavation.ExcavationFailureReason.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    failureReason_ = rawValue;
                  }
                  break;
                }
                case 34: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000008;
                  failureOther_ = s;
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  deadInNest_ = input.readInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000020;
                  liveInNest_ = input.readInt32();
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000040;
                  hatchedShells_ = input.readInt32();
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000080;
                  deadPipped_ = input.readInt32();
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000100;
                  livePipped_ = input.readInt32();
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000200;
                  wholeUnhatched_ = input.readInt32();
                  break;
                }
                case 88: {
                  bitField0_ |= 0x00000400;
                  eggsDestroyed_ = input.readInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.Excavation> parser = PARSER;
          if (parser == null) {
            synchronized (com.islandturtlewatch.nest.data.ReportProto.Excavation.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.Excavation)
    private static final com.islandturtlewatch.nest.data.ReportProto.Excavation DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new Excavation();
    }

    public static com.islandturtlewatch.nest.data.ReportProto.Excavation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Excavation> PARSER;

    public static com.google.protobuf.Parser<Excavation> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RelocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.Relocation)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional bool was_relocated = 1;</code>
     */
    boolean hasWasRelocated();
    /**
     * <code>optional bool was_relocated = 1;</code>
     */
    boolean getWasRelocated();

    /**
     * <code>optional int64 timestamp_ms = 2;</code>
     */
    boolean hasTimestampMs();
    /**
     * <code>optional int64 timestamp_ms = 2;</code>
     */
    long getTimestampMs();

    /**
     * <code>optional string new_address = 3;</code>
     */
    boolean hasNewAddress();
    /**
     * <code>optional string new_address = 3;</code>
     */
    java.lang.String getNewAddress();
    /**
     * <code>optional string new_address = 3;</code>
     */
    com.google.protobuf.ByteString
        getNewAddressBytes();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
     */
    boolean hasCoordinates();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates getCoordinates();

    /**
     * <code>optional int32 eggs_relocated = 5;</code>
     */
    boolean hasEggsRelocated();
    /**
     * <code>optional int32 eggs_relocated = 5;</code>
     */
    int getEggsRelocated();

    /**
     * <code>optional int32 eggs_destroyed = 6;</code>
     */
    boolean hasEggsDestroyed();
    /**
     * <code>optional int32 eggs_destroyed = 6;</code>
     */
    int getEggsDestroyed();

    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation.Reason reason = 11;</code>
     */
    boolean hasReason();
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation.Reason reason = 11;</code>
     */
    com.islandturtlewatch.nest.data.ReportProto.Relocation.Reason getReason();
  }
  /**
   * <pre>
   * ids 7-10 temporarily blocked until test data is wiped.
   * </pre>
   *
   * Protobuf type {@code com.islandturtlewatch.nest.data.Relocation}
   */
  public  static final class Relocation extends
      com.google.protobuf.GeneratedMessageLite<
          Relocation, Relocation.Builder> implements
      // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.Relocation)
      RelocationOrBuilder {
    private Relocation() {
      newAddress_ = "";
      reason_ = 1;
    }
    /**
     * Protobuf enum {@code com.islandturtlewatch.nest.data.Relocation.Reason}
     */
    public enum Reason
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>UNSET_REASON = 1;</code>
       */
      UNSET_REASON(1),
      /**
       * <code>HIGH_WATER = 2;</code>
       */
      HIGH_WATER(2),
      /**
       * <code>PREDATION = 3;</code>
       */
      PREDATION(3),
      /**
       * <code>WASHING_OUT = 4;</code>
       */
      WASHING_OUT(4),
      /**
       * <code>CONSTRUCTION_RENOURISHMENT = 5;</code>
       */
      CONSTRUCTION_RENOURISHMENT(5),
      ;

      /**
       * <code>UNSET_REASON = 1;</code>
       */
      public static final int UNSET_REASON_VALUE = 1;
      /**
       * <code>HIGH_WATER = 2;</code>
       */
      public static final int HIGH_WATER_VALUE = 2;
      /**
       * <code>PREDATION = 3;</code>
       */
      public static final int PREDATION_VALUE = 3;
      /**
       * <code>WASHING_OUT = 4;</code>
       */
      public static final int WASHING_OUT_VALUE = 4;
      /**
       * <code>CONSTRUCTION_RENOURISHMENT = 5;</code>
       */
      public static final int CONSTRUCTION_RENOURISHMENT_VALUE = 5;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Reason valueOf(int value) {
        return forNumber(value);
      }

      public static Reason forNumber(int value) {
        switch (value) {
          case 1: return UNSET_REASON;
          case 2: return HIGH_WATER;
          case 3: return PREDATION;
          case 4: return WASHING_OUT;
          case 5: return CONSTRUCTION_RENOURISHMENT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Reason>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Reason> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Reason>() {
              @java.lang.Override
              public Reason findValueByNumber(int number) {
                return Reason.forNumber(number);
              }
            };

      private final int value;

      private Reason(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.islandturtlewatch.nest.data.Relocation.Reason)
    }

    private int bitField0_;
    public static final int WAS_RELOCATED_FIELD_NUMBER = 1;
    private boolean wasRelocated_;
    /**
     * <code>optional bool was_relocated = 1;</code>
     */
    @java.lang.Override
    public boolean hasWasRelocated() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool was_relocated = 1;</code>
     */
    @java.lang.Override
    public boolean getWasRelocated() {
      return wasRelocated_;
    }
    /**
     * <code>optional bool was_relocated = 1;</code>
     */
    private void setWasRelocated(boolean value) {
      bitField0_ |= 0x00000001;
      wasRelocated_ = value;
    }
    /**
     * <code>optional bool was_relocated = 1;</code>
     */
    private void clearWasRelocated() {
      bitField0_ = (bitField0_ & ~0x00000001);
      wasRelocated_ = false;
    }

    public static final int TIMESTAMP_MS_FIELD_NUMBER = 2;
    private long timestampMs_;
    /**
     * <code>optional int64 timestamp_ms = 2;</code>
     */
    @java.lang.Override
    public boolean hasTimestampMs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 timestamp_ms = 2;</code>
     */
    @java.lang.Override
    public long getTimestampMs() {
      return timestampMs_;
    }
    /**
     * <code>optional int64 timestamp_ms = 2;</code>
     */
    private void setTimestampMs(long value) {
      bitField0_ |= 0x00000002;
      timestampMs_ = value;
    }
    /**
     * <code>optional int64 timestamp_ms = 2;</code>
     */
    private void clearTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00000002);
      timestampMs_ = 0L;
    }

    public static final int NEW_ADDRESS_FIELD_NUMBER = 3;
    private java.lang.String newAddress_;
    /**
     * <code>optional string new_address = 3;</code>
     */
    @java.lang.Override
    public boolean hasNewAddress() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string new_address = 3;</code>
     */
    @java.lang.Override
    public java.lang.String getNewAddress() {
      return newAddress_;
    }
    /**
     * <code>optional string new_address = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNewAddressBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(newAddress_);
    }
    /**
     * <code>optional string new_address = 3;</code>
     */
    private void setNewAddress(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      newAddress_ = value;
    }
    /**
     * <code>optional string new_address = 3;</code>
     */
    private void clearNewAddress() {
      bitField0_ = (bitField0_ & ~0x00000004);
      newAddress_ = getDefaultInstance().getNewAddress();
    }
    /**
     * <code>optional string new_address = 3;</code>
     */
    private void setNewAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      newAddress_ = value.toStringUtf8();
    }

    public static final int COORDINATES_FIELD_NUMBER = 4;
    private com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates coordinates_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
     */
    @java.lang.Override
    public boolean hasCoordinates() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates getCoordinates() {
      return coordinates_ == null ? com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.getDefaultInstance() : coordinates_;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
     */
    private void setCoordinates(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
      if (value == null) {
        throw new NullPointerException();
      }
      coordinates_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
     */
    private void setCoordinates(
        com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.Builder builderForValue) {
      coordinates_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCoordinates(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (coordinates_ != null &&
          coordinates_ != com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.getDefaultInstance()) {
        coordinates_ =
          com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.newBuilder(coordinates_).mergeFrom(value).buildPartial();
      } else {
        coordinates_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
     */
    private void clearCoordinates() {  coordinates_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int EGGS_RELOCATED_FIELD_NUMBER = 5;
    private int eggsRelocated_;
    /**
     * <code>optional int32 eggs_relocated = 5;</code>
     */
    @java.lang.Override
    public boolean hasEggsRelocated() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 eggs_relocated = 5;</code>
     */
    @java.lang.Override
    public int getEggsRelocated() {
      return eggsRelocated_;
    }
    /**
     * <code>optional int32 eggs_relocated = 5;</code>
     */
    private void setEggsRelocated(int value) {
      bitField0_ |= 0x00000010;
      eggsRelocated_ = value;
    }
    /**
     * <code>optional int32 eggs_relocated = 5;</code>
     */
    private void clearEggsRelocated() {
      bitField0_ = (bitField0_ & ~0x00000010);
      eggsRelocated_ = 0;
    }

    public static final int EGGS_DESTROYED_FIELD_NUMBER = 6;
    private int eggsDestroyed_;
    /**
     * <code>optional int32 eggs_destroyed = 6;</code>
     */
    @java.lang.Override
    public boolean hasEggsDestroyed() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 eggs_destroyed = 6;</code>
     */
    @java.lang.Override
    public int getEggsDestroyed() {
      return eggsDestroyed_;
    }
    /**
     * <code>optional int32 eggs_destroyed = 6;</code>
     */
    private void setEggsDestroyed(int value) {
      bitField0_ |= 0x00000020;
      eggsDestroyed_ = value;
    }
    /**
     * <code>optional int32 eggs_destroyed = 6;</code>
     */
    private void clearEggsDestroyed() {
      bitField0_ = (bitField0_ & ~0x00000020);
      eggsDestroyed_ = 0;
    }

    public static final int REASON_FIELD_NUMBER = 11;
    private int reason_;
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation.Reason reason = 11;</code>
     */
    @java.lang.Override
    public boolean hasReason() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation.Reason reason = 11;</code>
     */
    @java.lang.Override
    public com.islandturtlewatch.nest.data.ReportProto.Relocation.Reason getReason() {
      com.islandturtlewatch.nest.data.ReportProto.Relocation.Reason result = com.islandturtlewatch.nest.data.ReportProto.Relocation.Reason.forNumber(reason_);
      return result == null ? com.islandturtlewatch.nest.data.ReportProto.Relocation.Reason.UNSET_REASON : result;
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation.Reason reason = 11;</code>
     */
    private void setReason(com.islandturtlewatch.nest.data.ReportProto.Relocation.Reason value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000040;
      reason_ = value.getNumber();
    }
    /**
     * <code>optional .com.islandturtlewatch.nest.data.Relocation.Reason reason = 11;</code>
     */
    private void clearReason() {
      bitField0_ = (bitField0_ & ~0x00000040);
      reason_ = 1;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, wasRelocated_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, timestampMs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getNewAddress());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getCoordinates());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, eggsRelocated_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, eggsDestroyed_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(11, reason_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, wasRelocated_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timestampMs_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getNewAddress());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCoordinates());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, eggsRelocated_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, eggsDestroyed_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, reason_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.islandturtlewatch.nest.data.ReportProto.Relocation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Relocation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Relocation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Relocation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Relocation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Relocation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Relocation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Relocation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Relocation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Relocation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Relocation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.Relocation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.Relocation prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ids 7-10 temporarily blocked until test data is wiped.
     * </pre>
     *
     * Protobuf type {@code com.islandturtlewatch.nest.data.Relocation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.islandturtlewatch.nest.data.ReportProto.Relocation, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.Relocation)
        com.islandturtlewatch.nest.data.ReportProto.RelocationOrBuilder {
      // Construct using com.islandturtlewatch.nest.data.ReportProto.Relocation.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional bool was_relocated = 1;</code>
       */
      @java.lang.Override
      public boolean hasWasRelocated() {
        return instance.hasWasRelocated();
      }
      /**
       * <code>optional bool was_relocated = 1;</code>
       */
      @java.lang.Override
      public boolean getWasRelocated() {
        return instance.getWasRelocated();
      }
      /**
       * <code>optional bool was_relocated = 1;</code>
       */
      public Builder setWasRelocated(boolean value) {
        copyOnWrite();
        instance.setWasRelocated(value);
        return this;
      }
      /**
       * <code>optional bool was_relocated = 1;</code>
       */
      public Builder clearWasRelocated() {
        copyOnWrite();
        instance.clearWasRelocated();
        return this;
      }

      /**
       * <code>optional int64 timestamp_ms = 2;</code>
       */
      @java.lang.Override
      public boolean hasTimestampMs() {
        return instance.hasTimestampMs();
      }
      /**
       * <code>optional int64 timestamp_ms = 2;</code>
       */
      @java.lang.Override
      public long getTimestampMs() {
        return instance.getTimestampMs();
      }
      /**
       * <code>optional int64 timestamp_ms = 2;</code>
       */
      public Builder setTimestampMs(long value) {
        copyOnWrite();
        instance.setTimestampMs(value);
        return this;
      }
      /**
       * <code>optional int64 timestamp_ms = 2;</code>
       */
      public Builder clearTimestampMs() {
        copyOnWrite();
        instance.clearTimestampMs();
        return this;
      }

      /**
       * <code>optional string new_address = 3;</code>
       */
      @java.lang.Override
      public boolean hasNewAddress() {
        return instance.hasNewAddress();
      }
      /**
       * <code>optional string new_address = 3;</code>
       */
      @java.lang.Override
      public java.lang.String getNewAddress() {
        return instance.getNewAddress();
      }
      /**
       * <code>optional string new_address = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNewAddressBytes() {
        return instance.getNewAddressBytes();
      }
      /**
       * <code>optional string new_address = 3;</code>
       */
      public Builder setNewAddress(
          java.lang.String value) {
        copyOnWrite();
        instance.setNewAddress(value);
        return this;
      }
      /**
       * <code>optional string new_address = 3;</code>
       */
      public Builder clearNewAddress() {
        copyOnWrite();
        instance.clearNewAddress();
        return this;
      }
      /**
       * <code>optional string new_address = 3;</code>
       */
      public Builder setNewAddressBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNewAddressBytes(value);
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
       */
      @java.lang.Override
      public boolean hasCoordinates() {
        return instance.hasCoordinates();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates getCoordinates() {
        return instance.getCoordinates();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
       */
      public Builder setCoordinates(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
        copyOnWrite();
        instance.setCoordinates(value);
        return this;
        }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
       */
      public Builder setCoordinates(
          com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.Builder builderForValue) {
        copyOnWrite();
        instance.setCoordinates(builderForValue);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
       */
      public Builder mergeCoordinates(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates value) {
        copyOnWrite();
        instance.mergeCoordinates(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.GpsCoordinates coordinates = 4;</code>
       */
      public Builder clearCoordinates() {  copyOnWrite();
        instance.clearCoordinates();
        return this;
      }

      /**
       * <code>optional int32 eggs_relocated = 5;</code>
       */
      @java.lang.Override
      public boolean hasEggsRelocated() {
        return instance.hasEggsRelocated();
      }
      /**
       * <code>optional int32 eggs_relocated = 5;</code>
       */
      @java.lang.Override
      public int getEggsRelocated() {
        return instance.getEggsRelocated();
      }
      /**
       * <code>optional int32 eggs_relocated = 5;</code>
       */
      public Builder setEggsRelocated(int value) {
        copyOnWrite();
        instance.setEggsRelocated(value);
        return this;
      }
      /**
       * <code>optional int32 eggs_relocated = 5;</code>
       */
      public Builder clearEggsRelocated() {
        copyOnWrite();
        instance.clearEggsRelocated();
        return this;
      }

      /**
       * <code>optional int32 eggs_destroyed = 6;</code>
       */
      @java.lang.Override
      public boolean hasEggsDestroyed() {
        return instance.hasEggsDestroyed();
      }
      /**
       * <code>optional int32 eggs_destroyed = 6;</code>
       */
      @java.lang.Override
      public int getEggsDestroyed() {
        return instance.getEggsDestroyed();
      }
      /**
       * <code>optional int32 eggs_destroyed = 6;</code>
       */
      public Builder setEggsDestroyed(int value) {
        copyOnWrite();
        instance.setEggsDestroyed(value);
        return this;
      }
      /**
       * <code>optional int32 eggs_destroyed = 6;</code>
       */
      public Builder clearEggsDestroyed() {
        copyOnWrite();
        instance.clearEggsDestroyed();
        return this;
      }

      /**
       * <code>optional .com.islandturtlewatch.nest.data.Relocation.Reason reason = 11;</code>
       */
      @java.lang.Override
      public boolean hasReason() {
        return instance.hasReason();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Relocation.Reason reason = 11;</code>
       */
      @java.lang.Override
      public com.islandturtlewatch.nest.data.ReportProto.Relocation.Reason getReason() {
        return instance.getReason();
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Relocation.Reason reason = 11;</code>
       */
      public Builder setReason(com.islandturtlewatch.nest.data.ReportProto.Relocation.Reason value) {
        copyOnWrite();
        instance.setReason(value);
        return this;
      }
      /**
       * <code>optional .com.islandturtlewatch.nest.data.Relocation.Reason reason = 11;</code>
       */
      public Builder clearReason() {
        copyOnWrite();
        instance.clearReason();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.Relocation)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.islandturtlewatch.nest.data.ReportProto.Relocation();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.islandturtlewatch.nest.data.ReportProto.Relocation other = (com.islandturtlewatch.nest.data.ReportProto.Relocation) arg1;
          wasRelocated_ = visitor.visitBoolean(
              hasWasRelocated(), wasRelocated_,
              other.hasWasRelocated(), other.wasRelocated_);
          timestampMs_ = visitor.visitLong(
              hasTimestampMs(), timestampMs_,
              other.hasTimestampMs(), other.timestampMs_);
          newAddress_ = visitor.visitString(
              hasNewAddress(), newAddress_,
              other.hasNewAddress(), other.newAddress_);
          coordinates_ = visitor.visitMessage(coordinates_, other.coordinates_);
          eggsRelocated_ = visitor.visitInt(
              hasEggsRelocated(), eggsRelocated_,
              other.hasEggsRelocated(), other.eggsRelocated_);
          eggsDestroyed_ = visitor.visitInt(
              hasEggsDestroyed(), eggsDestroyed_,
              other.hasEggsDestroyed(), other.eggsDestroyed_);
          reason_ = visitor.visitInt(hasReason(), reason_,
              other.hasReason(), other.reason_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  wasRelocated_ = input.readBool();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  timestampMs_ = input.readInt64();
                  break;
                }
                case 26: {
                  java.lang.String s = input.readString();
                  bitField0_ |= 0x00000004;
                  newAddress_ = s;
                  break;
                }
                case 34: {
                  com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = coordinates_.toBuilder();
                  }
                  coordinates_ = input.readMessage(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(coordinates_);
                    coordinates_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  eggsRelocated_ = input.readInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000020;
                  eggsDestroyed_ = input.readInt32();
                  break;
                }
                case 88: {
                  int rawValue = input.readEnum();
                  com.islandturtlewatch.nest.data.ReportProto.Relocation.Reason value = com.islandturtlewatch.nest.data.ReportProto.Relocation.Reason.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(11, rawValue);
                  } else {
                    bitField0_ |= 0x00000040;
                    reason_ = rawValue;
                  }
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.Relocation> parser = PARSER;
          if (parser == null) {
            synchronized (com.islandturtlewatch.nest.data.ReportProto.Relocation.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.Relocation)
    private static final com.islandturtlewatch.nest.data.ReportProto.Relocation DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new Relocation();
    }

    public static com.islandturtlewatch.nest.data.ReportProto.Relocation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Relocation> PARSER;

    public static com.google.protobuf.Parser<Relocation> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GpsCoordinatesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.islandturtlewatch.nest.data.GpsCoordinates)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional double lat = 1;</code>
     */
    boolean hasLat();
    /**
     * <code>optional double lat = 1;</code>
     */
    double getLat();

    /**
     * <code>optional double long = 2;</code>
     */
    boolean hasLong();
    /**
     * <code>optional double long = 2;</code>
     */
    double getLong();
  }
  /**
   * Protobuf type {@code com.islandturtlewatch.nest.data.GpsCoordinates}
   */
  public  static final class GpsCoordinates extends
      com.google.protobuf.GeneratedMessageLite<
          GpsCoordinates, GpsCoordinates.Builder> implements
      // @@protoc_insertion_point(message_implements:com.islandturtlewatch.nest.data.GpsCoordinates)
      GpsCoordinatesOrBuilder {
    private GpsCoordinates() {
    }
    private int bitField0_;
    public static final int LAT_FIELD_NUMBER = 1;
    private double lat_;
    /**
     * <code>optional double lat = 1;</code>
     */
    @java.lang.Override
    public boolean hasLat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional double lat = 1;</code>
     */
    @java.lang.Override
    public double getLat() {
      return lat_;
    }
    /**
     * <code>optional double lat = 1;</code>
     */
    private void setLat(double value) {
      bitField0_ |= 0x00000001;
      lat_ = value;
    }
    /**
     * <code>optional double lat = 1;</code>
     */
    private void clearLat() {
      bitField0_ = (bitField0_ & ~0x00000001);
      lat_ = 0D;
    }

    public static final int LONG_FIELD_NUMBER = 2;
    private double long_;
    /**
     * <code>optional double long = 2;</code>
     */
    @java.lang.Override
    public boolean hasLong() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional double long = 2;</code>
     */
    @java.lang.Override
    public double getLong() {
      return long_;
    }
    /**
     * <code>optional double long = 2;</code>
     */
    private void setLong(double value) {
      bitField0_ |= 0x00000002;
      long_ = value;
    }
    /**
     * <code>optional double long = 2;</code>
     */
    private void clearLong() {
      bitField0_ = (bitField0_ & ~0x00000002);
      long_ = 0D;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, lat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, long_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, lat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, long_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code com.islandturtlewatch.nest.data.GpsCoordinates}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.islandturtlewatch.nest.data.GpsCoordinates)
        com.islandturtlewatch.nest.data.ReportProto.GpsCoordinatesOrBuilder {
      // Construct using com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional double lat = 1;</code>
       */
      @java.lang.Override
      public boolean hasLat() {
        return instance.hasLat();
      }
      /**
       * <code>optional double lat = 1;</code>
       */
      @java.lang.Override
      public double getLat() {
        return instance.getLat();
      }
      /**
       * <code>optional double lat = 1;</code>
       */
      public Builder setLat(double value) {
        copyOnWrite();
        instance.setLat(value);
        return this;
      }
      /**
       * <code>optional double lat = 1;</code>
       */
      public Builder clearLat() {
        copyOnWrite();
        instance.clearLat();
        return this;
      }

      /**
       * <code>optional double long = 2;</code>
       */
      @java.lang.Override
      public boolean hasLong() {
        return instance.hasLong();
      }
      /**
       * <code>optional double long = 2;</code>
       */
      @java.lang.Override
      public double getLong() {
        return instance.getLong();
      }
      /**
       * <code>optional double long = 2;</code>
       */
      public Builder setLong(double value) {
        copyOnWrite();
        instance.setLong(value);
        return this;
      }
      /**
       * <code>optional double long = 2;</code>
       */
      public Builder clearLong() {
        copyOnWrite();
        instance.clearLong();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.islandturtlewatch.nest.data.GpsCoordinates)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates other = (com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates) arg1;
          lat_ = visitor.visitDouble(
              hasLat(), lat_,
              other.hasLat(), other.lat_);
          long_ = visitor.visitDouble(
              hasLong(), long_,
              other.hasLong(), other.long_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 9: {
                  bitField0_ |= 0x00000001;
                  lat_ = input.readDouble();
                  break;
                }
                case 17: {
                  bitField0_ |= 0x00000002;
                  long_ = input.readDouble();
                  break;
                }
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates> parser = PARSER;
          if (parser == null) {
            synchronized (com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates.class) {
              parser = PARSER;
              if (parser == null) {
                parser = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.islandturtlewatch.nest.data.GpsCoordinates)
    private static final com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates DEFAULT_INSTANCE;
    static {
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = new GpsCoordinates();
    }

    public static com.islandturtlewatch.nest.data.ReportProto.GpsCoordinates getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GpsCoordinates> PARSER;

    public static com.google.protobuf.Parser<GpsCoordinates> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
