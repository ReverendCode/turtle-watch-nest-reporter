package com.islandturtlewatch.nest.data;
option java_outer_classname = "ReportProto";

message Report {
  // Timestamp for start of day the crawl was found, in milli seconds.
  optional int64 timestamp_found_ms = 1;

  optional NestLocation location = 2;
  optional string observers = 3;
  optional Activity activity = 4;
  optional NestCondition condition = 5;
  optional Intervention intervention = 6;

  optional string additional_notes = 7;
}

message Activity {
  optional bool nest_verified = 1;
  optional bool nest_not_verified = 2;
  optional bool nest_relocated = 3;
  optional bool false_crawl = 4;
  optional bool abandoned_body_pits = 5;
  optional bool abandoned_egg_cavities = 6;
}

message NestCondition {
  optional int64 vandalized_timestamp = 1;
  optional int64 poached_timestamp = 2;
  optional bool roots_invaded_eggshells = 3;
  optional bool eggs_scattered_by_another = 4;

  message WashEvent {
    optional int64 timestamp = 1;
    optional string storm_name = 2;
  }

  repeated WashEvent wash_over = 5;
  optional WashEvent wash_out = 6;

  message PreditationEvent {
    optional int64 timestamp = 1;
    optional string predator = 2;
    optional int32 number_of_eggs = 3;
  }
  repeated PreditationEvent preditation = 7;

  repeated int64 hatch_timestamp = 8;
  optional bool disorientation = 9;
}

message NestLocation {
  optional string street_address = 1;
  optional int32 section = 2;
  optional string details = 3;

  enum City {
    AM = 1;
    BB = 2;
    HB = 3;    
  }
  optional City city = 4;

  enum Placement {
    OPEN_BEACH = 1;
    IN_VEGITATION = 2;
    AT_VEGITATION = 3;
    AT_ESCARPMENT = 4;
    ON_ESCARPMENT = 5;
  }
  optional Placement placement = 5;

  message NestObstructions {
    optional bool seawall_rocks = 1;
    optional bool furniture = 2;
    optional bool escarpment = 3;
    optional string other = 4;
  }
  optional NestObstructions obstructions = 6;
}

message Intervention {
  optional bool adopted = 1;
  optional string adopted_by = 2;
  
  message ProtectionEvent {
    optional int64 timestamp = 1;
    
    enum Type {
      SELF_RELEASING_CAGE = 1;
      SELF_RELEASING_FLAT = 2;
      RESTRAINING_CAGE = 3; 
    }
    optional Type type = 2;

    enum Reason {
      BEFORE_PREDITATION = 1;
      AFTER_PREDITATION = 2;
      FOR_LIGHT_PROBLEMS = 3;
    }
    optional Reason reason = 3;
  }
  repeated ProtectionEvent protection_event = 3;

  optional Relocation relocation = 4;
  optional Excavation excavation = 5;
}

message Excavation {
  optional int32 timestamp = 1;
  optional bool excavated = 2;

  enum ExcavationFailureReason {
    EGGS_NOT_FOUND = 1;
    EGGS_HATCHLINGS_TOO_DECAYED = 2;
    OTHER = 3;
  }
  optional ExcavationFailureReason failure_reason = 3;
  optional string failure_other = 4;

  optional int32 dead_in_nest = 5;
  optional int32 live_in_nest = 6;
  optional int32 hatched_shells = 7;
  optional int32 dead_pipped = 8;
  optional int32 live_pipped = 9;
  optional int32 whole_unhatched = 10;
  optional int32 eggs_destroyed = 11;
}

message Relocation {
  optional int64 timestamp = 1;
  optional string new_address = 2;
  optional GpsCoordinates coordinates = 3;
  optional int32 eggs_relocated = 4;
  optional int32 eggs_destroyed = 5;

  enum RelocationReason {
    HIGH_WATER = 1;
    PREDATION = 2;
    WASHING_OUT = 3;
    CONSTRUCTION_RENOURISHMENT = 4;
  }
  optional RelocationReason reason = 6;
}

message GpsCoordinates {
  optional double lat = 1;
  optional double int64 = 2;
}
