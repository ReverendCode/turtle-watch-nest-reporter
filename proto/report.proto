package com.islandturtlewatch.nest.data;
option java_outer_classname = "ReportProto";

// Represents a saved report with metadata.
message ReportWrapper {
  optional Report report = 1;
  optional ReportRef ref = 2;
  optional bool active = 3;
}

// Uniquely identifies this version of the report.
message ReportRef {
  optional string owner_id = 2;
  optional uint64 report_id = 3;
  optional uint64 version = 4;
}

message Report {
  // Timestamp for start of day the crawl was found, in milli seconds.
  optional int64 timestamp_found_ms = 1;
  optional int32 nest_number = 2;
  optional int32 false_crawl_number = 3;

  enum Species {
    NOT_REPORTED = 4;
    LOGGERHEAD = 1;
    GREEN = 2;
    OTHER = 3;
  }
  optional Species species = 4 [default = NOT_REPORTED];
  optional string species_other = 5;

  enum NestStatus {
    UNKNOWN = 1;
    NEST_VERIFIED = 2;
    NEST_NOT_VERIFIED = 3;
    NEST_RELOCATED = 4;
    FALSE_CRAWL = 5;
  }
  optional NestStatus status = 6;

  optional NestLocation location = 7;
  optional string observers = 8;
  optional NestCondition condition = 9;
  optional Intervention intervention = 10;

  optional string additional_notes = 11;

  repeated Image image = 12;
}

message Image {
  optional string file_name = 1;

  // Usually only set for transport.
  optional bytes raw_data = 2;
}

message NestCondition {
  optional bool vandalized = 1;
  optional int64 vandalized_timestamp_ms = 2;

  enum VandalismType {
    UNKOWN = 1;
    STAKES_REMOVED = 2;
    NEST_DUG_INTO = 3;
    EGGS_AFFECTED = 4;
  }
  optional VandalismType vandalism_type = 15;


  optional bool poached = 3;
  optional int64 poached_timestamp_ms = 4;
  optional bool poached_eggs_removed = 17;
  optional bool roots_invaded_eggshells = 5;
  optional bool eggs_scattered_by_another = 6;
  optional int64 eggs_scattered_by_another_timestamp_ms = 16;

  message WashEvent {
    optional int64 timestamp_ms = 1;
    optional string storm_name = 2;
  }

  repeated WashEvent wash_over = 7;
  optional WashEvent wash_out = 8;

  message PreditationEvent {
    optional int64 timestamp_ms = 1;
    optional string predator = 2;
    optional int32 number_of_eggs = 3;
  }
  repeated PreditationEvent preditation = 9;

  optional int64 hatch_timestamp_ms = 10;
  optional int64 additional_hatch_timestamp_ms = 11;
  optional bool disorientation = 12;
  
  optional bool abandoned_body_pits = 13;
  optional bool abandoned_egg_cavities = 14;

  // Next ID=18
}

message NestLocation {
  optional string street_address = 1;
  optional int32 section = 2;
  optional string details = 3;

  enum City {
    UNSET_CITY = 1;
    AM = 2;
    BB = 3;
    HB = 4;    
  }
  optional City city = 4;

  enum Placement {
    UNSET_PLACEMENT = 1;
    OPEN_BEACH = 2;
    IN_VEGITATION = 3;
    AT_VEGITATION = 4;
    AT_ESCARPMENT = 5;
    ON_ESCARPMENT = 6;
  }
  optional Placement placement = 5;

  message NestObstructions {
    optional bool seawall_rocks = 1;
    optional bool furniture = 2;
    optional bool escarpment = 3;
    optional string other = 4;
  }
  optional NestObstructions obstructions = 6;

  optional int32 apex_to_barrier_ft = 7;
  optional int32 apex_to_barrier_in = 8;
  optional int32 water_to_apex_ft = 9;
  optional int32 water_to_apex_in = 10;
  
  optional GpsCoordinates coordinates = 11;
  message Triangulation {
    optional GpsCoordinates north = 1;
    optional int32 north_ft = 3;
    optional int32 north_in = 4;

    optional GpsCoordinates south = 2;
    optional int32 south_ft = 5;
    optional int32 south_in = 6;
  }
  optional Triangulation triangulation = 12;
}

message Intervention {
  message ProtectionEvent {
    optional int64 timestamp_ms = 1;
    
    enum Type {
      UNSET_TYPE = 1;
      SELF_RELEASING_CAGE = 2;
      SELF_RELEASING_FLAT = 3;
      RESTRAINING_CAGE = 4; 
    }
    optional Type type = 2;

    enum Reason {
      UNSET_REASON = 1;
      BEFORE_PREDITATION = 2;
      AFTER_PREDITATION = 3;
      FOR_LIGHT_PROBLEMS = 4;
    }
    optional Reason reason = 3;
  }
  optional ProtectionEvent protection_event = 1;

  optional Relocation relocation = 2;
  optional Excavation excavation = 3;
}

message Excavation {
  optional int64 timestamp_ms = 1;
  optional bool excavated = 2;

  enum ExcavationFailureReason {
    UNSET_REASON = 1;
    EGGS_NOT_FOUND = 2;
    EGGS_HATCHLINGS_TOO_DECAYED = 3;
    OTHER = 4;
  }
  optional ExcavationFailureReason failure_reason = 3;
  optional string failure_other = 4;

  optional int32 dead_in_nest = 5;
  optional int32 live_in_nest = 6;
  optional int32 hatched_shells = 7;
  optional int32 dead_pipped = 8;
  optional int32 live_pipped = 9;
  optional int32 whole_unhatched = 10;
  optional int32 eggs_destroyed = 11;
}

// ids 7-10 temporarily blocked until test data is wiped.
message Relocation {
  optional bool was_relocated = 1;
  optional int64 timestamp_ms = 2;
  optional string new_address = 3;
  optional GpsCoordinates coordinates = 4;
  optional int32 eggs_relocated = 5;
  optional int32 eggs_destroyed = 6;

  enum Reason{
    UNSET_REASON = 1;
    HIGH_WATER = 2;
    PREDATION = 3;
    WASHING_OUT = 4;
    CONSTRUCTION_RENOURISHMENT = 5;
  }
  optional Reason reason = 11;
}

message GpsCoordinates {
  optional double lat = 1;
  optional double long = 2;
}
